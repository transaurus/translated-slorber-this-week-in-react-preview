{
  "source_file_path_relative_to_docusaurus_root": "newsletter/124/index.mdx",
  "source_file_content_hash": "c7b7e2490296e8bfe6e77bda4fcedc2f106ca25022dc1ba59194ad2c41dd17b1",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /124\ntitle: \"This Week In React #124: FLIP, Lifecycle, Next.js, TypeScript, Vanilla-Extract, LiveView, Remix, GitHub, Race Conditions, Fontpie, Remotion...\"\nauthors: [slorber]\ndate: 11-15-2022\n---",
      "source_content_hash": "ce5b5d42b0a78644b73638dc73cff0085d54cb901904fbba1ffe5e42a7bdd786",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "After a few intense weeks, the React ecosystem slows down a bit in terms of major announcements.",
      "source_content_hash": "951f89a464cbee2985af59aeb2c155c0ca4030affd019cf99ad021a561be7b55",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ここ数週間の激しい動きの後、Reactエコシステムは大きな発表という点では少し落ち着いてきました。"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "We still have some very good articles coming out. The TypeScript plugin for Next.js looks awesome!",
      "source_content_hash": "efa31762d7d588ae42ca1296b089f224b8ddd77291fb7310b3478e622a3f3e22",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それでも非常に良い記事がいくつか公開されています。Next.js向けのTypeScriptプラグインは素晴らしいですね！"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "The GitHub Universe conference has ended. GitHub seems to be using React more and more, on some views, and also via GitHub Blocks based on MDX.",
      "source_content_hash": "51536903a597f2dae559c021a2cb481c4f70d5d0af28bb5b10e97ed3c6260f4a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "GitHub Universeカンファレンスが終了しました。GitHubは一部のビューでReactをますます使用しているようです。また、MDXベースのGitHub Blocksを通じても使用されています。"
      }
    },
    {
      "segment_id": "6429a3aa",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6429a3aa"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [このニュースレターをTwitterでチェック](https://slo.im/thread) - ビジュアルフォーマット 🎨**"
      }
    },
    {
      "segment_id": "507b4652",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "fcd52337",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_fcd52337"
      }
    },
    {
      "segment_id": "42e34e45",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_42e34e45"
      }
    },
    {
      "segment_id": "caf67047",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "3c36424c",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "[![FlyCode Makes React Apps Editable without coding, Git based](/emails/issues/124/flycode.jpg)](https://bit.ly/3UPwAoJ)",
      "source_content_hash": "b1c253f9a00e87fb27290d2b708379ae2c003b9fb3c37dbf215926813efd1bc8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![FlyCode、コーディング不要でReactアプリを編集可能に、Gitベース](/emails/issues/124/flycode.jpg)](https://bit.ly/3UPwAoJ)"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "**[FlyCode Makes React Apps Editable without coding, Git based](https://bit.ly/3UPwAoJ)**",
      "source_content_hash": "be0008c644c3577cba86de728a53d8c02539af2b4374d8c985b4b4d7109cc468",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[FlyCode、コーディング不要でReactアプリを編集可能に、Gitベース](https://bit.ly/3UPwAoJ)**"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "[FlyCode](https://bit.ly/3wWSi00) (YC S22) makes React web apps editable in minutes so Product and UX teams can iterate and release products faster, so they don't have to wait on (or consume) developer time.",
      "source_content_hash": "bbc101671f92785b8d72decafab66d491ddfe3120e508b897b8aef31b9c6c08a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[FlyCode](https://bit.ly/3wWSi00)（YC S22）は、Reactウェブアプリを数分で編集可能にし、プロダクトチームとUXチームがより迅速に反復とリリースを行えるようにします。これにより、開発者の時間を待つ（または消費する）必要がなくなります。"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "FlyCode reads your regular React code and finds Texts, Images, Design tokens and Analytics event, then it let's non-coders collaborate and edit them and send back a pull request (they don't need access to GitHub!)",
      "source_content_hash": "b0ca824c79705290430c561efbfcf98429b8f4bc63a90163188455e0ba905119",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "FlyCodeは通常のReactコードを読み取り、テキスト、画像、デザイントークン、アナリティクスイベントを見つけます。その後、非エンジニアがこれらを共同で編集し、プルリクエストを送信できるようにします（GitHubへのアクセスは不要です！）。"
      }
    },
    {
      "segment_id": "157151e9",
      "source_content": "* Saves development time\n* No code integration, it just reads your code!\n* GitHub based, a bot is scanning the code and creates pull requests\n* Use your own stack and components\n* Retain codebase ownership",
      "source_content_hash": "89eeeec285221e82fbb0cbcc28ac9fbc90be22ecaf0c14208cc29eb955fa4b2d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 開発時間の節約\n* コード不要の統合、単にコードを読み取るだけ！\n* GitHubベース、ボットがコードをスキャンしてプルリクエストを作成\n* 独自のスタックとコンポーネントを使用可能\n* コードベースの所有権を保持"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "You can get started here: [flycode.com/developers](https://www.flycode.com/developers)",
      "source_content_hash": "170cfd801b0555f2b7855462fb99c62035d2b35b7721da4451de25d7460726a7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "こちらから始められます：[flycode.com/developers](https://www.flycode.com/developers)"
      }
    },
    {
      "segment_id": "06784e79",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c674e260",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "[![Inside Framer's Magic Motion](/emails/issues/124/framer-motion.png)](https://www.nan.fyi/magic-motion)",
      "source_content_hash": "8713dfddba1ea7e263a0c691ec24da751a1aa6024146e20717786f6c7492613c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![FramerのMagic Motionの内部](/emails/issues/124/framer-motion.png)](https://www.nan.fyi/magic-motion)"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "**[Inside Framer's Magic Motion](https://www.nan.fyi/magic-motion)**",
      "source_content_hash": "d767121edac61dcdfe5174bd587e8041b773d90658240d0d3c2db117ecd3c138",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[FramerのMagic Motionの内部](https://www.nan.fyi/magic-motion)**"
      }
    },
    {
      "segment_id": "b36c6338",
      "source_content": "A great interactive article that explains what a layout animation is. It greatly deconstructs the FLIP technique which allows to make this kind of transition perform better via CSS transforms (position, scale). We recreate the layout animation system of Framer Motion step by step.",
      "source_content_hash": "4f0bc21bb315da7bcbf54cbe7e8209e7590de6d005eae84b138bb09fe76b54c1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "レイアウトアニメーションとは何かを説明する素晴らしいインタラクティブ記事です。FLIPテクニックを詳細に分解し、CSS変換（位置、スケール）を通じてこの種のトランジションをよりパフォーマンス良く実現する方法を解説しています。Framer Motionのレイアウトアニメーションシステムをステップバイステップで再現します。"
      }
    },
    {
      "segment_id": "b9aaa519",
      "source_content": "On the same subject, I recommend to read also [Everything about Framer Motion layout animations](https://blog.maximeheckel.com/posts/framer-motion-layout-animations/).",
      "source_content_hash": "7ecb0727529618646fe00ca990aedec7ea3ea710ba5d5698565cae7ccb10f8b6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "同じテーマについて、[Framer Motionのレイアウトアニメーションに関するすべて](https://blog.maximeheckel.com/posts/framer-motion-layout-animations/)も読むことをお勧めします。"
      }
    },
    {
      "segment_id": "e2fed468",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "40158b4b",
      "source_content": "[![Timeline of a React Component With Hooks](/emails/issues/124/timeline.jpg)](https://julesblom.com/writing/react-hook-component-timeline)",
      "source_content_hash": "35fa0b15ec2b8dc7fff19b99ae378c2c8f6e33cafb48a80fe17ebd63b88c60ff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![フックを使用したReactコンポーネントのタイムライン](/emails/issues/124/timeline.jpg)](https://julesblom.com/writing/react-hook-component-timeline)"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "**[Timeline of a React Component With Hooks](https://julesblom.com/writing/react-hook-component-timeline)**",
      "source_content_hash": "49061ee97a68ef12b71f9f3eb4b8d0b7d14227b6c0b9c857c877c21f6f84d88c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[フックを使用したReactコンポーネントのタイムライン](https://julesblom.com/writing/react-hook-component-timeline)**"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "An interactive diagram that demonstrates the lifecycle of a React component, including hooks, refs, and DOM updates/paint (not available on mobile). Also includes a quiz to test your knowledge, and many quotes/references.",
      "source_content_hash": "f1577b5bed5490c2ee9fab789c2f87bc39d8a98966894f9148de2b95f3648c3f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "フック、ref、DOMの更新/ペイント（モバイルでは利用不可）を含むReactコンポーネントのライフサイクルをデモンストレーションするインタラクティブな図です。知識をテストするクイズや多くの引用/参照も含まれています。"
      }
    },
    {
      "segment_id": "e874d9e7",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "06e24cc0",
      "source_content": "[![Next.js 13](/emails/issues/124/nextjs13ts.jpg)](https://twitter.com/delba_oliveira/status/1592209522281439232)",
      "source_content_hash": "a52085d7950b769d741859eff797172dad93189756754001d63dbc6711eeca2d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Next.js 13](/emails/issues/124/nextjs13ts.jpg)](https://twitter.com/delba_oliveira/status/1592209522281439232)"
      }
    },
    {
      "segment_id": "7f71ff2a",
      "source_content": "**[Next.js 13 TypeScript Plugin](https://twitter.com/delba_oliveira/status/1592209522281439232)**",
      "source_content_hash": "b82bcadeb4bbb87ab48d3f32adc2f4ca32bc878a320e023e121fa7ac9c941494",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Next.js 13 TypeScriptプラグイン](https://twitter.com/delba_oliveira/status/1592209522281439232)**"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "Shu Ding is working on a TypeScript language service plugin ([source](https://github.com/vercel/next.js/blob/canary/packages/next/server/next-typescript.ts)) that significantly improves Next.js DX by bringing docs, new errors and autocompletion on top of Next.js and Server Components conventions. This compensates nicely the [inability to type exports from an ES module](https://github.com/microsoft/TypeScript/issues/38511) in TypeScript, a feature much requested by framework authors.",
      "source_content_hash": "deeda9ef76e4808d012218e68dd7cc81a46d459086685909fb78b147f26b1680",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Shu Dingは、TypeScriptの言語サービスプラグイン([ソース](https://github.com/vercel/next.js/blob/canary/packages/next/server/next-typescript.ts))を開発中で、Next.jsとServer Componentsの規約に基づいたドキュメント、新しいエラー、オートコンプリートを提供することで、Next.jsの開発者体験(DX)を大幅に改善しています。これは、TypeScriptにおいて[ESモジュールからのエクスポートを型付けできない問題](https://github.com/microsoft/TypeScript/issues/38511)をうまく補完しており、フレームワーク作者から強く要望されていた機能です。"
      }
    },
    {
      "segment_id": "7afb38f4",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "6cc549f2",
      "source_content": "[![Writing Performant CSS with vanilla-extract](/emails/issues/124/vanilla-extract.png)](https://www.lekoarts.de/javascript/writing-performant-css-with-vanilla-extract)",
      "source_content_hash": "f929a177d109669a8d2657902d30bbbc2687f6646079643fe0679740268ea08a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![vanilla-extractでパフォーマンスの高いCSSを書く](/emails/issues/124/vanilla-extract.png)](https://www.lekoarts.de/javascript/writing-performant-css-with-vanilla-extract)"
      }
    },
    {
      "segment_id": "d0dd855b",
      "source_content": "**[Writing Performant CSS with vanilla-extract](https://www.lekoarts.de/javascript/writing-performant-css-with-vanilla-extract)**",
      "source_content_hash": "d7b696c6fbcdbdacb9afd8f3c960f084a427c42b415c14e9ce313661dd00a26c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[vanilla-extractでパフォーマンスの高いCSSを書く](https://www.lekoarts.de/javascript/writing-performant-css-with-vanilla-extract)**"
      }
    },
    {
      "segment_id": "7736989b",
      "source_content": "An exhaustive article about [vanilla-extract](https://vanilla-extract.style/), the no-runtime CSS-in-JS library based on TypeScript by Mark Dalgleish (creator of CSS Modules). Mention also its atomic CSS overlay [Sprinkles](https://vanilla-extract.style/documentation/packages/sprinkles/). Examples based on React: reproduction of a Tailwind UI component. Many comparisons with Tailwind and other CSS-in-JS solutions. Well, it looks powerful, but not so simple indeed 😅 We'll have to study this further.",
      "source_content_hash": "3674676c8a6e0962d6ba90b7716d45e81939d3858b5f5b5b0dac9be90c3f478b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Mark Dalgleish（CSS Modulesの作成者）によるTypeScriptベースのランタイム不要なCSS-in-JSライブラリ[vanilla-extract](https://vanilla-extract.style/)についての詳細な記事です。また、その原子CSSレイヤーである[Sprinkles](https://vanilla-extract.style/documentation/packages/sprinkles/)にも言及しています。Reactをベースにした例として、Tailwind UIコンポーネントの再現が紹介されています。Tailwindや他のCSS-in-JSソリューションとの多くの比較が行われています。確かに強力ではありますが、それほどシンプルではないようです😅 さらに調査が必要でしょう。"
      }
    },
    {
      "segment_id": "678c3938",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c142abbb",
      "source_content": "* 📖 React beta docs: [class component API ref (WIP)](https://twitter.com/dan_abramov/status/1592262830304251908)\n* 🐙 [GitHub UI using React](https://twitter.com/rauchg/status/1591464351990697984) ([Hacker News thread](https://news.ycombinator.com/item?id=33576722)): GitHub seems to use React more and more. They also have a React design system: [Primer React](https://primer.style/react/). The upcoming feature [GitHub Blocks](https://blocks.githubnext.com/) which allows to make the README interactive is also [implemented with MDX](https://twitter.com/idangazit/status/1590726137638195200)\n* 📜 [Fetching data in React: the case of lost Promises](https://www.developerway.com/posts/fetching-in-react-lost-promises): well-illustrated interactive article on the race conditions that can occur when making requests. Gives several techniques to avoid them. I also wrote an [article](https://sebastienlorber.com/handling-api-request-race-conditions-in-react) on the subject 😜 (both are worth reading, quite complementary)\n* 📜 [A Love Letter to React](https://fly.io/blog/love-letter-react/): the creator of Phoenix (Elixir framework) explains how he was inspired by React to create LiveView: a solution to add interactivity on server-side rendered HTML. LiveView reminds me a lot of Remix!\n* 📜 [Open Development for Remix](https://remix.run/blog/open-development): Remix wants the project to be community driven. Everything becomes public: [roadmap](https://github.com/orgs/remix-run/projects/5/views/1)/process, and planning meetings streamed on Youtube.\n* 📜 [Type-safe environment variables on both client and server with Remix](https://dev.to/gugaguichard/type-safe-environment-variables-on-both-client-and-server-with-remix-54l5): interesting solution parsing env variables with Zod and exposing some of them to the client, including type-safety and autocomplete.\n* 📜 [Chromatic - Interaction tests for user behavior](https://www.chromatic.com/blog/interaction-tests-for-user-behavior/): Storybook interaction tests are now integrated with Chromatic SaaS\n* 📜 [React Server vs Client components in Next.js 13](https://kulkarniankita.com/react/react-server-client-components)\n* 📜 [What is a state manager](https://www.reatom.dev/general/what-is-state-manager)\n* 📜 [A novel schema-first approach to building forms](https://www.vazco.eu/blog/a-novel-schema-first-approach-to-building-forms)\n* 📜 [Creating fluffy trees with Three.js (part 1)](https://douges.dev/blog/threejs-trees-1)\n* 📊 [I compared deploy speeds for Reflame, Vercel, Netlify, Cloudflare Pages on the same repo](https://blog.reflame.app/i-compared-deploy-speeds-for-reflame-vercel-netlify-cloudflare-pages-on-the-same-repo): the marketing around \"instant deploy\" is not always true.\n* 💰 [Remotion - We raised CHF 180k to simplify programmatic video!](https://www.remotion.dev/blog/seed-funding): I bring my modest contribution 🤭\n* 🐦 [Comparison between Next.js 12 and the Next.js 13 experimental `app` dir!](https://twitter.com/lydiahallie/status/1591120215189749760)\n* 🗣 [RemixConf 2023 CFP Open](https://twitter.com/remix_run/status/1590513919902507008)\n* 📦 [Fontpie](https://github.com/pixel-point/fontpie): new CLI solution to avoid custom font layout shifts (see this [demo](https://twitter.com/alex_barashkov/status/1590329974409469952) to understand). It makes techniques used in `next/font` framework-agnostic.\n* 📦 [Remix-Vite](https://github.com/sudomf/remix-vite): adds Hot Module Replacement support to Remix\n* 📦 [craco 7.0](https://github.com/dilanx/craco/releases/tag/v7.0.0): allows to customize CRA - CRA v5 support\n* 📦 [Redwood 3.3](https://github.com/redwoodjs/redwood/releases/tag/v3.3.0)\n* 📦 [Rockpack 3.0 - create-react-app on steroids + SSR](https://github.com/AlexSergey/rockpack)",
      "source_content_hash": "c679542ebbf12e866801b3ebe56bdf97ed852ffcd00c93907c31daddc763455c",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📖 Reactベータ版ドキュメント: [クラスコンポーネントAPIリファレンス（作業中）](https://twitter.com/dan_abramov/status/1592262830304251908)\n* 🐙 [GitHub UIがReactを使用](https://twitter.com/rauchg/status/1591464351990697984) ([Hacker Newsスレッド](https://news.ycombinator.com/item?id=33576722)): GitHubはますますReactを活用しています。また、Reactデザインシステム[Primer React](https://primer.style/react/)も持っています。READMEをインタラクティブにできる新機能[GitHub Blocks](https://blocks.githubnext.com/)も[MDXで実装](https://twitter.com/idangazit/status/1590726137638195200)されています。\n* 📜 [Reactでのデータ取得: 失われたPromiseの問題](https://www.developerway.com/posts/fetching-in-react-lost-promises): リクエスト時に発生する競合状態について、インタラクティブな記事で詳しく解説。回避するための複数のテクニックを紹介。私も[記事](https://sebastienlorber.com/handling-api-request-race-conditions-in-react)を書いています😜（両方読む価値あり、補完的です）\n* 📜 [Reactへのラブレター](https://fly.io/blog/love-letter-react/): Phoenix（Elixirフレームワーク）の作者が、サーバーサイドレンダリングされたHTMLにインタラクティブ性を追加するソリューションLiveViewをReactにインスパイアされて作成した経緯を説明。LiveViewはRemixを強く連想させます！\n* 📜 [Remixのオープン開発](https://remix.run/blog/open-development): Remixはコミュニティ主導のプロジェクトを目指しています。[ロードマップ](https://github.com/orgs/remix-run/projects/5/views/1)/プロセス、計画会議のYouTube配信など全てが公開されます。\n* 📜 [Remixでクライアントとサーバーの両方で型安全な環境変数を扱う](https://dev.to/gugaguichard/type-safe-environment-variables-on-both-client-and-server-with-remix-54l5): Zodで環境変数を解析し、型安全性とオートコンプリートを含めてクライアントに公開する興味深いソリューション。\n* 📜 [Chromatic - ユーザー行動のインタラクションテスト](https://www.chromatic.com/blog/interaction-tests-for-user-behavior/): StorybookのインタラクションテストがChromatic SaaSに統合されました\n* 📜 [Next.js 13のReactサーバー vs クライアントコンポーネント](https://kulkarniankita.com/react/react-server-client-components)\n* 📜 [ステートマネージャーとは何か](https://www.reatom.dev/general/what-is-state-manager)\n* 📜 [フォーム構築の新しいスキーマファーストアプローチ](https://www.vazco.eu/blog/a-novel-schema-first-approach-to-building-forms)\n* 📜 [Three.jsでふわふわな木を作る（パート1）](https://douges.dev/blog/threejs-trees-1)\n* 📊 [同じリポジトリでReflame、Vercel、Netlify、Cloudflare Pagesのデプロイ速度を比較](https://blog.reflame.app/i-compared-deploy-speeds-for-reflame-vercel-netlify-cloudflare-pages-on-the-same-repo): 「即時デプロイ」のマーケティングが常に真実とは限らない。\n* 💰 [Remotion - プログラムによるビデオ作成を簡素化するためにCHF 180kを調達！](https://www.remotion.dev/blog/seed-funding): 私も微力ながら貢献しています🤭\n* 🐦 [Next.js 12とNext.js 13実験的`app`ディレクトリの比較！](https://twitter.com/lydiahallie/status/1591120215189749760)\n* 🗣 [RemixConf 2023 CFPオープン](https://twitter.com/remix_run/status/1590513919902507008)\n* 📦 [Fontpie](https://github.com/pixel-point/fontpie): カスタムフォントのレイアウトシフトを防ぐ新しいCLIソリューション（[デモ](https://twitter.com/alex_barashkov/status/1590329974409469952)参照）。`next/font`で使われる技術をフレームワーク非依存にします。\n* 📦 [Remix-Vite](https://github.com/sudomf/remix-vite): RemixにHot Module Replacementサポートを追加\n* 📦 [craco 7.0](https://github.com/dilanx/craco/releases/tag/v7.0.0): CRAのカスタマイズ可能 - CRA v5サポート\n* 📦 [Redwood 3.3](https://github.com/redwoodjs/redwood/releases/tag/v3.3.0)\n* 📦 [Rockpack 3.0 - create-react-appの強化版 + SSR](https://github.com/AlexSergey/rockpack)"
      }
    },
    {
      "segment_id": "440823bd",
      "source_content": "<SubscribeFormEmbed />",
      "source_content_hash": "2b5c5e42f4352c90b9647a9da7a0fb7ece8b8dc27440e42cdf85cbb6e1901b85",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_440823bd"
      }
    },
    {
      "segment_id": "f414353c",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "f947c8e4",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "7bc8bb24",
      "source_content": "[![refine - 100% open-source, headless React framework for building CRUD apps](/emails/issues/124/refine.jpg)](https://s.refine.dev/github)",
      "source_content_hash": "8f3c1c06e6ec1de8db9f5d411946ed004376f9e3c2d66f7704d762528f63ed2c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![refine - 100%オープンソースのヘッドレスReactフレームワーク、CRUDアプリ構築用](/emails/issues/124/refine.jpg)](https://s.refine.dev/github)"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "**[refine - 100% open-source, headless React framework for building CRUD apps](https://s.refine.dev/github)**",
      "source_content_hash": "03c1bd20097aa66c63eaec3a74103c13853553f5f1e95bca5fd817205ccf10dc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[refine - 100%オープンソースのヘッドレスReactフレームワーク、CRUDアプリ構築用](https://s.refine.dev/github)**"
      }
    },
    {
      "segment_id": "e9313fef",
      "source_content": "refine seamlessly works with any custom design or UI framework you favor. For convenience, it ships with ready-made integrations for Ant Design, Material UI, Mantine, and Chakra UI. It eliminates the repetitive tasks demanded by CRUD operations and provides industry-standard solutions for critical parts like authentication, access control, routing, networking, state management, and i18n.",
      "source_content_hash": "29c98f8aa713b3396c9466b178b1acdedcf230735a6fdf4794baefb3783c3aff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "refineは、お好みのカスタムデザインやUIフレームワークとシームレスに連携します。利便性のために、Ant Design、Material UI、Mantine、Chakra UI向けのすぐに使える統合機能を提供しています。CRUD操作に必要な反復的なタスクを排除し、認証、アクセス制御、ルーティング、ネットワーキング、状態管理、i18nなどの重要な部分に対する業界標準のソリューションを提供します。"
      }
    },
    {
      "segment_id": "510c9c5b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "37fca32e",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "bcc700e8",
      "source_content": "* 📜 [Expo-router and remote code](https://medium.com/@dan_tamas/expo-router-and-remote-code-e49f31a33b73): shows how to use [react-native-wormhole](https://github.com/cawfree/react-native-wormhole) with Expo Router to consume React-Native components on a remote url. It's quite related to the idea of having [React-Native Server Components](https://twitter.com/Baconbrix/status/1585058874864062466).\n* 🧵 [Expo Modules API thread](https://twitter.com/tsapeta/status/1590353202402115584): Tomasz Sapeta shares some interesting info about the new Expo API for creating modern native modules in Swift/Kotlin, including some future developments like [SwiftUI](https://twitter.com/tsapeta/status/1591003968649728001) / Jetpack Compose support.\n* 📦 [React-Native 0.70.6](https://twitter.com/CipolleschiR/status/1592573159215337472)\n* 📦 [Moti 0.21](https://twitter.com/FernandoTheRojo/status/1592264186960257027)\n* 📦 [JestNative v5.2 matchers - toHaveAccessibilityState()](https://twitter.com/mdj_dev/status/1590724369835524096)\n* 🎙️ [The React Native Show 18 - Module Federation](https://www.callstack.com/podcasts/module-federation)\n* 🎙️ [RNR 252 - Ionic's React Native Portals with Josh Thomas](https://reactnativeradio.com/episodes/rnr-252-ionics-react-native-portals-with-josh-thomas)",
      "source_content_hash": "8af6a7102965a05babfea268f0fb8db310d0c7fd41038b6bdf06965feae180b0",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📜 [Expo-routerとリモートコード](https://medium.com/@dan_tamas/expo-router-and-remote-code-e49f31a33b73): [react-native-wormhole](https://github.com/cawfree/react-native-wormhole)をExpo Routerと共に使用して、リモートURL上のReact-Nativeコンポーネントを利用する方法を紹介。[React-Native Server Components](https://twitter.com/Baconbrix/status/1585058874864062466)のアイデアと関連性が高い。\n* 🧵 [Expo Modules APIスレッド](https://twitter.com/tsapeta/status/1590353202402115584): Tomasz Sapetaが、Swift/Kotlinでのモダンなネイティブモジュール作成のための新しいExpo APIに関する興味深い情報を共有。[SwiftUI](https://twitter.com/tsapeta/status/1591003968649728001)/Jetpack Composeサポートなど将来の開発についても言及。\n* 📦 [React-Native 0.70.6](https://twitter.com/CipolleschiR/status/1592573159215337472)\n* 📦 [Moti 0.21](https://twitter.com/FernandoTheRojo/status/1592264186960257027)\n* 📦 [JestNative v5.2 matchers - toHaveAccessibilityState()](https://twitter.com/mdj_dev/status/1590724369835524096)\n* 🎙️ [The React Native Show 18 - Module Federation](https://www.callstack.com/podcasts/module-federation)\n* 🎙️ [RNR 252 - IonicのReact Native Portals with Josh Thomas](https://reactnativeradio.com/episodes/rnr-252-ionics-react-native-portals-with-josh-thomas)"
      }
    },
    {
      "segment_id": "566c958b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c35e5786",
      "source_content": "## 🧑‍💻 Jobs {#jobs}",
      "source_content_hash": "64cde6166f05bd39337c21ca10f52b6613641f23e0c97e204de33d6857fa16ed",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🧑‍💻 Jobs {#jobs}"
      }
    },
    {
      "segment_id": "9c9e2b64",
      "source_content": "🧑‍💼 [**Product Engineer at Causal, Remote/London/NY, \\$150-250k**](https://jobs.lever.co/causal-app/4acaafbe-ef3d-45a6-bbe6-687c022d727c?lever-origin=applied\\&lever-source%5B%5D=thisweekinreact.com)",
      "source_content_hash": "619d259d5aa4a364626fc41610dcf9f3ae0955a2e964969486ddfee2f179dbdb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**Causalのプロダクトエンジニア、リモート/ロンドン/NY、\\$150-250k**](https://jobs.lever.co/causal-app/4acaafbe-ef3d-45a6-bbe6-687c022d727c?lever-origin=applied\\&lever-source%5B%5D=thisweekinreact.com)"
      }
    },
    {
      "segment_id": "5c7d994c",
      "source_content": "Causal is a Series A Startup (backed by Coatue/Accel) building an all-in-one tool for working with numbers and visualizing data. We're looking for strong React engineers who can solve difficult UX/performance challenges.",
      "source_content_hash": "20bfaa3d377f2ddf3a9abbf4f1ce455c376710731cb5f7e58785d6741fc6377f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Causalは、数字を扱いデータを可視化するためのオールインワンツールを構築しているSeries Aスタートアップ（Coatue/Accelが支援）です。困難なUX/パフォーマンス課題を解決できる強力なReactエンジニアを募集しています。"
      }
    },
    {
      "segment_id": "1ecf0882",
      "source_content": "🧑‍💼 [**G2i - 100% Remote React Native Jobs**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)",
      "source_content_hash": "5d3c54581f6c180e021405df5da2dff285c443814d1d5e6c5c09516b6002a38b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**G2i - 100%リモートのReact Native求人**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)"
      }
    },
    {
      "segment_id": "e77cf7c6",
      "source_content": "We have several roles open for developers focused on React Native! Pay is \\~160k plus 10% bonus. You must have production experience with RN and be based in the US. DM [@gabe\\_g2i](https://twitter.com/gabe_g2i) to learn more and don't forget to mention This Week in React.",
      "source_content_hash": "03109db05ba0c8c528483a4218dc3b2b0314cf5c6032f5eb3c7be604094658fd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Nativeに特化した開発者向けの複数のポジションを開設中です！報酬は約160kドル＋10％のボーナス。RNの実務経験があり、米国在住である必要があります。詳細は[@gabe\\_g2i](https://twitter.com/gabe_g2i)にDMし、This Week in Reactを忘れずに言及してください。"
      }
    },
    {
      "segment_id": "bb1346b6",
      "source_content": "💡 [How to publish an offer?](https://thisweekinreact.com/sponsor)",
      "source_content_hash": "d58176524c2d7675bf008e7b635d056628a0d092fb0152d6bbdfb97f4239d273",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "💡 [求人を掲載するには？](https://thisweekinreact.com/sponsor)"
      }
    },
    {
      "segment_id": "9f823c77",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "af843cee",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "d3939446",
      "source_content": "* [TypeScript 4.9](https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/): with satisfies!\n* [TypeScript satisfies operator](https://tomdohnal.com/posts/typescript-satisfies-keyword): another example of using satisfies\n* [Qwik Showcase](https://qwik.builder.io/showcase/): great Lighthouse scores\n* [Introducing SolidStart: The SolidJS Framework](https://www.solidjs.com/blog/introducing-solidstart): the SolidJS meta-framework SolidJS is now in beta. It takes some React ecosystem inspirations and bring some novel ideas. See also [Fireship - A Solid Start](https://www.youtube.com/watch?v=DVWu2b7mvFg)\n* [Parcel 2.8](https://twitter.com/devongovett/status/1590378157747875840): great improvements around bundling, perf, HMR, code splitting...\n* [Deno 1.28 - Featuring 1.3 Million New Modules](https://deno.com/blog/v1.28): npm compatibility with security in mind. See also this [video](https://twitter.com/deno_land/status/1592274094963462144).\n* [The evolution of scalable CSS](https://frontendmastery.com/posts/the-evolution-of-scalable-css/): nice retrospective of the evolution of CSS techniques, including CSS-in-JS popularized by React\n* [Why would anyone need JavaScript generator functions?](https://jrsinclair.com/articles/2022/why-would-anyone-need-javascript-generator-functions/)\n* [Stylify - Write CSS Faster](https://stylifycss.com/)\n* [Everything new from GitHub Universe 2022](https://github.blog/2022-11-09-everything-new-from-github-universe-2022/)\n* [Octoverse 2022 - The state of open source software](https://octoverse.github.com/)\n* [Forking Chrome to turn HTML into SVG](https://fathy.fr/html2svg)\n* [This week in stc, 1](https://kdy1.dev/posts/2022/11/stc-update-1)\n* [Change Array By Copy in Chromium](https://twitter.com/robpalmer2/status/1591174422802890754)\n* [ultrahtml 1.0](https://github.com/natemoo-re/ultrahtml)\n* [Announcing Cypress Component Testing GA and Performance Improvements in Cypress 11](https://www.cypress.io/blog/2022/11/08/announcing-cypress-11/)\n* [GreenFrame - measure the carbon footprint of websites](https://marmelab.com/blog/2022/11/09/greenframe-open-source.html)\n* [Doctolib - 10 lessons I learned owning on a Design System for 30+ Product Designers and 200+ Developers](https://medium.com/doctolib/10-lessons-i-learned-owning-on-a-design-system-for-30-product-designers-and-200-developers-c2986e4dbb6f)\n* [Node.js Security Best Practices](https://nodejs.org/en/docs/guides/security/)",
      "source_content_hash": "fe7606b53c34c1d34350504719affac2a414263106fe392539663a57914a3605",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* [TypeScript 4.9](https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/): `satisfies` 演算子が導入されました！\n* [TypeScript satisfies operator](https://tomdohnal.com/posts/typescript-satisfies-keyword): `satisfies` 演算子の使用例\n* [Qwik Showcase](https://qwik.builder.io/showcase/): 優れた Lighthouse スコア\n* [Introducing SolidStart: The SolidJS Framework](https://www.solidjs.com/blog/introducing-solidstart): SolidJS のメタフレームワーク SolidStart がベータ版に。React エコシステムからのインスピレーションと新たなアイデアを提供。関連動画 [Fireship - A Solid Start](https://www.youtube.com/watch?v=DVWu2b7mvFg)\n* [Parcel 2.8](https://twitter.com/devongovett/status/1590378157747875840): バンドリング、パフォーマンス、HMR、コード分割などの大幅な改善\n* [Deno 1.28 - Featuring 1.3 Million New Modules](https://deno.com/blog/v1.28): npm 互換性をセキュリティを考慮して実装。関連動画 [こちら](https://twitter.com/deno_land/status/1592274094963462144)\n* [The evolution of scalable CSS](https://frontendmastery.com/posts/the-evolution-of-scalable-css/): React で普及した CSS-in-JS を含む、スケーラブルな CSS 技術の進化を振り返る\n* [Why would anyone need JavaScript generator functions?](https://jrsinclair.com/articles/2022/why-would-anyone-need-javascript-generator-functions/): JavaScript ジェネレーター関数が必要な理由\n* [Stylify - Write CSS Faster](https://stylifycss.com/): より速く CSS を書く\n* [Everything new from GitHub Universe 2022](https://github.blog/2022-11-09-everything-new-from-github-universe-2022/): GitHub Universe 2022 の新機能\n* [Octoverse 2022 - The state of open source software](https://octoverse.github.com/): オープンソースソフトウェアの現状\n* [Forking Chrome to turn HTML into SVG](https://fathy.fr/html2svg): HTML を SVG に変換する Chrome のフォーク\n* [This week in stc, 1](https://kdy1.dev/posts/2022/11/stc-update-1): stc の最新動向\n* [Change Array By Copy in Chromium](https://twitter.com/robpalmer2/status/1591174422802890754): Chromium での配列コピー変更\n* [ultrahtml 1.0](https://github.com/natemoo-re/ultrahtml): ultrahtml 1.0 リリース\n* [Announcing Cypress Component Testing GA and Performance Improvements in Cypress 11](https://www.cypress.io/blog/2022/11/08/announcing-cypress-11/): Cypress コンポーネントテストの一般提供と Cypress 11 のパフォーマンス改善\n* [GreenFrame - measure the carbon footprint of websites](https://marmelab.com/blog/2022/11/09/greenframe-open-source.html): ウェブサイトのカーボンフットプリントを測定\n* [Doctolib - 10 lessons I learned owning on a Design System for 30+ Product Designers and 200+ Developers](https://medium.com/doctolib/10-lessons-i-learned-owning-on-a-design-system-for-30-product-designers-and-200-developers-c2986e4dbb6f): 30人以上のプロダクトデザイナーと200人以上の開発者向けデザインシステム運営で学んだ10の教訓\n* [Node.js Security Best Practices](https://nodejs.org/en/docs/guides/security/): Node.js セキュリティベストプラクティス"
      }
    },
    {
      "segment_id": "c81952ce",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "657bde08",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "827eb9a3",
      "source_content": "[![Meme - BREAKING: JavaScript has been banned from Twitter for impersonating a real programming language.](/emails/issues/124/meme.png)](https://twitter.com/lukaseder/status/1590301562525876225)",
      "source_content_hash": "f009c5a06189e1427be54c3ed145ea358a65ee41fc942a8c95b451717d4230c8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![ミーム - 速報: JavaScript が本物のプログラミング言語を偽装したとして Twitter から追放されました。](/emails/issues/124/meme.png)](https://twitter.com/lukaseder/status/1590301562525876225)"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/124/index.mdx",
  "last_updated_timestamp": "2025-06-11T16:37:41.591667+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "c7b7e2490296e8bfe6e77bda4fcedc2f106ca25022dc1ba59194ad2c41dd17b1"
  }
}