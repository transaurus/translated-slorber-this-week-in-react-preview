{
  "source_file_path_relative_to_docusaurus_root": "newsletter/181/index.mdx",
  "source_file_content_hash": "d0d01dbdd5e9a1e840e444b6ebb5b28582a9c7816117b99f3dd3159b0caaa697",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /181\ntitle: \"This Week In React #181: React errors, Fast JSX, Flow, React-Query, Jotai, Inline styles, RSC, Next.js, RTL, RN 3D, Orbit, Gesture Handler, Skia, NewArch Helper, TC39, ESLint, VSCode...\"\nauthors: [slorber, bndkt]\ndate: 04-10-2024\n---",
      "source_content_hash": "4e84fcaa0d7d73f89e89b77774660f8119db490f5a00b5a08eeb11071fd50660",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "This week I found many React Core PRs to look at. Too many, in fact, so I've saved a few for next week!",
      "source_content_hash": "3436cad5f257941d8474854d62d4c16f68158744194fef2c76706b02b49e4648",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週はReactコアのPRが多く見つかりました。多すぎるほどだったので、いくつかは来週に回しました！"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "After 2D with Skia, it's super excitings to see React Native devs exploring the 3D space!",
      "source_content_hash": "e89e0fcd4d1cca6d75cca0ced64248dafa46c64dd4db61ae1b1f850b229bfc37",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Skiaを使った2Dの後、React Native開発者が3D領域を探求しているのを見るのは非常にエキサイティングです！"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [このニュースレターをTwitterでチェック](https://slo.im/thread) - ビジュアル形式 🎨**"
      }
    },
    {
      "segment_id": "6429a3aa",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6429a3aa"
      }
    },
    {
      "segment_id": "7f7f1cb2",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "92f4ea84",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_92f4ea84"
      }
    },
    {
      "segment_id": "5dfba1c3",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_5dfba1c3"
      }
    },
    {
      "segment_id": "1856ef44",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "79b2d0b9",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "[![In-App Subscriptions Made Easy](/emails/issues/177/revenuecat.jpg)](https://www.revenuecat.com?utm_source=twir\\&utm_medium=sponsorship\\&utm_campaign=dec_23)",
      "source_content_hash": "87c2a87c18d6e8124ddcafc9712a29c92152268f2ed6cd690458b662ad9c11ae",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![アプリ内課金を簡単に](/emails/issues/177/revenuecat.jpg)](https://www.revenuecat.com?utm_source=twir\\&utm_medium=sponsorship\\&utm_campaign=dec_23)"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "**[In-App Subscriptions Made Easy](https://www.revenuecat.com?utm_source=twir\\&utm_medium=sponsorship\\&utm_campaign=dec_23)**",
      "source_content_hash": "4565991cb6c76c28c8d8a763d97bf73e670b8b876cbd0c4f7232268f71a5d55c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[アプリ内課金を簡単に](https://www.revenuecat.com?utm_source=twir\\&utm_medium=sponsorship\\&utm_campaign=dec_23)**"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "RevenueCat gives you everything you need to monetize, analyze, and grow your app business. Effortlessly control customer access and entitlements, manage data, and experiment with pricing. See why over 30,000 apps trust RevenueCat to power their in-app purchase infrastructure.",
      "source_content_hash": "c6da2f2f57bdd089a400a54dfd9ef373cf2dfe0902019f728e1cfcb766c3862c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "RevenueCatは、アプリビジネスの収益化、分析、成長に必要なすべてを提供します。顧客のアクセスと権利を簡単に管理し、データを操作し、価格設定を実験できます。30,000以上のアプリがRevenueCatを信頼してアプリ内課金インフラを支えています。"
      }
    },
    {
      "segment_id": "f1a2a0d3",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "109ace10",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "[![React Docs - Add onCaughtError / onUncaughtError, improve onRecoverableError](/emails/issues/181/react-errors.jpg)](https://github.com/reactjs/react.dev/pull/6742)",
      "source_content_hash": "b0033b4ff55e45a6578721d3d81f6161a59a0bc7829cd7d710db577b0396fce8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Docs - onCaughtError / onUncaughtErrorの追加、onRecoverableErrorの改善](/emails/issues/181/react-errors.jpg)](https://github.com/reactjs/react.dev/pull/6742)"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "[**React Docs - Add onCaughtError / onUncaughtError, improve onRecoverableError**](https://github.com/reactjs/react.dev/pull/6742)",
      "source_content_hash": "fb52acb05048266287662d4b745eeab3820b950c6dfa567cc0fa35ca8d44af8e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[**React Docs - onCaughtError / onUncaughtErrorの追加、onRecoverableErrorの改善**](https://github.com/reactjs/react.dev/pull/6742)"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "Recently, the React core team overhauled the way errors are handled in React 19. Those improvements are available in React 19 canary releases and should probably land in Next.js 14.2+ sooner or later. This notably includes new public API callbacks available on the React Root (`createRoot`, `hydrateRoot`):",
      "source_content_hash": "f637080a01f77f9faa0acba35648843e8e4129512dccad06f9b096ab28c02592",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "最近、ReactコアチームはReact 19でのエラー処理方法を大幅に改善しました。これらの改善はReact 19のカナリーリリースで利用可能で、おそらくNext.js 14.2+にも早晩組み込まれるでしょう。特に、React Root（`createRoot`、`hydrateRoot`）で利用可能な新しい公開APIコールバックが含まれます："
      }
    },
    {
      "segment_id": "aa83231c",
      "source_content": "* `onCaughtError` 🆕 reports errors caught by error boundaries\n* `onUncaughtError` 🆕 reports uncaught errors (duh)\n* `onRecoverableError` now uses the ES Error Cause feature to report the original cause",
      "source_content_hash": "53f41192db1cd330300725c072045e15cf8b172488ce6d58781a0ff340046e64",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* `onCaughtError` 🆕 エラーバウンダリで捕捉されたエラーを報告\n* `onUncaughtError` 🆕 捕捉されなかったエラーを報告（そのまま）\n* `onRecoverableError` はES Error Cause機能を使用して元の原因を報告"
      }
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "The linked PR is the WIP documentation for those new APIs, including many interactive examples. The main motivation seems to be presenting an error dialog to the user.",
      "source_content_hash": "2a5e7474807e1142ca7fda87101ce5d88feae61b1b3d5143b7fef54f7912bedf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "リンクされたPRは、これらの新しいAPIに関する作業中のドキュメントで、多くのインタラクティブな例が含まれています。主な動機は、ユーザーにエラーダイアログを表示することのようです。"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "What excited me most in all this is that it's the first time I'm able to see in action the brand-new React hydration error message displayed in a dialog, as shown in the screenshot above. This will greatly improve the DX of React!",
      "source_content_hash": "dfdc7b2779a5f7450f1eef782acca0d89cf481f818edd2faca3effe426e4d655",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "これらの中で最も興奮したのは、スクリーンショットで示されているように、ブランドニューのReactハイドレーションエラーメッセージがダイアログで表示されるのを初めて実際に見ることができたことです。これはReactのDXを大幅に改善するでしょう！"
      }
    },
    {
      "segment_id": "e0a17c0d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "157c9741",
      "source_content": "* 💸 [Get drop-in authentication for your React app using Clerk, with ready-to-use components, hooks, and helpers.](https://go.clerk.com/WtsedFE)\n* 👀 [React Core - Fast JSX: Don't clone props object](https://github.com/facebook/react/pull/28768): Creating JSX elements under React 19 should become much faster. Recent changes in how key/refs are handled make it possible to avoid cloning props. We create a lot of JSX nodes so this should have a significant impact!\n* 👀 [React Core - Remove defaultProps support (except for classes)](https://github.com/facebook/react/pull/28733)\n* 👀 [React Core - Rename SECRET INTERNALS](https://github.com/facebook/react/pull/28789)\n* 🐦 [TIL React can render promises and contexts as JSX nodes](https://twitter.com/sebastienlorber/status/1777383298618077331)\n* 📖 [TanStack Query - new Render Optimizations guide](https://tanstack.com/query/v5/docs/framework/react/guides/render-optimizations): It’s nice that React Query uses structural sharing under the hood, and try hard to preserve object identities over time.\n* 📈 [Docusaurus has overtaken Gatsby’s npm downloads](https://npmtrends.com/@docusaurus/core-vs-@remix-run/react-vs-astro-vs-gatsby-vs-nextra-vs-vitepress-vs-vuepress): It feels surreal that the framework I work on is now the 2nd most used React web framework just after Next.js (far behind), despite its focus on content-centric websites. This should not last though: Astro, Remix, and Expo Web have more potential to grow.\n* 🗓 [React Summit](https://reactsummit.com/?utm_source=thisweekinreact) - 🇳🇱 Amsterdam - 14-18 June - Get a 10% discount with code \"TWIR\".\n* 🗓 [React Connection - 22 April](https://reactconnection.io/) + [React-Native Connection - 23 April](https://reactnativeconnection.io/) - 🇫🇷 Paris - 2 days of web/mobile conferences. Get a [-20% discount](https://www.billetweb.fr/react-connection-2024?discount=TWIR) with code \"TWIR\".\n* 📜 [New Flow Language Features for React](https://medium.com/flow-type/announcing-component-syntax-b6c5285660d0): Meta engineers use Flow (and not TypeScript). This post presents the benefits of new keywords `component`, `hook`, and `renders` keywords introduced directly into the language, and presents great benefits in terms of DX, type-safety, and static analysis in general. I wish we had those in TypeScript too, but since it’s specific to React it’s unlikely to happen unless benefiting the whole JS ecosystem.\n* 📜 [Are Inline Styles Faster than CSS?](https://danielnagy.me/posts/Post_tsr8q6sx37pl): Daniel implemented his personal React website in 3 variants and measured several things: HTML/JS size, compression, Web Vitals… Surprisingly, using plain inline styles outperforms other CSS techniques!\n* 📜 [Exploring using Suspense with React Query](https://www.teemutaskula.com/blog/exploring-query-suspense): Nicely explains how you can improve the UX when using React Query. Creates a `useSuspenseQueryDeferred` to avoid showing a Suspense fallback on query key changes.\n* 📜 [React Server Components in a Nutshell](https://thenewstack.io/react-server-components-in-a-nutshell/): Paul takes Waku to illustrate how RSCs enable convenient server-side requests at the component level, while former solutions only supported route level. He also makes an interesting comparison between Gatsby’s static queries and RSCs.\n* 📜 [Jotai Tips](https://blog.axlight.com/posts/jotai-tips/): Daishi aggregated 20 Jotai tips in a single article.\n* 📜 [State machines in React](https://thesametech.com/state-machines-in-react/): Implements a wizard flow by building a state machine from scratch.\n* 📜 [Server-only Code in Next.js App Router](https://www.builder.io/blog/server-only-next-app-router): Use server-only and client-only packages to ensure code runs where it should.\n* 📜 [Next.js Forms with Server Actions](https://www.jtmthf.com/posts/nextjs-forms): A tutorial using Radix Form (in preview) to implement form elements compatible with Server Actions.\n* 📜 [Exploring Server Actions with Next.js](https://www.robinwieruch.de/next-server-actions/): A Tutorial showing how to do each CRUD operation.\n* 📜 [Techniques for Fetching Data - Comparing Next.js, Remix, and RedwoodJS](https://redwoodjs.com/blog/techniques-for-fetching-data): Revisits old data fetching techniques to explain why RSC is better.\n* 📜 [React 19 - Part 1: The Backstory; My journey writing a framework from scratch!](https://www.cmrg.me/blog/rsc-part-1-the-backstory)\n* 📜 [Synchronize Backend and Frontend Types With tRPC](https://marmelab.com/blog/2024/04/04/trpc-full-stack-types.html)\n* 📦 [Jotai Effect 1.0 - A Jōtai utility package for reactive side-effects](https://github.com/jotaijs/jotai-effect/releases/tag/v1.0.0)\n* 📦 [Jotai 2.8 - atomWithLazy, experimental store](https://github.com/pmndrs/jotai/releases/tag/v2.8.0)\n* 📦 [react-testing-library 15.0 - requires Node 18, supports new WAI-ARIA 1.2 roles](https://github.com/testing-library/react-testing-library/releases/tag/v15.0.0)\n* 📦 [use-signals - An experimental React hook for TC39 signals](https://github.com/dai-shi/use-signals)\n* 🎥 [Jack Herrington - Declarative Routes for NextJS and React-Router](https://www.youtube.com/watch?v=MiZcNHJT_Ss): Jack introduced [declarative-routing](https://github.com/ProNextJS/declarative-routing), a new typesafe routing solution he’s working on with support for React Router and Next.js. It also supports API routes, which makes it an alternative to tRPC with control over the API endpoints.\n* 🎥 [Theo - Facebook wrote a language just for React](https://www.youtube.com/watch?v=HOFIefkepMA)\n* 🎥 [James Quick - Don’t Make This Mistake with Next.js Server Components](https://www.youtube.com/watch?v=F_AplRX3dJU)",
      "source_content_hash": "41c9377a231dac6f232cfec2325d8624165f9197a45d946b8f501fc28d90c65d",
      "node_type": "list",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "688f86d6",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_688f86d6"
      }
    },
    {
      "segment_id": "4e1804a3",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "759d12dd",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "74dd7937",
      "source_content": "[![Refine - Open source Retool Alternative](/emails/issues/177/refine.jpg)](https://github.com/refinedev/refine)",
      "source_content_hash": "2d276c5105b9e40121bca11ed0f2daffe4353daa792c7423bc6d5c7ca04b3d57",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Refine - オープンソースのRetool代替品](/emails/issues/177/refine.jpg)](https://github.com/refinedev/refine)"
      }
    },
    {
      "segment_id": "5803caac",
      "source_content": "**[Refine - Open source Retool Alternative](https://github.com/refinedev/refine)**",
      "source_content_hash": "152be9996d9f37db0772a908980c48daf4886dd8b8a8dc9ec3481f0755c639ea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Refine - オープンソースのRetool代替品](https://github.com/refinedev/refine)**"
      }
    },
    {
      "segment_id": "51867d16",
      "source_content": "The sweet spot between the low code and traditional development for CRUD-heavy applications.",
      "source_content_hash": "33253582f05660fa85f2ecf13f5f194f0acd33a7c968e2fd0340de64de573e16",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "CRUD処理が多いアプリケーションにおいて、ローコードと従来の開発の中間に位置する最適なソリューションです。"
      }
    },
    {
      "segment_id": "785750ac",
      "source_content": "As an open-source React meta-framework designed for Enterprise applications, [Refine](https://github.com/refinedev/refine) offers a headless solution ideal for tasks like admin panels, dashboards, and internal tools.",
      "source_content_hash": "eac1fc245a10faf1ca83bfb35326e3ed842a9a889a4a9f18535596257ab8a7ec",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "エンタープライズ向けに設計されたオープンソースのReactメタフレームワークである[Refine](https://github.com/refinedev/refine)は、管理画面、ダッシュボード、内部ツールなどのタスクに最適なヘッドレスソリューションを提供します。"
      }
    },
    {
      "segment_id": "82e90254",
      "source_content": "While low-code tools may offer initial promise, they often fall short in handling complex scenarios due to scalability issues, limited customization options, and the risk of vendor lock-in.",
      "source_content_hash": "a7ab4ae0250492c86bebe0cadc94d3c7c6d06825022b7d94dfb2b25d4123016d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ローコードツールは初期段階では有望に見えますが、スケーラビリティの問題、カスタマイズの制限、ベンダーロックインのリスクにより、複雑なシナリオに対応できないことが多いです。"
      }
    },
    {
      "segment_id": "2822251a",
      "source_content": "Refine enables teams to rapidly develop production-ready apps while maintaining flexibility.",
      "source_content_hash": "f398068bec29e41d559ca481c7dbd1221cb15b10974d04bd6ebf3766cbbd7b18",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Refineは、チームが柔軟性を維持しながら、迅速に本番環境対応のアプリを開発できるようにします。"
      }
    },
    {
      "segment_id": "fc25fa9c",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "94145a94",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "2838eb68",
      "source_content": "This section is now co-authored with [Benedikt](https://twitter.com/bndkt)",
      "source_content_hash": "9d429e58c033c8d97cd38ce12e86917fdb0e99e6ce809e620f364eeed29d244e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このセクションは現在[Benedikt](https://twitter.com/bndkt)と共同執筆されています。"
      }
    },
    {
      "segment_id": "4be28ed1",
      "source_content": "[![New 3D library for React Native in the works](/emails/issues/181/rn3d.jpg)](https://twitter.com/mrousavy/status/1775840325161853389)",
      "source_content_hash": "a8b352a31ede5c4b3d2f4707377e02b58e01a925070d21ddd61548182c3de14b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Native向けの新しい3Dライブラリが開発中](/emails/issues/181/rn3d.jpg)](https://twitter.com/mrousavy/status/1775840325161853389)"
      }
    },
    {
      "segment_id": "0e80209e",
      "source_content": "🐦 [**New 3D library for React Native in the works**](https://twitter.com/mrousavy/status/1775840325161853389)",
      "source_content_hash": "74b7fac2243aa765317d9eec6a7cd3bb4a9cbf0e93f6e9ba183d145b0f80269e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🐦 [**React Native向けの新しい3Dライブラリが開発中**](https://twitter.com/mrousavy/status/1775840325161853389)"
      }
    },
    {
      "segment_id": "7bc8bb24",
      "source_content": "One of the most inspiring things in the RN community is observing folks like Marc Rousavy, William Candillon and Christian Falch pushing the boundaries of what’s possible with this technology and going far beyond rendering text and buttons on a screen. With the recent Skia announcements, we saw the state of the art regarding 2D rendering in RN. Now, Marc provided a sneak peek of some exciting advancements in 3D rendering with RN. Apparently, Margelo is working on a new library to enable access to the native Graphics APIs (Metal/Vulkan) from RN. Apart from the short [demo video](https://twitter.com/JPoliachik/status/1775866218743787934), I also found this [thread](https://twitter.com/mrousavy/status/1775870100945461277) very interesting, where Marc explains their approach using a C++ library and why they didn’t go with Three.js, which is amazing on web (React-Three-Fiber supports RN).",
      "source_content_hash": "f96fb0b117614608cb6dd387871d1c94b9728780173fc3a42011b486b5f3a6b2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "RNコミュニティで最も刺激的なことの1つは、Marc Rousavy、William Candillon、Christian Falchといった人々が、このテクノロジーの可能性の限界を押し広げ、画面にテキストやボタンを表示するだけにとどまらない領域に進出しているのを目撃することです。最近のSkiaに関する発表では、RNにおける2Dレンダリングの最先端を見ることができました。そして今、MarcはRNでの3Dレンダリングに関する画期的な進展の一部を垣間見せてくれました。Margeloは、RNからネイティブのGraphics API（Metal/Vulkan）にアクセスできる新しいライブラリを開発中とのことです。[デモ動画](https://twitter.com/JPoliachik/status/1775866218743787934)だけでなく、MarcがC++ライブラリを使用したアプローチと、ウェブでは素晴らしいThree.js（React-Three-FiberはRNをサポート）を採用しなかった理由を説明している[このスレッド](https://twitter.com/mrousavy/status/1775870100945461277)も非常に興味深いです。"
      }
    },
    {
      "segment_id": "42bfcc5d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "0422e2e2",
      "source_content": "* 💸 [React Library Analytics — Omlet helps you understand which components and props to keep, remove, or improve based on real usage data.](https://omlet.dev/?utm_campaign=partner_this-week-in-react_newsletter-rn-ql-apr-2024)\n* 🐦 [VisionCamera rendering straight to Skia](https://twitter.com/mrousavy/status/1776326923674661065): This will come with Vision Camera 4, which seems to be nearing its release.\n* 📣 [Expo - Orbit is now available as a Preview for Windows](https://expo.dev/blog/expo-orbit-now-available-as-a-preview-for-windows): If you don’t know Orbit yet, it’s a handy menu bar app to launch builds on Simulator.\n* 📣 [Expo - Push notification receipt IDs will change string formats](https://expo.dev/blog/push-receipt-id-format-will-change)\n* 📖 [Gestures in RN Gesture Handler are state machines](https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/states-events/#state-flows): now the docs have an excellent interactive visualization to understand them.\n* 🗓 [App.js Conf](https://appjs.co/?utm_source=thisweekinreact) - 🇵🇱 Kraków - 22-24 May. Get a [10% discount](https://ti.to/appjs/2024/discount/TWIR) with code \"TWIR\".\n* 📜 [Truly Selectable Text with React Native on iOS](https://haileyok.com/truly-selectable-text-with-react-native-on-ios/): Everyone who has at some point in time tried to make text selectable (as in, parts of a text, not just copy a whole text element) in RN will appreciate this post and the accompanying library.\n* 📜 [How To Dockerize A React Native App?](https://scientyficworld.org/how-to-dockerize-a-react-native-app/) Good summary of running RN dev setup in Docker. For me, the main issue remains that you can’t do iOS builds in Docker, which makes this only half as interesting, but in some scenarios it still makes sense (e.g. if you don’t run local native builds at all).\n* 📜 [How to improve your React Native 3D animations: camera control with Three.js](https://www.themorrow.digital/blog/how-to-improve-your-react-native-3d-animations-camera-control-with-three-js)\n* 📜 [Set up Detox for end-to-end testing in your React Native App](https://thoughtbot.com/blog/set-up-detox-for-end-to-end-testing-in-your-react-native-app)\n* 📜 [The Easiest Way to Build Reactive Local-First Apps with TinyBase and PowerSync](https://bndkt.com/blog/2024/the-easiest-way-to-build-reactive-local-first-apps-with-tinybase-and-powersync)\n* 📦 [React Native 0.74.0-rc.8](https://github.com/facebook/react-native/releases/tag/v0.74.0-rc.8)\n* 📦 [React-Native-Skia 1.1 - makeImageSnapshotAsync](https://github.com/Shopify/react-native-skia/releases/tag/v1.1.0)\n* 📦 [New Architecture Helper - check if dependencies are ready for new architecture and bridgeless mode](https://github.com/aleqsio/new-arch-helper)\n* 📦 [react-native-localize 3.1 - visionOS support](https://github.com/zoontek/react-native-localize/releases/tag/3.1.0)\n* 📦 [expo-proximity - Access the system's proximity sensor](https://github.com/tmallet/expo-proximity)\n* 📦 [react-native-qrcode-skia](https://github.com/enzomanuelmangano/react-native-qrcode-skia)\n* 🎥 [Simon Grimm - React Native Security: Lock Screen, Face ID & Privacy Overlay](https://www.youtube.com/watch?v=iMFUWaIEzOs)\n* 🎙️ [RNR 293 - Real Life React Native With Benji Lightstone](https://reactnativeradio.com/episodes/rnr-293-real-life-react-native)\n* 🎙️ [Rocket Ship 37 - Bringing Swift to React Native with Gary Tokman](https://share.transistor.fm/s/cf35076f)",
      "source_content_hash": "9afe1d6ae96e0e5624ef7cc99e154a9c1c7899aab3ff0b998d4a30c2cfd996a7",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [Reactライブラリ分析 — Omletは実際の使用データに基づいて、どのコンポーネントやプロップを保持、削除、または改善すべきかを理解するのに役立ちます。](https://omlet.dev/?utm_campaign=partner_this-week-in-react_newsletter-rn-ql-apr-2024)\n* 🐦 [VisionCameraがSkiaに直接レンダリング](https://twitter.com/mrousavy/status/1776326923674661065): これはVision Camera 4で提供される予定で、リリースが近づいているようです。\n* 📣 [Expo - OrbitがWindows向けプレビューとして利用可能に](https://expo.dev/blog/expo-orbit-now-available-as-a-preview-for-windows): Orbitをご存知でない方のために、これはシミュレーター上でビルドを起動する便利なメニューバーアプリです。\n* 📣 [Expo - プッシュ通知受領IDの文字列形式が変更されます](https://expo.dev/blog/push-receipt-id-format-will-change)\n* 📖 [RN Gesture Handlerのジェスチャーは状態マシンです](https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/states-events/#state-flows): ドキュメントにはこれらを理解するための優れたインタラクティブな可視化が追加されました。\n* 🗓 [App.js Conf](https://appjs.co/?utm_source=thisweekinreact) - 🇵🇱 クラクフ - 5月22-24日。コード「TWIR」で[10%割引](https://ti.to/appjs/2024/discount/TWIR)が適用されます。\n* 📜 [React NativeでiOS上で真に選択可能なテキストを実現](https://haileyok.com/truly-selectable-text-with-react-native-on-ios/): RNでテキストの一部を選択可能にしようとしたことがある人なら、この記事と付随するライブラリに感謝するでしょう。\n* 📜 [React NativeアプリをDocker化する方法](https://scientyficworld.org/how-to-dockerize-a-react-native-app/) RNの開発環境をDockerで実行する方法の良いまとめ。iOSビルドはDockerではできないため、これだけでは半分の価値しかありませんが、特定のシナリオでは依然として意味があります（例: ローカルでネイティブビルドを全く行わない場合）。\n* 📜 [React Nativeの3Dアニメーションを改善する方法: Three.jsを使ったカメラ制御](https://www.themorrow.digital/blog/how-to-improve-your-react-native-3d-animations-camera-control-with-three-js)\n* 📜 [React NativeアプリでエンドツーエンドテストのためにDetoxをセットアップ](https://thoughtbot.com/blog/set-up-detox-for-end-to-end-testing-in-your-react-native-app)\n* 📜 [TinyBaseとPowerSyncでリアクティブなローカルファーストアプリを構築する最も簡単な方法](https://bndkt.com/blog/2024/the-easiest-way-to-build-reactive-local-first-apps-with-tinybase-and-powersync)\n* 📦 [React Native 0.74.0-rc.8](https://github.com/facebook/react-native/releases/tag/v0.74.0-rc.8)\n* 📦 [React-Native-Skia 1.1 - makeImageSnapshotAsync](https://github.com/Shopify/react-native-skia/releases/tag/v1.1.0)\n* 📦 [New Architecture Helper - 依存関係が新しいアーキテクチャとブリッジレスモードに対応しているか確認](https://github.com/aleqsio/new-arch-helper)\n* 📦 [react-native-localize 3.1 - visionOSサポート](https://github.com/zoontek/react-native-localize/releases/tag/3.1.0)\n* 📦 [expo-proximity - システムの近接センサーにアクセス](https://github.com/tmallet/expo-proximity)\n* 📦 [react-native-qrcode-skia](https://github.com/enzomanuelmangano/react-native-qrcode-skia)\n* 🎥 [Simon Grimm - React Nativeセキュリティ: ロック画面、Face ID & プライバシーオーバーレイ](https://www.youtube.com/watch?v=iMFUWaIEzOs)\n* 🎙️ [RNR 293 - Benji Lightstoneと語る実践的なReact Native](https://reactnativeradio.com/episodes/rnr-293-real-life-react-native)\n* 🎙️ [Rocket Ship 37 - Gary Tokmanと語るSwiftをReact Nativeに統合する方法](https://share.transistor.fm/s/cf35076f)"
      }
    },
    {
      "segment_id": "f1a2be1a",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "13292277",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "292df6cb",
      "source_content": "* 📣 [Set Methods (intersection, union, difference) moved to stage 4](https://twitter.com/robpalmer2/status/1777777295941386429) 🎉\n* 📣 [Promise.try moved to stage 2.7](https://github.com/tc39/proposal-promise-try/issues/15)\n* 📜 [A TC39 Proposal for Signals](https://eisenbergeffect.medium.com/a-tc39-proposal-for-signals-f0bedd37a335)\n* 📜 [Angular and Wiz Are Better Together](https://blog.angular.io/angular-and-wiz-are-better-together-91e633d8cd5a)\n* 📜 [HTML Streaming Over the Wire - A Deep Dive](https://aralroca.com/blog/html-streaming-over-the-wire)\n* 📜 [Creating and importing styles with constructable stylesheets and CSS module scripts](https://fullystacked.net/constructable/)\n* 📜 [Enhance WASM - Backend agnostic server-side rendering (SSR) for Web Components](https://begin.com/blog/posts/2024-04-08-introducing-enhance-wasm)\n* 📦 [ESLint 9.0 - flat config by default, config inspector, Node 20, cleanup formatters](https://eslint.org/blog/2024/04/eslint-v9.0.0-released/)\n* 📦 [VS Code 1.88 - Custom editor labels, test coverage API, Copilot enhancements](https://code.visualstudio.com/updates/v1_88)\n* 📦 [zx 8.0 - Write better scripts - smaller, sync calls, input, AbortController…](https://github.com/google/zx/releases/tag/8.0.0)\n* 🎥 [JavaScript Visualized - Event Loop, Web APIs, (Micro)task Queue](https://www.youtube.com/watch?v=eiC58R16hb8)",
      "source_content_hash": "c975e58e481303d0c634cc797649792d3cecda48905ba0758e37f4def966ac88",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📣 [Setメソッド（intersection、union、difference）がStage 4に移行](https://twitter.com/robpalmer2/status/1777777295941386429) 🎉\n* 📣 [Promise.tryがStage 2.7に移行](https://github.com/tc39/proposal-promise-try/issues/15)\n* 📜 [TC39提案：シグナルについて](https://eisenbergeffect.medium.com/a-tc39-proposal-for-signals-f0bedd37a335)\n* 📜 [AngularとWizの連携強化](https://blog.angular.io/angular-and-wiz-are-better-together-91e633d8cd5a)\n* 📜 [HTMLストリーミングの詳細解説](https://aralroca.com/blog/html-streaming-over-the-wire)\n* 📜 [構築可能なスタイルシートとCSSモジュールスクリプトによるスタイルの作成とインポート](https://fullystacked.net/constructable/)\n* 📜 [Enhance WASM - Webコンポーネントのバックエンド非依存サーバーサイドレンダリング（SSR）](https://begin.com/blog/posts/2024-04-08-introducing-enhance-wasm)\n* 📦 [ESLint 9.0 - デフォルトでflat config、設定インスペクター、Node 20対応、フォーマッターの整理](https://eslint.org/blog/2024/04/eslint-v9.0.0-released/)\n* 📦 [VS Code 1.88 - カスタムエディタラベル、テストカバレッジAPI、Copilotの機能強化](https://code.visualstudio.com/updates/v1_88)\n* 📦 [zx 8.0 - より良いスクリプト作成 - 軽量化、同期呼び出し、入力、AbortController対応…](https://github.com/google/zx/releases/tag/8.0.0)\n* 🎥 [JavaScript可視化 - イベントループ、Web API、（マイクロ）タスクキュー](https://www.youtube.com/watch?v=eiC58R16hb8)"
      }
    },
    {
      "segment_id": "74a488b8",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "b77e7669",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "619c3209",
      "source_content": "[![alt](/emails/issues/181/meme.jpg)](https://twitter.com/sebastienlorber/status/1777647108822102502)",
      "source_content_hash": "9ff82e1d44b5db0711df3a74802760e9291223a2f3582e3f410f926ec1716276",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/181/meme.jpg)](https://twitter.com/sebastienlorber/status/1777647108822102502)"
      }
    },
    {
      "segment_id": "44285072",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それではまた！👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/181/index.mdx",
  "last_updated_timestamp": "2025-06-12T01:22:18.056913+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "d0d01dbdd5e9a1e840e444b6ebb5b28582a9c7816117b99f3dd3159b0caaa697"
  }
}