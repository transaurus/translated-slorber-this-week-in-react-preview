{
  "source_file_path_relative_to_docusaurus_root": "newsletter/192/index.mdx",
  "source_file_content_hash": "9c970f804526d98db6d1d51f8014d5fdf35d3d38cf9399d0a2f73559807f8c97",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /192\ntitle: \"This Week In React #192: Fog of War, react-html, Memory leaks, Suspense, security, chadcn/ui Charts, MUI, XR, Filament, Rise, Expo, React Navigation, Reanimated, Node, TypeScript, pnpm, Vitest...\"\nauthors: [slorber]\ndate: 07-18-2024\n---",
      "source_content_hash": "cc7e13919957c5d1b23e73f2a1437d13da69fa87e3a3c068918c05892a9e690e",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "The newsletter is back after a well-deserved 2-weeks break!",
      "source_content_hash": "043eefddf93c53fa450dcd02de8eb78e217e7e8258e81619e83bd42e8f3c7db5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ニュースレターが2週間の休暇を経て戻ってきました！"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "So we're covering three weeks of news in one issue, and there are too many links to squeeze into one e-mail, so I had to filter out the news more aggressively. Despite the holiday season, we had a lot of great community React articles, and quite interesting React Native news!",
      "source_content_hash": "f079618fc2669eeb557ec43fabb5b040978e09ee68d710615ad9e844aba70a4d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今回は3週間分のニュースを1回の号でお届けします。リンクが多すぎて1通のメールに収まらないため、より厳選したニュースを掲載しています。休暇シーズンにもかかわらず、素晴らしいReactコミュニティの記事や興味深いReact Nativeのニュースがたくさんありました！"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "If you really like the exhaustive side of this newsletter, I'd encourage you to check the [online version](https://thisweekinreact.com/newsletter/192) this time: it exceptionally contains extra sections with twice more links that you might still find interesting. This also gives you a hint of the value I provide: the work you don't see is all the articles that I gathered and read/skimmed over and had to filter out.",
      "source_content_hash": "d89dbb571a52522640f8cc12f3271c4558f3d154937ff3e69fbdb983b2c5c30b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "もしこのニュースレターの網羅的な側面が気に入ったら、ぜひ[オンライン版](https://thisweekinreact.com/newsletter/192)もチェックしてみてください。今回は特別に、さらに多くのリンクを含む追加セクションがあります。これを見れば、私が提供している価値がわかるでしょう。読んで精査したものの、掲載を見送った記事もたくさんあるのです。"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "Check out our partner conf [React-Brussels](https://www.react.brussels/?utm_source=thisweekinreact) (🇧🇪 Brussels - 18 October), offering us a 10% discount with code “TWIR”. Some speakers have already been revealed!",
      "source_content_hash": "77247bb94252b89a86399daf9db73388c9237b4f1648ddc6cb1b623efb4d50ae",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "パートナーカンファレンス[React-Brussels](https://www.react.brussels/?utm_source=thisweekinreact)（🇧🇪 ブリュッセル - 10月18日）もチェックしてください。「TWIR」コードで10%割引が適用されます。すでにいくつかのスピーカーが発表されています！"
      }
    },
    {
      "segment_id": "45c63027",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_45c63027"
      }
    },
    {
      "segment_id": "1acb9a05",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [Twitterでこのニュースレターをチェック](https://slo.im/thread) - ビジュアルフォーマット 🎨**"
      }
    },
    {
      "segment_id": "fb3d50cd",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "0adfe0aa",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_0adfe0aa"
      }
    },
    {
      "segment_id": "1941846d",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_1941846d"
      }
    },
    {
      "segment_id": "a5403c6e",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "[![The Category-Defining React Grid for Your Enterprise](/emails/issues/190/advertfinal.jpg)](https://1771technologies.com/graphitegrid)",
      "source_content_hash": "098c88b4b0bf26279f19081d966227da11af0012ee2d0c2c4bb5ea9801866523",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![エンタープライズ向けカテゴリ定義Reactグリッド](/emails/issues/190/advertfinal.jpg)](https://1771technologies.com/graphitegrid)"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "**[The Category-Defining React Grid for Your Enterprise](https://1771technologies.com/graphitegrid)**",
      "source_content_hash": "f5e74c9afda4042a8771b3fea179b92169534dce151c247f4984b7b315b953f8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[エンタープライズ向けカテゴリ定義Reactグリッド](https://1771technologies.com/graphitegrid)**"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "Data grids are complex components of web applications, but current solutions are inefficient, require a lot of maintenance, and perform poorly. [Graphite Grid](https://1771technologies.com/graphitegrid) transforms the landscape with two key features: retargetable rendering and reactive signal state.",
      "source_content_hash": "ae1e23fc37d4e4f8ad9d2cc6915852b0f589bbc72583758436b6abddb5174fbd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "データグリッドはWebアプリケーションの複雑なコンポーネントですが、現在のソリューションは非効率的で、多くのメンテナンスを必要とし、パフォーマンスも低いです。[Graphite Grid](https://1771technologies.com/graphitegrid)は、再ターゲティング可能なレンダリングとリアクティブシグナル状態という2つの主要機能でこの状況を変えます。"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "**Graphite Grid** separates grid state from view logic, allowing a single unified state model to support a variety of render targets, declaratively or imperatively. It includes a **DOM and Canvas** renderer, giving developers flexible, high-performance options 🚀.",
      "source_content_hash": "9a4f40bb7338262be96c8b6fd51aafd981a3a6d1b896c82640ca22d1f43c88e6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**Graphite Grid**はグリッドの状態とビューロジックを分離し、単一の統一された状態モデルがさまざまなレンダリングターゲットを宣言的または命令的にサポートできるようにします。**DOMとCanvas**レンダラーを含んでおり、開発者に柔軟で高性能なオプションを提供します🚀。"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "Graphite Grid is declarative and consistent, leveraging state signals to ensure seamless integration with your application. Designed with **React in mind**, it is the only JavaScript data grid built with React's state management primitives. [Try it now!](https://1771technologies.com/graphitegrid/demo)",
      "source_content_hash": "cc96df044764791cb8f694826df305674de9dccc3ed870d1de5622f0ff40ae26",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Graphite Gridは宣言的で一貫性があり、状態シグナルを活用してアプリケーションとのシームレスな統合を保証します。**Reactを念頭に設計**されており、Reactの状態管理プリミティブで構築された唯一のJavaScriptデータグリッドです。[今すぐ試してみてください！](https://1771technologies.com/graphitegrid/demo)"
      }
    },
    {
      "segment_id": "602e59c7",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "54268405",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "8af76f3d",
      "source_content": "[![Remix - Fog of War](/emails/issues/192/rr.jpg)](https://remix.run/blog/fog-of-war)",
      "source_content_hash": "3b269cf237fc9a2c2b708421cd4767ce1139ea189522c4a003e4903449d3b0ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Remix - Fog of War](/emails/issues/192/rr.jpg)](https://remix.run/blog/fog-of-war)"
      }
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "**[Remix - Fog of War](https://remix.run/blog/fog-of-war)**",
      "source_content_hash": "22260a609296c3ec60bb6cc20d2e208013fa9bf1044453510c9e92c53e1dc993",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Remix - Fog of War](https://remix.run/blog/fog-of-war)**"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "We already featured this in our last issue, but there’s now a dedicated blog post that greatly explains what it’s all about. A new React Router feature enables you to split your route manifest in chunks. This article explains how it has been integrated in Remix 2.10 and what are the tradeoffs. It turns out a route manifest can grow quite large, and if you don’t split it, it might delay your app’s React hydration because it has to be downloaded upfront. If you have a medium/large Remix or React Router site, I’d recommend to check the size your route manifest immediately, and think about logical ways to split it, because the size reduction this new feature enable can have a significant perf impact. Shopify’s initial manifest went from 10MB to 1.9KB! The Docusaurus website manifest is also 200KB and I definitively plan to implement this.",
      "source_content_hash": "36ed45ca3876abc4a85dab9cf8d2ef6154fb0c1ee1a265f314d61c2c63258754",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "前号でも取り上げましたが、専用のブログ記事が公開され、その内容が詳しく説明されています。新しいReact Routerの機能により、ルートマニフェストをチャンクに分割できるようになりました。この記事では、Remix 2.10にどのように統合されたかとトレードオフについて説明しています。ルートマニフェストはかなり大きくなる可能性があり、分割しないとアプリのReactハイドレーションが遅れる可能性があります。中規模/大規模なRemixまたはReact Routerサイトをお持ちの場合は、すぐにルートマニフェストのサイズを確認し、論理的な分割方法を検討することをお勧めします。この新機能によるサイズ削減はパフォーマンスに大きな影響を与える可能性があります。Shopifyの初期マニフェストは10MBから1.9KBに削減されました！Docusaurusのウェブサイトマニフェストも200KBあり、私は間違いなくこれを実装する予定です。"
      }
    },
    {
      "segment_id": "e0a17c0d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "157c9741",
      "source_content": "* 💸 [Meilisearch — Build fast, typo-tolerant search with React](https://dub.sh/0PeE0RQ)\n* 👀 [React Core PR - `ReactHTML.renderToMarkup`](https://github.com/facebook/react/pull/30105): A new `react-html`package is being introduced for producing HTML that’s not meant to be hydrated (like emails). It’s the successor of`renderToStaticMarkup`, supporting modern features like Suspense.\n* 👀 [React Core PR - `React.captureOwnerStack()`](http://github.com/facebook/react/pull/29923): From many PRs I see, a lot of effort is going on in the React repo to improve debugging, logging, and producing readable “component owner stack traces”. This new public API should be useful for framework authors to display an error dialog.\n* 👀 [Next.js PR - TypeScript config file (`next.config.ts`)](https://github.com/vercel/next.js/pull/63051): A welcome improvement for DX to have first-class TypeScript support in config files, not anymore limited to JSDoc comments.\n* 🗓️ [React Rally](https://reactrally.com/?utm_source=thisweekinreact) - 🇺🇸 Utah - 12-13, August - Get a [10% discount](https://ti.to/react-rally/react-rally-2024/discount/TWIR) with code \"TWIR\". An awesome line up announced with Kent C. Dodds, Cory House, Joel Hooks, Tejas Kumar.\n* 📜 [Sneaky React Memory Leaks: How the React compiler won't save you](http://schiener.io/2024-07-07/react-closures-compiler): This closes a great 3-part series on memory leaks in React. Kevin found a case where using the React Compiler would actually introduce a memory leak to code that wouldn’t leak otherwise. Using bind might be a decent workaround. Note that these memory issues are not limited to React, but happen due to using functional programming and closures in JS in general.\n* 📜 [How to Simplify Component Imports with TypeScript Namespaces](https://sergiodxa.com/tutorials/simplify-component-imports-with-typescript-namespaces): I admit I didn’t know this quite pragmatic React + TypeScript trick that [Matt Pocock also approves](https://x.com/mattpocockuk/status/1805606072167940167).\n* 📜 [How to protect against a security breach in React Server Components](https://www.nodejs-security.com/blog/how-to-protect-against-a-security-breach-in-react-server-components): Greatly illustrates that validating with Zod is not enough, and it’s important to check access control for any server action input.\n* 📜 [WorkOS - Migrating to Next.js App Router with zero downtime](https://workos.com/blog/migrating-to-next-js-app-router-with-zero-downtime): An incremental migration from pages to App Router does not give a great navigation UX. They found a clever way to expose the same app as both Pages Router and App Router, with the ability to switch routers through a query string param.\n* 📜 [Enhancing The New York Times Web Performance with React 18](https://open.nytimes.com/enhancing-the-new-york-times-web-performance-with-react-18-d6f91a7c5af8): They migrated from React 16 and see great benefits such as fewer re-renders and improved INP score. Also encountered some challenges due to stricter hydration requirements.\n* 📜 [Learn Suspense by Building a Suspense-Enabled Library](https://www.bbss.dev/posts/react-learn-suspense/): Creates a suspense-enabled `useFetch()` hook to broadly demonstrate how real-world libraries work.\n* 📜 [All About That Button, ’Bout That Button](https://blog.jim-nielsen.com/2024/all-about-that-button/): Remix encourages writing mutations as declarative HTML that works “before” JS, and other interesting button-related progressive enhancement things.\n* 📜 [Secret knowledge to self-host Next.js](https://www.flightcontrol.dev/blog/secret-knowledge-to-self-host-nextjs): Guide with everything you need for deploying production Next.js outside Vercel.\n* 📜 [5 Misconceptions about React Server Components](https://www.builder.io/blog/nextjs-react-server-components)\n* 📦 [chadcn/ui Charts - Collection of beautiful chart components, built using Recharts](https://ui.shadcn.com/docs/components/chart)\n* 📦 [Material UI 6.0 beta - Pigment CSS build-time CSS-in-JS support (optional), container queries](https://next.mui.com/material-ui/migration/migrating-to-v6/)\n* 📦 [react-three/xr 6.0 - AR/VR for react-three-fiber](https://github.com/pmndrs/xr)\n* 📦 [Motion-Primitives - Beautifully designed motions components based on Framer Motion](https://motion-primitives.com/)\n* 🎥 [Jack Herrington - Warning: React 19's use Hook Can Impact App Performance](https://www.youtube.com/watch?v=t6MeFVF3V9I): TIL about a surprising React implementation detail when it first encounters a “use” hook.\n* 🎙️ [PodRocket - React Compiler with Sathya Gunasekaran and Joe Savona](https://podrocket.logrocket.com/react-compiler-sathya-gunasekaran-joe-savona)",
      "source_content_hash": "2a23ffce67b1f4ade9bd5fb2c594ca6853efa91f7a65a18d8b44ef1c058d187d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [Meilisearch — Reactで高速でタイポ耐性のある検索を構築](https://dub.sh/0PeE0RQ)\n* 👀 [React Core PR - `ReactHTML.renderToMarkup`](https://github.com/facebook/react/pull/30105): ハイドレートされないHTML（メールなど）を生成するための新しい`react-html`パッケージが導入されます。`renderToStaticMarkup`の後継で、Suspenseのようなモダンな機能をサポートします。\n* 👀 [React Core PR - `React.captureOwnerStack()`](http://github.com/facebook/react/pull/29923): Reactリポジトリでは、デバッグ、ロギング、読みやすい「コンポーネントオーナースタックトレース」の生成を改善するための多くの作業が行われています。この新しい公開APIは、フレームワーク作者がエラーダイアログを表示するのに役立つでしょう。\n* 👀 [Next.js PR - TypeScript設定ファイル（`next.config.ts`）](https://github.com/vercel/next.js/pull/63051): JSDocコメントに限定されず、設定ファイルでTypeScriptを第一級サポートするDX改善です。\n* 🗓️ [React Rally](https://reactrally.com/?utm_source=thisweekinreact) - 🇺🇸 ユタ州 - 8月12-13日 - コード「TWIR」で[10%割引](https://ti.to/react-rally/react-rally-2024/discount/TWIR)。Kent C. Dodds、Cory House、Joel Hooks、Tejas Kumarなど豪華なラインナップが発表されています。\n* 📜 [Reactの巧妙なメモリリーク：Reactコンパイラーが救えないケース](http://schiener.io/2024-07-07/react-closures-compiler): Reactでのメモリリークに関する素晴らしい3部作の最終章です。Kevinは、Reactコンパイラーを使用すると、本来リークしないコードにメモリリークを引き起こすケースを発見しました。bindの使用が有効な回避策になるかもしれません。これらのメモリ問題はReactに限定されず、JS全般での関数型プログラミングとクロージャの使用によって発生します。\n* 📜 [TypeScript名前空間でコンポーネントインポートを簡素化する方法](https://sergiodxa.com/tutorials/simplify-component-imports-with-typescript-namespaces): [Matt Pocockも推奨する](https://x.com/mattpocockuk/status/1805606072167940167)、React + TypeScriptの実用的なテクニックです。\n* 📜 [React Server Componentsでのセキュリティ侵害から保護する方法](https://www.nodejs-security.com/blog/how-to-protect-against-a-security-breach-in-react-server-components): Zodでの検証だけでは不十分で、サーバーアクションの入力に対してアクセス制御をチェックすることが重要であることを示しています。\n* 📜 [WorkOS - ダウンタイムゼロでNext.js App Routerに移行する方法](https://workos.com/blog/migrating-to-next-js-app-router-with-zero-downtime): Pages RouterからApp Routerへの段階的な移行では優れたナビゲーションUXが得られません。彼らは、クエリ文字列パラメータを通じてルーターを切り替えることで、同じアプリをPages RouterとApp Routerの両方として公開する巧妙な方法を見つけました。\n* 📜 [React 18でニューヨーク・タイムズのWebパフォーマンスを向上](https://open.nytimes.com/enhancing-the-new-york-times-web-performance-with-react-18-d6f91a7c5af8): React 16から移行し、再レンダリングの減少やINPスコアの向上などの大きなメリットを得ました。より厳格なハイドレーション要件による課題にも直面しました。\n* 📜 [Suspense対応ライブラリを構築してSuspenseを学ぶ](https://www.bbss.dev/posts/react-learn-suspense/): 実際のライブラリがどのように機能するかを広く示すために、Suspense対応の`useFetch()`フックを作成します。\n* 📜 [ボタンについてのすべて](https://blog.jim-nielsen.com/2024/all-about-that-button/): Remixは、JSが動作する「前」に機能する宣言的なHTMLとしてミューテーションを記述することを推奨し、その他のボタン関連のプログレッシブエンハンスメントについても興味深い内容です。\n* 📜 [Next.jsをセルフホストするための秘伝の知識](https://www.flightcontrol.dev/blog/secret-knowledge-to-self-host-nextjs): Vercel以外でNext.jsを本番環境にデプロイするために必要なすべてが記載されたガイドです。\n* 📜 [React Server Componentsに関する5つの誤解](https://www.builder.io/blog/nextjs-react-server-components)\n* 📦 [chadcn/ui Charts - Rechartsを使用して構築された美しいチャートコンポーネントのコレクション](https://ui.shadcn.com/docs/components/chart)\n* 📦 [Material UI 6.0ベータ - Pigment CSSによるビルド時CSS-in-JSサポート（オプション）、コンテナクエリ](https://next.mui.com/material-ui/migration/migrating-to-v6/)\n* 📦 [react-three/xr 6.0 - react-three-fiber向けAR/VR](https://github.com/pmndrs/xr)\n* 📦 [Motion-Primitives - Framer Motionベースの美しく設計されたモーションコンポーネント](https://motion-primitives.com/)\n* 🎥 [Jack Herrington - 警告: React 19のuseフックはアプリのパフォーマンスに影響を与える可能性あり](https://www.youtube.com/watch?v=t6MeFVF3V9I): 「use」フックに初めて遭遇したときのReactの実装詳細について学びました。\n* 🎙️ [PodRocket - Sathya GunasekaranとJoe SavonaによるReactコンパイラー](https://podrocket.logrocket.com/react-compiler-sathya-gunasekaran-joe-savona)"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "**Extras:**",
      "source_content_hash": "bb404c372116a106603db9e68d4654a92b41346dea83ace9cb66f1837f27e81a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {}
    },
    {
      "segment_id": "caffd879",
      "source_content": "* 👀 [Next.js PR - onRequestError in instrumentation.js](https://github.com/vercel/next.js/pull/67539)\n* 💬 [Why Vercel created Turbopack instead of using Vite](https://github.com/vercel/next.js/issues/48748#issuecomment-2199941311)\n* 📜 [The Secret to Maintainable Remix Apps: Hexagonal Architecture](https://laconicwit.com/the-secret-to-maintainable-remix-apps-hexagonal-architecture/)\n* 📜 [Can you modify React Props?](https://www.epicreact.dev/can-you-modify-react-props)\n* 📜 [Demistifying cache in Next.js](https://www.nico.fyi/blog/demistifying-cache-in-nextjs)\n* 📜 [How much code can Tanstack Query save](https://www.frontendundefined.com/posts/monthly/tanstack-query-savings/)\n* 📜 [The Experience of Deploying Next.js Apps on Cloudflare](https://davidgomes.com/the-experience-of-deploying-next-js-apps-on-cloudflare/)\n* 📜 [Preparing for React 19: a guide for WordPress 6.6 users](https://kinsta.com/blog/react-19-wordpress/)\n* 📜 [A pragmatic guide for adding React to an existing Rails application (and still use Hotwire)](https://thoughtbot.com/blog/add-react-to-an-existing-rails-app)\n* 📜 [Next.js and cache poisoning: a quest for the black hole](https://zhero-web-sec.github.io/research-and-things/nextjs-and-cache-poisoning-a-quest-for-the-black-hole)\n* 📜 [Security advice for self-hosting Next.js in Docker](https://blog.arcjet.com/security-advice-for-self-hosting-next-js-in-docker/)\n* 📜 [Nested arrays and objects in Form Data with Conform](https://www.jacobparis.com/content/conform-nested-formdata)\n* 📜 [React Form Button](https://www.robinwieruch.de/react-form-button/)\n* 📜 [Extra Arguments for Server Actions in React Forms](https://www.robinwieruch.de/react-form-server-action-extra-arguments/)\n* 📜 [Next.js createPage helper with loader pattern](https://saas-ui.dev/blog/nextjs-create-page-helper-with-loader-pattern)\n* 📜 [How Zustand Was Born](https://blog.axlight.com/posts/how-zustand-was-born/)\n* 📜 [The React useRef Hook: Not Just for DOM Elements](https://opensauced.pizza/docs/community-resources/the-react-useref-hook-not-just-for-html-elements/)\n* 📜 [Path To A Clean(er) React Architecture (Part 7) - Domain Logic](https://profy.dev/article/react-architecture-domain-logic)\n* 📦 [Headless UI React 2.1 - Simplified transition API and improved multi-dialog support](https://tailwindcss.com/blog/2024-06-21-headless-ui-v2-1)\n* 📦 [Storybook 8.2 - beforeAll test hook, enhanced play function, portable stories, new onboarding](https://github.com/storybookjs/storybook/releases/tag/v8.2.0)\n* 📦 [React Flow 12.0 - SSR support, Computing flows, dark mode](https://www.xyflow.com/blog/react-flow-12-release)\n* 📦 [Hono 4.5 - React 19 Compatible APIs](https://github.com/honojs/hono/releases/tag/v4.5.0)\n* 🎥 [Dave Gray - Toast Notification Patterns with Next.js Server Actions and next-safe-action](https://www.youtube.com/watch?v=A_061Vqh6Bc)\n* 🎥 [Lazar Nikolov - Implementing Clean Architecture Patterns in Next.js](https://www.youtube.com/playlist?list=PLHQY5AFuyYYW8IJK16BxyTLZqTHxwmDww)\n* 🎥 [Jolly Coding - NextJS 'use server' Trap (Accidentally Leaking Data)](https://www.youtube.com/watch?v=yBEHKoaoZpY)\n* 🎥 [Olivier Larose - GSAP vs Framer Motion for React](https://www.youtube.com/watch?v=_1QAJaC6Xwc)\n* 🎙️ [This Month in React - React 19 delayed (drama-ish), why no JS Laravel, TS 5.5…](https://podcasters.spotify.com/pod/show/reactiflux/episodes/TMiR-2024-06-React-19-delayed-drama-ish--why-no-JS-Laravel--TS-5-5-and-more-e2lee77)",
      "source_content_hash": "57aa7d4eaa2e7f7428d88be8c75a4e35c54af64171a67a8fb50a802e23581c66",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 👀 [Next.js PR - instrumentation.js の onRequestError](https://github.com/vercel/next.js/pull/67539)\n* 💬 [Vercel が Vite ではなく Turbopack を作成した理由](https://github.com/vercel/next.js/issues/48748#issuecomment-2199941311)\n* 📜 [保守可能なRemixアプリの秘訣：ヘキサゴナルアーキテクチャ](https://laconicwit.com/the-secret-to-maintainable-remix-apps-hexagonal-architecture/)\n* 📜 [ReactのPropsを変更できるか？](https://www.epicreact.dev/can-you-modify-react-props)\n* 📜 [Next.jsのキャッシュを解明する](https://www.nico.fyi/blog/demistifying-cache-in-nextjs)\n* 📜 [Tanstack Queryが節約できるコード量](https://www.frontendundefined.com/posts/monthly/tanstack-query-savings/)\n* 📜 [CloudflareにNext.jsアプリをデプロイする体験](https://davidgomes.com/the-experience-of-deploying-next-js-apps-on-cloudflare/)\n* 📜 [React 19への準備：WordPress 6.6ユーザー向けガイド](https://kinsta.com/blog/react-19-wordpress/)\n* 📜 [既存のRailsアプリケーションにReactを追加する実践ガイド（Hotwireも活用）](https://thoughtbot.com/blog/add-react-to-an-existing-rails-app)\n* 📜 [Next.jsとキャッシュポイズニング：ブラックホールを求めて](https://zhero-web-sec.github.io/research-and-things/nextjs-and-cache-poisoning-a-quest-for-the-black-hole)\n* 📜 [DockerでNext.jsをセルフホスティングする際のセキュリティアドバイス](https://blog.arcjet.com/security-advice-for-self-hosting-next-js-in-docker/)\n* 📜 [ConformでForm Dataのネストされた配列とオブジェクトを扱う](https://www.jacobparis.com/content/conform-nested-formdata)\n* 📜 [Reactフォームボタン](https://www.robinwieruch.de/react-form-button/)\n* 📜 [Reactフォームのサーバーアクションに追加引数を渡す](https://www.robinwieruch.de/react-form-server-action-extra-arguments/)\n* 📜 [Next.jsのcreatePageヘルパーとローダーパターン](https://saas-ui.dev/blog/nextjs-create-page-helper-with-loader-pattern)\n* 📜 [Zustandが生まれた経緯](https://blog.axlight.com/posts/how-zustand-was-born/)\n* 📜 [ReactのuseRefフック：DOM要素だけではない使い方](https://opensauced.pizza/docs/community-resources/the-react-useref-hook-not-just-for-html-elements/)\n* 📜 [クリーンなReactアーキテクチャへの道（第7部）- ドメインロジック](https://profy.dev/article/react-architecture-domain-logic)\n* 📦 [Headless UI React 2.1 - 簡素化されたトランジションAPIと改良されたマルチダイアログサポート](https://tailwindcss.com/blog/2024-06-21-headless-ui-v2-1)\n* 📦 [Storybook 8.2 - beforeAllテストフック、強化されたplay関数、ポータブルストーリー、新オンボーディング](https://github.com/storybookjs/storybook/releases/tag/v8.2.0)\n* 📦 [React Flow 12.0 - SSRサポート、フローの計算、ダークモード](https://www.xyflow.com/blog/react-flow-12-release)\n* 📦 [Hono 4.5 - React 19互換API](https://github.com/honojs/hono/releases/tag/v4.5.0)\n* 🎥 [Dave Gray - Next.jsサーバーアクションとnext-safe-actionを使ったトースト通知パターン](https://www.youtube.com/watch?v=A_061Vqh6Bc)\n* 🎥 [Lazar Nikolov - Next.jsでクリーンアーキテクチャパターンを実装する](https://www.youtube.com/playlist?list=PLHQY5AFuyYYW8IJK16BxyTLZqTHxwmDww)\n* 🎥 [Jolly Coding - NextJSの'use server'トラップ（データ漏洩のリスク）](https://www.youtube.com/watch?v=yBEHKoaoZpY)\n* 🎥 [Olivier Larose - React向けGSAP vs Framer Motion比較](https://www.youtube.com/watch?v=_1QAJaC6Xwc)\n* 🎙️ [今月のReact - React 19延期（ドラマチック？）、JS版Laravelがない理由、TS 5.5…](https://podcasters.spotify.com/pod/show/reactiflux/episodes/TMiR-2024-06-React-19-delayed-drama-ish--why-no-JS-Laravel--TS-5-5-and-more-e2lee77)"
      }
    },
    {
      "segment_id": "440823bd",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_440823bd"
      }
    },
    {
      "segment_id": "f414353c",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "f947c8e4",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "7bc8bb24",
      "source_content": "[![WorkOS: Modern Identity Platform for B2B SaaS](/emails/issues/189/WorkOS.jpg)](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)",
      "source_content_hash": "5d960163cda7dd4ad2b7a4b23e2a7c32b3424eb738259c888d9f4a15768e4e69",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![WorkOS: B2B SaaS向けモダンアイデンティティプラットフォーム](/emails/issues/189/WorkOS.jpg)](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "**[WorkOS: Modern Identity Platform for B2B SaaS](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)**",
      "source_content_hash": "09cc6f61af62a8e2af31f34e99f01c53352d2b40138a804c5843290950ac5d4a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[WorkOS: B2B SaaS向けモダンアイデンティティプラットフォーム](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)**"
      }
    },
    {
      "segment_id": "e9313fef",
      "source_content": "With WorkOS you can start selling to enterprises with just a few lines of code.",
      "source_content_hash": "b304c6229bc7a16552aa18a5b6e5130f61eb1fe96748924778ed6da206a57780",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "WorkOSを使えば、数行のコードで企業向けの販売を開始できます。"
      }
    },
    {
      "segment_id": "1b4de6df",
      "source_content": "🔐 WorkOS supports a complete User Management solution along with **SSO, SCIM, RBAC, & FGA**.",
      "source_content_hash": "10da58f0b0f8331dbcb7064da06da8b46c8a17e95fe0de601e8b9f4d9b63fb6f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🔐 WorkOSは完全なユーザー管理ソリューションに加えて、**SSO、SCIM、RBAC、FGA**をサポートしています。"
      }
    },
    {
      "segment_id": "1958bc43",
      "source_content": "🏗️ The APIs are **flexible, easy-to-use, and modular**. Pick and choose what you need and integrate in minutes.",
      "source_content_hash": "f565da176cd3c9e58faeffc99f75d15725a5f1ed0be896bb818ab2a35e1cf3ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🏗️ APIは**柔軟で使いやすく、モジュール式**です。必要な機能を選び、数分で統合できます。"
      }
    },
    {
      "segment_id": "a8610918",
      "source_content": "🎨 Design and user experience are everything. From the quality of our documentation to how your users onboard, we **remove all the unnecessary complexity for developers**.",
      "source_content_hash": "432e79b81813c3834300519fb5d4ec352a5ed97c6c8ad169b94d11678ed3bb6f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🎨 デザインとユーザー体験がすべてです。ドキュメントの品質からユーザーのオンボーディングまで、開発者にとって不要な複雑さを**すべて排除**しています。"
      }
    },
    {
      "segment_id": "a6c928a1",
      "source_content": "✨ User Management is **free up to 1 million MAUs** and includes bot protection, impersonation, MFA, & more.",
      "source_content_hash": "11e1e6a44daa49c02a2fce6e15250f11079211f74e0aad13528040cf37e6773e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "✨ ユーザー管理は**100万MAUまで無料**で、ボット対策、なりすまし防止、MFAなどが含まれます。"
      }
    },
    {
      "segment_id": "b6152880",
      "source_content": "🤝 WorkOS is trusted by hundreds of leading startups like **Perplexity**, **Vercel**, & **Webflow**.",
      "source_content_hash": "43e2ceada1d518743097693e7bee36fd8f5f6a9f9a03dd28878d31ae3a97fba6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🤝 WorkOSは**Perplexity**、**Vercel**、**Webflow**など、数百の主要スタートアップに信頼されています。"
      }
    },
    {
      "segment_id": "b9331170",
      "source_content": "Future-proof your auth stack with [WorkOS](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024) 🚀",
      "source_content_hash": "64afc9a77949c4d7b3ffd56778ff2833a8c7ca3a27e66dc25e939ab1bb9f0cc8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[WorkOS](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)で認証スタックを未来に備えましょう 🚀"
      }
    },
    {
      "segment_id": "566c958b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c35e5786",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "9c9e2b64",
      "source_content": "[![react-native-filament](/emails/issues/192/filament.jpg)](https://github.com/margelo/react-native-filament)",
      "source_content_hash": "1cef282eb59ac264472bb7c957e94b516f82ccc497961c147e4f64ccf7c63481",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![react-native-filament](/emails/issues/192/filament.jpg)](https://github.com/margelo/react-native-filament)"
      }
    },
    {
      "segment_id": "5c7d994c",
      "source_content": "**[react-native-filament](https://github.com/margelo/react-native-filament)**",
      "source_content_hash": "7c9536137d4534d746dceab4dc8ea1b26b73575fa91eb4bf22ff9bc4d720d1ba",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[react-native-filament](https://github.com/margelo/react-native-filament)**"
      }
    },
    {
      "segment_id": "1ecf0882",
      "source_content": "The Margelo team released an impressive new real-time physically based 3D rendering engine for React Native, based on Google Filament. It’s GPU-accelerated by Metal/Vulkan, rendered on a separate thread, works with Reanimated, and already supports the New Architecture and Expo. The readme explains well how it differs from existing 3D solutions based on expo-gl (expo-three and react-three-fiber RN). With Skia and Filament, the future looks bright for React Native's 2D/3D capabilities.",
      "source_content_hash": "0ac6d0643760e188faffe12adbac9fd55fbb9597f0de9aba139674a1e38d5c48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Margeloチームが、Google FilamentをベースにしたReact Native向けのリアルタイム物理ベース3Dレンダリングエンジンをリリースしました。Metal/VulkanでGPUアクセラレーションされ、別スレッドでレンダリングされ、Reanimatedと連携可能で、すでにNew ArchitectureとExpoをサポートしています。READMEには、expo-glベースの既存の3Dソリューション（expo-threeやreact-three-fiber RN）との違いが詳しく説明されています。SkiaとFilamentにより、React Nativeの2D/3D機能の未来は明るいです。"
      }
    },
    {
      "segment_id": "8bafd2d7",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "bb1346b6",
      "source_content": "[![Rise Tools](/emails/issues/192/rise.jpg)](https://rise.tools/)",
      "source_content_hash": "3461a1422edfbc58ac1abc339a9210d72e732f549124f56e2e57a4d678426151",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Rise Tools](/emails/issues/192/rise.jpg)](https://rise.tools/)"
      }
    },
    {
      "segment_id": "8664ed0b",
      "source_content": "**[Rise Tools](https://rise.tools/)**",
      "source_content_hash": "e6462c9eda464f099f6e8cec61631a07033aef5509603c6d355eeec2b00151f0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Rise Tools](https://rise.tools/)**"
      }
    },
    {
      "segment_id": "9e90a9b3",
      "source_content": "A brand-new solution to create Server Driven UIs in React Native, that allows you to deploy new views on the server without rebuilding/resubmitting your app (or even ship an OTA update). It looks philosophically very close to the React Server Components model, but with slightly different tradeoffs: at the cost of some additional manual wiring, this new solution is framework and language agnostic thanks to a protocol that defines how views are serialized. It's still early days, but it looks promising.",
      "source_content_hash": "562207226c461d4b1993eff5c54169d3b65afd54a890174ad2c0ba89925ca53c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Nativeでサーバー駆動UIを作成する新しいソリューションで、アプリをリビルドや再提出せずに（あるいはOTA更新で）サーバー上に新しいビューをデプロイできます。哲学的にはReact Server Componentsモデルに非常に近いですが、若干異なるトレードオフがあります：追加の手動作業が必要な代わりに、ビューがどのようにシリアライズされるかを定義するプロトコルにより、この新しいソリューションはフレームワークや言語に依存しません。まだ初期段階ですが、非常に有望です。"
      }
    },
    {
      "segment_id": "294e85af",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "739843fe",
      "source_content": "* 💸 [RevenueCat Paywalls - Easy remotely configurable paywalls for React Native apps](https://www.revenuecat.com/docs/tools/paywalls?utm_medium=sponsored\\&utm_source=thisWeekInReact\\&utm_campaign=general_sponsorship\\&utm_content=revenuecat-paywalls)\n* 📣 [React Native 0.76 - Android minSdk will bump to Android 7.0 (API 24)](https://github.com/react-native-community/discussions-and-proposals/discussions/802)\n* 👀 [More-reacty-native-demo](https://github.com/EvanBacon/more-reacty-native-demo): Evan Bacon experiments on exposing native views as lowercase intrinsic JSX elements that can be used directly without importing them, like divs on the web.\n* 📖 [Reanimated Cookbook - Real-life examples to help you learn](https://docs.swmansion.com/react-native-reanimated/examples/)\n* 🗓️ [The Geek Conf](https://www.thegeekconf.com/?utm_source=thisweekinreact) - 🇩🇪 Berlin - 18 & 25 July - Get a 10% discount with code \"TWIR\". Last day tickets for tomorrow remote events !\n* 📜 [Expo - Increase iteration speed with PR previews](https://expo.dev/blog/increase-iteration-speed-with-pr-previews): New feature integrates EAS Updates with GitHub to automatically post OTA updates as PR commit status. A great DX, similar to what Vercel/Netlify offer on the web, but for mobile! My only wish is that they post a QRCode in a sticky PR comment.\n* 📜 [Use a framework to build React Native apps](https://reactnative.dev/blog/2024/06/25/use-a-framework-to-build-react-native-apps): The React Native team finally officially endorses the use of Expo! If you don’t use a framework, you are probably building one.\n* 📜 [From Web to Native with React](https://expo.dev/blog/from-web-to-native-with-react): Kadi from Expo created a great resource to help web devs learn React Native, including a comparison between intrinsic React DOM and React Native elements, how the flexbox model is a little bit different, errors to avoid, new native things to learn, and overall a great overview of anything to be aware of related to React Native or Expo.\n* 📜 [Microsoft - Building React Native for Windows Apps from a Mac](https://devblogs.microsoft.com/react-native/2024-07-18-running-rnw-from-a-mac-md/): Owning a Wndows PC is not required, and you can use a Windows VM through Microsoft Dev Box or Parallels.\n* 📜 [App clip with React Native and New Arch (and Swift)](https://ospfranco.com/app-clip-with-react-native-and-new-arch-\\(and-swift\\)/)\n* 📜 [Bringing native AI to your mobile apps with ExecuTorch - Part 2, Android](https://blog.swmansion.com/bringing-native-ai-to-your-mobile-apps-with-executorch-part-ii-android-29431b6b9f7f)\n* 📜 [Introduction to the React Native OMH Maps Library](https://www.callstack.com/blog/introduction-to-the-react-native-omh-maps-library)\n* 📦 [React Navigation 7.0 RC](https://reactnavigation.org/blog/2024/06/27/react-navigation-7.0-rc/): The final 7.0 release is coming, and I’m particularly excited by the Static API and the introduction of a screen preloading API. This is a first step toward great upcoming perceived performance improvements, that could later leverage upcoming Concurrent React features like notably `<Activity>`.\n* 📦 [FlashList 1.7 - New Architecture support!](https://github.com/Shopify/flash-list/releases/tag/v1.7.0)\n* 📦 [Yoga 3.1 - gap in %, layout conformance and regression fixes](https://www.yogalayout.dev/blog/announcing-yoga-3.1)\n* 📦 [Reanimated 3.13 - New Architecture, Tabs Shared Element Transitions](https://github.com/software-mansion/react-native-reanimated/releases/tag/3.13.0)\n* 📦 [React Native Primitives - Unstyled universal components with a focus on accessibility](https://github.com/roninoss/rn-primitives)",
      "source_content_hash": "13b28dbce83dbedd8ba8948c396e395ae49f0282fc326d81c488fa01b4524883",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [RevenueCat Paywalls - React Nativeアプリ向けのリモート設定可能なペイウォール](https://www.revenuecat.com/docs/tools/paywalls?utm_medium=sponsored\\&utm_source=thisWeekInReact\\&utm_campaign=general_sponsorship\\&utm_content=revenuecat-paywalls)\n* 📣 [React Native 0.76 - AndroidのminSdkがAndroid 7.0（API 24）に引き上げられます](https://github.com/react-native-community/discussions-and-proposals/discussions/802)\n* 👀 [More-reacty-native-demo](https://github.com/EvanBacon/more-reacty-native-demo): Evan Baconが、ネイティブビューを小文字の組み込みJSX要素として直接使用できるようにする実験を行っています（Webのdiv要素のようにインポート不要）。\n* 📖 [Reanimated Cookbook - 実践的な学習用サンプル集](https://docs.swmansion.com/react-native-reanimated/examples/)\n* 🗓️ [The Geek Conf](https://www.thegeekconf.com/?utm_source=thisweekinreact) - 🇩🇪 ベルリン - 7月18日＆25日 - コード「TWIR」で10%割引。明日のリモートイベント最終日チケット！\n* 📜 [Expo - PRプレビューで開発サイクルを高速化](https://expo.dev/blog/increase-iteration-speed-with-pr-previews): GitHubとEAS Updatesを連携し、PRのコミットステータスとしてOTA更新を自動投稿する新機能。WebのVercel/Netlifyのような優れた開発者体験。QRコードをPRコメントに貼ってくれるとさらに良いのですが。\n* 📜 [React Nativeアプリ開発にはフレームワークを使いましょう](https://reactnative.dev/blog/2024/06/25/use-a-framework-to-build-react-native-apps): React Nativeチームが公式にExpoの使用を推奨！フレームワークを使わない場合、実は自分でフレームワークを作っているようなものです。\n* 📜 [Web開発者からネイティブ開発へ（React編）](https://expo.dev/blog/from-web-to-native-with-react): ExpoのKadiがReact DOMとReact Nativeの要素比較、flexboxモデルの違い、避けるべきエラー、学ぶべきネイティブ機能など、React Native/Expoに関するすべてを網羅した素晴らしい学習リソースを作成。\n* 📜 [Microsoft - MacからReact Native for Windowsアプリを構築](https://devblogs.microsoft.com/react-native/2024-07-18-running-rnw-from-a-mac-md/): Windows PCは必須ではなく、Microsoft Dev BoxやParallels経由のWindows VMが利用可能。\n* 📜 [React NativeとNew Arch（およびSwift）を使ったApp Clip](https://ospfranco.com/app-clip-with-react-native-and-new-arch-\\(and-swift\\)/)\n* 📜 [ExecuTorchでモバイルアプリにネイティブAIを導入 - Part 2（Android編）](https://blog.swmansion.com/bringing-native-ai-to-your-mobile-apps-with-executorch-part-ii-android-29431b6b9f7f)\n* 📜 [React Native OMH Mapsライブラリ入門](https://www.callstack.com/blog/introduction-to-the-react-native-omh-maps-library)\n* 📦 [React Navigation 7.0 RC](https://reactnavigation.org/blog/2024/06/27/react-navigation-7.0-rc/): 7.0正式版リリース間近。Static APIと画面プリロードAPIの導入が特に注目。これは将来のConcurrent React機能（例: `<Activity>`）を活用したパフォーマンス改善への第一歩。\n* 📦 [FlashList 1.7 - New Architecture対応！](https://github.com/Shopify/flash-list/releases/tag/v1.7.0)\n* 📦 [Yoga 3.1 - %単位のgap、レイアウト準拠と回帰修正](https://www.yogalayout.dev/blog/announcing-yoga-3.1)\n* 📦 [Reanimated 3.13 - New Architecture、タブ共有要素トランジション](https://github.com/software-mansion/react-native-reanimated/releases/tag/3.13.0)\n* 📦 [React Native Primitives - アクセシビリティ重視のスタイルなしユニバーサルコンポーネント](https://github.com/roninoss/rn-primitives)"
      }
    },
    {
      "segment_id": "6b40e7a2",
      "source_content": "**Extras:**",
      "source_content_hash": "bb404c372116a106603db9e68d4654a92b41346dea83ace9cb66f1837f27e81a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**その他:**"
      }
    },
    {
      "segment_id": "af7b7e3f",
      "source_content": "* 🐦 [React Native running on Meta Quest demo](https://x.com/swmansion/status/1798736357206179920)\n* 🐦 [Expo running on Daylight DC-1 devics demo](https://x.com/notbrent/status/1811134140265173178)\n* 👀 [Flutter-Brownfield - a proof-of-concept for adding React Native to an existing Flutter app](https://github.com/callstack/flutter-brownfield)\n* 📜 [Rebuilding a 10 year old iOS app with Expo](https://expo.dev/blog/rebuilding-a-10-year-old-ios-app-with-expo)\n* 📜 [Building an Image Slider in React Native using Skia and Reanimated](https://www.tweag.io/blog/2024-07-04-image-transition-react-native-skia/)\n* 📜 [Publishing dual module ESM libraries](https://satya164.page/posts/publishing-dual-module-esm-libraries)\n* 📜 [How To Implement Local Storage In Your Expo App?](https://scientyficworld.org/how-to-implement-local-storage-in-expo-app/)\n* 📜 [Empowering Users: Developing Accessible Mobile Apps using React Native](https://commerce.nearform.com/blog/2024/empowering-users-developing-accessible-mobile-apps-using-react-native)\n* 🔗 [Awesome-react-native-ui - list of react native animations created by the community](https://mrpmohiburrahman.github.io/awesome-react-native-ui/)\n* 📦 [React Native 0.75 RC.5](https://github.com/facebook/react-native/releases/tag/v0.75.0-rc.5)\n* 🎙️ [Rocket Ship 44 - Yoga, Layouting and New Architecture with Delphine Bugner](https://podcast.galaxies.dev/episodes/044-yoga-layouting-and-new-architecture-with-delphine-bugner)\n* 🎙️ [Rocket Ship 45 - React Native Apps for Seafarers with Gabriel Dierks](https://podcast.galaxies.dev/episodes/045-react-native-apps-for-seafarers-with-gabriel-dierks)\n* 🎙️ [RNR 301 - RNR Explains: Using Native Driver for Animated](https://www.reactnativeradio.com/episodes/rnr-301-rnr-explains-using-native-driver-for-animated)\n* 🎙️ [RNR 302 - Landing a React Native Job with Taylor Desseyn](https://www.reactnativeradio.com/episodes/rnr-302-landing-a-react-native-job-with-taylor-desseyn)\n* 🎥 [Simon Grimm - From React to React Native in 12 Minutes](https://www.youtube.com/watch?v=6UB3gw3SKfY)\n* 🎥 [Simon Grimm - React Native vs Flutter - Which should you use?](https://www.youtube.com/watch?v=AiG8-wHidiA)",
      "source_content_hash": "506e6f258169e35a935cc962b282b6a68163ae01ab612e4dd723759fceb7361a",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 🐦 [Meta Quest上で動作するReact Nativeのデモ](https://x.com/swmansion/status/1798736357206179920)\n* 🐦 [Daylight DC-1デバイスで動作するExpoのデモ](https://x.com/notbrent/status/1811134140265173178)\n* 👀 [Flutter-Brownfield - 既存のFlutterアプリにReact Nativeを追加する概念実証](https://github.com/callstack/flutter-brownfield)\n* 📜 [10年前のiOSアプリをExpoで再構築](https://expo.dev/blog/rebuilding-a-10-year-old-ios-app-with-expo)\n* 📜 [SkiaとReanimatedを使用したReact Nativeでの画像スライダーの構築](https://www.tweag.io/blog/2024-07-04-image-transition-react-native-skia/)\n* 📜 [デュアルモジュールESMライブラリの公開](https://satya164.page/posts/publishing-dual-module-esm-libraries)\n* 📜 [Expoアプリでローカルストレージを実装する方法](https://scientyficworld.org/how-to-implement-local-storage-in-expo-app/)\n* 📜 [ユーザーエンパワーメント：React Nativeを使用したアクセシブルなモバイルアプリの開発](https://commerce.nearform.com/blog/2024/empowering-users-developing-accessible-mobile-apps-using-react-native)\n* 🔗 [Awesome-react-native-ui - コミュニティ作成のReact Nativeアニメーションリスト](https://mrpmohiburrahman.github.io/awesome-react-native-ui/)\n* 📦 [React Native 0.75 RC.5](https://github.com/facebook/react-native/releases/tag/v0.75.0-rc.5)\n* 🎙️ [Rocket Ship 44 - Yoga、レイアウト、New Architectureについて（Delphine Bugner）](https://podcast.galaxies.dev/episodes/044-yoga-layouting-and-new-architecture-with-delphine-bugner)\n* 🎙️ [Rocket Ship 45 - 船員向けReact Nativeアプリ（Gabriel Dierks）](https://podcast.galaxies.dev/episodes/045-react-native-apps-for-seafarers-with-gabriel-dierks)\n* 🎙️ [RNR 301 - RNR解説：AnimatedのNative Driverの使用](https://www.reactnativeradio.com/episodes/rnr-301-rnr-explains-using-native-driver-for-animated)\n* 🎙️ [RNR 302 - Taylor DesseynとのReact Native求職談](https://www.reactnativeradio.com/episodes/rnr-302-landing-a-react-native-job-with-taylor-desseyn)\n* 🎥 [Simon Grimm - 12分でReactからReact Nativeへ](https://www.youtube.com/watch?v=6UB3gw3SKfY)\n* 🎥 [Simon Grimm - React Native vs Flutter - どちらを使うべきか？](https://www.youtube.com/watch?v=AiG8-wHidiA)"
      }
    },
    {
      "segment_id": "43d3985b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "e63d69ef",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "92dd525e",
      "source_content": "* 👀 [TypeScript 5.6 Iteration Plan](https://github.com/microsoft/TypeScript/issues/59250)\n* 📜 [Ecma International approves ECMAScript 2024 - What’s new?](https://2ality.com/2024/06/ecmascript-2024.html)\n* 📜 [Speeding up the JavaScript ecosystem - Isolated Declarations](https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-10/)\n* 📦 [Node 22.4 - experimental Web Storage support (localStorage/sessionStorage)](https://nodejs.org/en/blog/release/v22.4.0)\n* 📦 [Node 22.5 - experimental node:sqlite module](https://nodejs.org/en/blog/release/v22.5.0)\n* 📦 [pnpm 9.5 - New “catalogs” feature](https://pnpm.io/catalogs)\n* 📦 [Vitest 2.0 - better Browser Mode](https://github.com/vitest-dev/vitest/releases/tag/v2.0.0)",
      "source_content_hash": "e07b9755f9d2aa3d96706db367582552e67c21133639c732e393c67ef2a0c82d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 👀 [TypeScript 5.6 イテレーションプラン](https://github.com/microsoft/TypeScript/issues/59250)\n* 📜 [Ecma InternationalがECMAScript 2024を承認 - 新機能は？](https://2ality.com/2024/06/ecmascript-2024.html)\n* 📜 [JavaScriptエコシステムの高速化 - Isolated Declarations](https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-10/)\n* 📦 [Node 22.4 - 実験的なWeb Storageサポート（localStorage/sessionStorage）](https://nodejs.org/en/blog/release/v22.4.0)\n* 📦 [Node 22.5 - 実験的なnode:sqliteモジュール](https://nodejs.org/en/blog/release/v22.5.0)\n* 📦 [pnpm 9.5 - 新機能「カタログ」](https://pnpm.io/catalogs)\n* 📦 [Vitest 2.0 - 改良されたBrowser Mode](https://github.com/vitest-dev/vitest/releases/tag/v2.0.0)"
      }
    },
    {
      "segment_id": "3799844b",
      "source_content": "**Extras:**",
      "source_content_hash": "bb404c372116a106603db9e68d4654a92b41346dea83ace9cb66f1837f27e81a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**エクストラ:**"
      }
    },
    {
      "segment_id": "3bb47db3",
      "source_content": "* 🔐 [Polyfill.io supply chain attack hits 100K+ sites](https://sansec.io/research/polyfill-supply-chain-attack)\n* 📣 [Astro + Netlify - Official Deployment Partners](https://astro.build/blog/netlify-official-deployment-partner/)\n* 📜 [How To Hack Your Google Lighthouse Scores In 2024](https://blog.sentry.io/how-to-hack-your-google-lighthouse-scores-in-2024/)\n* 📜 [It’s about time I tried to explain what progressive enhancement actually is](https://piccalil.li/blog/its-about-time-i-tried-to-explain-what-progressive-enhancement-actually-is/)\n* 📜 [What's coming next for ESLint - Language-agnostic, core rewrite](https://eslint.org/blog/2024/07/whats-coming-next-for-eslint/)\n* 📜 [Is TypeScript Just A Linter?](https://www.totaltypescript.com/is-typescript-just-a-linter)\n* 📜 [A guide to reading and writing Node.js streams](https://blog.platformatic.dev/a-guide-to-reading-and-writing-nodejs-streams)\n* 📜 [TypeScript 5.5 - A Blockbuster Release](https://effectivetypescript.com/2024/07/02/ts-55/)\n* 📦 [StackBlitz pkg.pr.new - Continuous (Preview) Releases for your libraries](https://github.com/stackblitz-labs/pkg.pr.new)\n* 📦 [fetch-super-headers - A drop-in replacement for JavaScript `Headers` with type-safe access](https://github.com/mjackson/fetch-super-headers)\n* 📦 [Deno 1.45 - Workspace and Monorepo Support](https://deno.com/blog/v1.45)\n* 📦 [Rspack 1.0 Alpha - Smaller outputs, module concat, Lightning CSS, lean core](https://www.rspack.dev/blog/announcing-1-0-alpha)\n* 📦 [Mako - New fast bundler based on Rust](https://makojs.dev/blog/mako-open-sourced)\n* 📦 [Facebook memlab - Find JavaScript memory leaks, analyzing heap snapshots](https://github.com/facebook/memlab)",
      "source_content_hash": "b4cad748b0aebd814b1596fbe0881ac3ec2b437a93e43aa36b43c3576376d68a",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 🔐 [Polyfill.ioのサプライチェーン攻撃が10万以上のサイトに影響](https://sansec.io/research/polyfill-supply-chain-attack)\n* 📣 [Astro + Netlify - 公式デプロイメントパートナーに](https://astro.build/blog/netlify-official-deployment-partner/)\n* 📜 [2024年Google Lighthouseスコアをハックする方法](https://blog.sentry.io/how-to-hack-your-google-lighthouse-scores-in-2024/)\n* 📜 [プログレッシブエンハンスメントとは何か、改めて説明してみる](https://piccalil.li/blog/its-about-time-i-tried-to-explain-what-progressive-enhancement-actually-is/)\n* 📜 [ESLintの次期計画 - 言語非依存、コア書き換え](https://eslint.org/blog/2024/07/whats-coming-next-for-eslint/)\n* 📜 [TypeScriptは単なるリンターなのか？](https://www.totaltypescript.com/is-typescript-just-a-linter)\n* 📜 [Node.jsストリームの読み書きガイド](https://blog.platformatic.dev/a-guide-to-reading-and-writing-nodejs-streams)\n* 📜 [TypeScript 5.5 - ブロックバスターリリース](https://effectivetypescript.com/2024/07/02/ts-55/)\n* 📦 [StackBlitz pkg.pr.new - ライブラリの継続的（プレビュー）リリース](https://github.com/stackblitz-labs/pkg.pr.new)\n* 📦 [fetch-super-headers - 型安全なアクセスを提供するJavaScript `Headers`の代替品](https://github.com/mjackson/fetch-super-headers)\n* 📦 [Deno 1.45 - ワークスペースとモノレポサポート](https://deno.com/blog/v1.45)\n* 📦 [Rspack 1.0 Alpha - 小さな出力、モジュール連結、Lightning CSS、軽量コア](https://www.rspack.dev/blog/announcing-1-0-alpha)\n* 📦 [Mako - Rustベースの新しい高速バンドラー](https://makojs.dev/blog/mako-open-sourced)\n* 📦 [Facebook memlab - JavaScriptメモリリーク検出、ヒープスナップショット分析](https://github.com/facebook/memlab)"
      }
    },
    {
      "segment_id": "0b9aaa38",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "be106497",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "c277c3c0",
      "source_content": "[![alt](/emails/issues/192/meme.jpg)](https://x.com/flexbox_/status/1806786055057674337)",
      "source_content_hash": "15045b0faea061aa7b43705977909f1b959de91551e57e8ac88d8e88ac2f8bc1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/192/meme.jpg)](https://x.com/flexbox_/status/1806786055057674337)"
      }
    },
    {
      "segment_id": "5eedf0a1",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それでは！👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/192/index.mdx",
  "last_updated_timestamp": "2025-06-11T16:37:38.077903+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "9c970f804526d98db6d1d51f8014d5fdf35d3d38cf9399d0a2f73559807f8c97"
  }
}