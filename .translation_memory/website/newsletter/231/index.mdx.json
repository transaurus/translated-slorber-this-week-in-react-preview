{
  "source_file_path_relative_to_docusaurus_root": "newsletter/231/index.mdx",
  "source_file_content_hash": "7c46803c61c65dd2e239daf78aabae1847cd0573c44cdf3f367c84594292c93e",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /231\ntitle: \"This Week In React #231: React Labs, Compiler, React Router, Next.js, TanStack Query, c15t, RTK, Base UI | Legend List, FlashList, Versioning, Metro, ExecuTorch, Brownfield, Expo Router | TC39, Surveys, Rspack, tsdown\"\nauthors: [matthieugicquel, cyrilbo]\ndate: 04-23-2025\n---",
      "source_content_hash": "a6a161240f8afebe9b04c2183c33e4486b611ee17ea09648786bc90753d415c9",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "Cyril and Matthieu from [Theodo Apps](https://apps.theodo.com/en?utm_source=thisweekinreact) here 👋, standing in for Seb to bring you the latest news from the React and React Native worlds.",
      "source_content_hash": "8d47b7254afc68cce85ae5b5fd04d2b379f21717631b5e46962fc5dc6ddefe63",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[Theodo Apps](https://apps.theodo.com/en?utm_source=thisweekinreact)のCyrilとMatthieuです 👋。Sebに代わって、ReactとReact Nativeの最新ニュースをお届けします。"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "This week, we have two exciting blog posts for the React team, and a special guest from the React core team has a message for you all!",
      "source_content_hash": "bc1a20d2eaa2c16e62310df4a605486390862977e1706163ca92660ca25c07df",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週は、Reactチームからの2つのエキサイティングなブログ記事と、Reactコアチームの特別ゲストからのメッセージがあります！"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "We've also been reading quite a few interesting blog posts from the \"official\" blogs and the community.",
      "source_content_hash": "4d3f8ceef795193d3cc37e252473766cd3c737200ce7fd8131ff1d69098c6c73",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "また、「公式」ブログやコミュニティから興味深い記事をいくつか読みました。"
      }
    },
    {
      "segment_id": "6429a3aa",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6429a3aa"
      }
    },
    {
      "segment_id": "6c991806",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6c991806"
      }
    },
    {
      "segment_id": "8f488ab5",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_8f488ab5"
      }
    },
    {
      "segment_id": "fb3d50cd",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "95b38f97",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "ccc88b4c",
      "source_content": "[![Convex: The Database Designed for AI Coding](/emails/issues/227/convex.jpg)](https://convex.link/thisweekai)",
      "source_content_hash": "4035796cb62442c23691cfb51a2e889ced451d26cabc9790c92d66a1c6286830",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Convex: AIコーディング向けに設計されたデータベース](/emails/issues/227/convex.jpg)](https://convex.link/thisweekai)"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "**[Convex: The Database Designed for AI Coding](https://convex.link/thisweekai)**",
      "source_content_hash": "d384fd6f220e543e310b02b0dbf2f609aeb6345a2c6e5afafb56a68aae15b062",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Convex: AIコーディング向けに設計されたデータベース](https://convex.link/thisweekai)**"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "In the age of code generation, you need a backend that you can confidently generate with AI platforms. Convex is by far and away [best in class](https://stack.convex.dev/introducing-fullstack-bench) in this respect.",
      "source_content_hash": "3d6b6550ec4434fdb7d1e0d080f650b4d4ce50ff1bfec51a6a667626a9411329",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "コード生成の時代において、AIプラットフォームで自信を持って生成できるバックエンドが必要です。Convexは[この点で群を抜いて優れています](https://stack.convex.dev/introducing-fullstack-bench)。"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "This is because Convex is just TypeScript, allowing you to write [queries as code](https://docs.convex.dev/functions/query-functions/) that are automatically transactional, cached, and realtime.",
      "source_content_hash": "b00591181af36984cd990624880779b79694b2dffc5adce3c0d62fdea305b862",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Convexは単なるTypeScriptであり、[クエリをコードとして記述](https://docs.convex.dev/functions/query-functions/)でき、自動的にトランザクショナルでキャッシュされ、リアルタイムで動作します。"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "And that’s just the beginning. With Convex, you can:",
      "source_content_hash": "6cde80d7e7f63df8bc62324cf0d40c07146774a00de388434787366d409a424a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "そして、これだけではありません。Convexでは次のことが可能です："
      }
    },
    {
      "segment_id": "7a2e981c",
      "source_content": "* Easily schedule functions and write cron jobs\n* Set up file storage\n* Write efficient server functions\n* And so much more…",
      "source_content_hash": "e2be5b6e9584d6ef0e68f152444e039fdab6a0c0cb3611a79b4e08c56a76a733",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 簡単に関数をスケジュールし、cronジョブを記述\n* ファイルストレージを設定\n* 効率的なサーバー関数を記述\n* その他多くの機能…"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "[Try a Quickstart today](https://docs.convex.dev/quickstarts)",
      "source_content_hash": "bae3099e9bb4fe5dd167b12ba995e805841457f7c924697770516e6cf10e140a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[今日すぐにクイックスタートを試す](https://docs.convex.dev/quickstarts)"
      }
    },
    {
      "segment_id": "76a8033c",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "35a77014",
      "source_content": "## 📣 From the React team {#react-core-team}",
      "source_content_hash": "590c5034a1ad068e7cd8b197267cc5effe11f141c9fe97a14edd17ee45f83350",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📣 From the React team {#react-core-team}"
      }
    },
    {
      "segment_id": "13d9cd70",
      "source_content": "[![React Labs: View Transitions, Activity, and more](/emails/issues/231/labs.jpg)](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)",
      "source_content_hash": "bf0a0d1e1533c850d529488d67ea28226d3a30eed67e109806f01ee60487e24f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Labs: ビュートランジション、アクティビティなど](/emails/issues/231/labs.jpg)](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)"
      }
    },
    {
      "segment_id": "29528c8d",
      "source_content": "**[React Labs: View Transitions, Activity, and more](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)**",
      "source_content_hash": "024c3d6acdac911c8e4c0422aa5a287caeb4897afd992f0243b3fd44b40174ae",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[React Labs: ビュートランジション、アクティビティなど](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)**"
      }
    },
    {
      "segment_id": "c504c207",
      "source_content": "The rumors you’ve heard that the React Team only cares about the server have been greatly exaggerated.",
      "source_content_hash": "fb765f56c0b44eceea6c2a88c7c204a1593b5ca53695fb6e441e705530bbabd5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Reactチームがサーバーしか気にしていないという噂は大げさです。"
      }
    },
    {
      "segment_id": "98d26038",
      "source_content": "In our [React Labs post](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more) today, we shared that [View Transitions](https://react.dev/reference/react/ViewTransition) and [Activity](https://react.dev/reference/react/Activity) are now ready to try out in our experimental channel, along with docs for each. These new features allow React running on the client to animate UI transitions, and hide and show parts of the UI as the user navigates client-side. They work with server features, but are aimed at solving problems on the client.",
      "source_content_hash": "a8a48ff6763cdbeca2e71da461fec1f4be0be98665590aa57da6a6e28bc3ad83",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今日の[React Labsの記事](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)では、[ビュートランジション](https://react.dev/reference/react/ViewTransition)と[アクティビティ](https://react.dev/reference/react/Activity)が実験的なチャンネルで試せるようになったこと、およびそれぞれのドキュメントを公開したことを共有しました。これらの新機能は、クライアントで実行されるReactがUIトランジションをアニメーション化し、ユーザーがクライアント側でナビゲートする際にUIの一部を非表示または表示することを可能にします。これらはサーバー機能と連携しますが、クライアント側の問題を解決することを目的としています。"
      }
    },
    {
      "segment_id": "d3649a1e",
      "source_content": "We also [shared updates](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#features-in-development) on problem areas we’re focusing on that impact client-rendered apps including better profiling tools, automatically compiling effect dependencies, a potential IDE extension, fragment refs, and yes even a concurrent store. These are problem areas we’ve wanted to address for a while, which recent features like the React Compiler and the `use` API allow us to finally tackle.",
      "source_content_hash": "0c07e0bbcac4e8aa0f3f92ac1af056a03f6b1e2a951adb18c8e860b2e776f781",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "また、[開発中の機能](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#features-in-development)についても更新を共有しました。これには、より優れたプロファイリングツール、エフェクトの依存関係の自動コンパイル、潜在的なIDE拡張、フラグメントref、そして並行ストアも含まれます。これらは長い間解決したいと考えていた問題領域であり、React Compilerや`use` APIなどの最近の機能によってようやく取り組むことが可能になりました。"
      }
    },
    {
      "segment_id": "4d52a261",
      "source_content": "These features are still early and might change significantly before they’re ready to try. You can follow along while we build these features, and this newsletter is a great way to stay up to date. But don’t stress about learning everything - you can let us cook first.",
      "source_content_hash": "7bb4de42121dfbc9c48b8774d9f9939dad8474a83fb05bc4061d581fbce590cf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "これらの機能はまだ初期段階であり、試せるようになる前に大幅に変更される可能性があります。私たちがこれらの機能を構築する過程をフォローでき、このニュースレターは最新情報を入手するのに最適な方法です。ただし、すべてを学ぶ必要はありません。まずは私たちに任せてください。"
      }
    },
    {
      "segment_id": "23dfb152",
      "source_content": "When we’re more confident a feature will ship, we’ll announce it on the blog and publish docs, like we’re doing today for View Transitions and Activity.",
      "source_content_hash": "e4a9af4b0a7d2cbe1e30a35056d275dc2ab4cfd495d5fa1ac714c63a46988e5d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "機能のリリースが確実になったら、ブログで発表し、ドキュメントを公開します。今日のビュートランジションとアクティビティのように。"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "Give the new experimental features a try, and check out the areas we’re working on in the [blog post](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more).",
      "source_content_hash": "1c09c1dd402c30e39d1a67c9b36cfc0d0348d036b849566c20f418975d376b1b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "新しい実験的な機能を試して、[ブログ記事](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more)で私たちが取り組んでいる領域をチェックしてください。"
      }
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "-[Ricky Hanlon](https://bsky.app/profile/ricky.fm)",
      "source_content_hash": "394d649f6e6307ce3ecaae024340ef114f3df87548bf09953fc46e10644880f5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "-[Ricky Hanlon](https://bsky.app/profile/ricky.fm)"
      }
    },
    {
      "segment_id": "42c293cc",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "a5a4323e",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "657c2b20",
      "source_content": "[![React Compiler RC](/emails/issues/231/compiler.jpg)](https://react.dev/blog/2025/04/21/react-compiler-rc)",
      "source_content_hash": "b147b0547accdd39456c1eb3d4745b68eed085a47d70185d034cc3c6f186daf9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Compiler RC](/emails/issues/231/compiler.jpg)](https://react.dev/blog/2025/04/21/react-compiler-rc)"
      }
    },
    {
      "segment_id": "e7772088",
      "source_content": "**[React Compiler RC](https://react.dev/blog/2025/04/21/react-compiler-rc)**",
      "source_content_hash": "955193c5b18675ae0933911e98afb22cd6ad97e9ba6dd0c6318f132ee97433d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[React Compiler RC](https://react.dev/blog/2025/04/21/react-compiler-rc)**"
      }
    },
    {
      "segment_id": "eab056be",
      "source_content": "The React Labs post is not the only exciting update this week! The React Compiler is also in Release Candidate, in preparation of the compiler’s stable release.",
      "source_content_hash": "c018541e2cae19c875442e687b5d25ab8834041c882404c8b2e60c663d031d86",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週のエキサイティングなアップデートはReact Labsの投稿だけではありません！React Compilerもリリース候補版となり、コンパイラの安定版リリースに向けて準備が進んでいます。"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "The Babel-free builds is a welcome improvement so that we can keep using the compiler with our modern Rust tooling!",
      "source_content_hash": "4f1cb67cffd9fba7c6af1127f653f86d937aeadd08db7f3286e74ebfe03fc064",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Babel不要のビルドは、モダンなRustツールチェーンと共にコンパイラを使い続けるための歓迎すべき改善です！"
      }
    },
    {
      "segment_id": "63e1d83c",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "1316cb90",
      "source_content": "* 💸 [How to build a multi-tenant app using Clerk + Supabase](https://go.clerk.com/j5M7vZt)\n* 🗓 [Future Frontend](https://futurefrontend.com/?utm_source=thisweekinreact) - 🇫🇮 Espoo - 26-28 May. Dive into the future of frontend development with Aurora Scharff, Rachel Nabors, and others! Use code \"TWIR\" for a 10% discount.\n* 📜 [Impossible Components](https://overreacted.io/impossible-components/): Dan Abramov continues his series of blog posts about RSC, this time detailing, among other things, how it squares with React’s top-down data flow.\n* 📜 [Faster Lazy Loading in React Router v7.5+](https://remix.run/blog/faster-lazy-loading): This was released a few weeks ago. Mark Dalgleish explains in this post why the new approach (lazy loading by route properties instead of the whole route) was necessary, especially when using middlewares.\n* 📜 [Performance tips with Next.js](https://vercel.com/blog/guide-to-fast-websites-with-next-js-tips-for-maximizing-server-speeds#how-to-speed-up-the-page-render-minimize-client-burden): A nice recap of all the available optimizations: pre-render, use caching, watch bundle size, lazy-load what can be, optimize fonts and images, use virtualization…\n* 📜 [Simplify TanStack React Query State Handling with Pattern Matching](https://gabrielpichot.fr/blog/simplify-tanstack-react-query-state-handling-with-pattern-matching/)\n* 📜 [Using Client Caches In Loaders](https://www.brenelz.com/posts/using-client-caches-in-loaders/)\n* 📜 [Life of a Request: Application-aware routing - Vercel](https://vercel.com/blog/life-of-a-request-application-aware-routing)\n* 📜 [Tailwind vs Linaria: Performance Investigation](https://www.developerway.com/posts/tailwind-vs-linaria-performance)\n* 📦 [c15t](https://github.com/c15t/c15t): A new consent management framework coming with drop-in React components.\n* 📦 [Redux Toolkit 2.7](https://github.com/reduxjs/redux-toolkit/releases/tag/v2.7.0): Standard Schema for RTK query, improved infinite queries.\n* 📦 [Headless Tree 1.0](https://headless-tree.lukasbach.com/): A successor to React Complex tree, the author has a [blog post explaining the change](https://medium.com/@lukasbach/headless-tree-and-the-future-of-react-complex-tree-fc920700e82a).\n* 📦 [Module Federation Core 0.13](https://github.com/module-federation/core/releases/tag/v0.13.0): Better React 19 support and bug fixes.\n* 📦 [Base UI 1.0 alpha-8](https://github.com/mui/base-ui/releases/tag/v1.0.0-alpha.8): The new Radix UI alternative keeps progressing with new Toast and Meter components among many other things.\n* 🎙️ [Syntax.fm - React Server Components: Where are we at?](https://syntax.fm/show/895/react-server-components-where-are-we-at)",
      "source_content_hash": "9bb4492f2b919216a6066a15e1f887d65dada05456026fbac5f28cc6e34b5151",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [Clerk + Supabaseを使ったマルチテナントアプリの構築方法](https://go.clerk.com/j5M7vZt)\n* 🗓 [Future Frontend](https://futurefrontend.com/?utm_source=thisweekinreact) - 🇫🇮 エスポー - 5月26-28日。Aurora Scharff、Rachel Naborsらと共にフロントエンド開発の未来に飛び込もう！「TWIR」コードで10%割引。\n* 📜 [不可能なコンポーネント](https://overreacted.io/impossible-components/): Dan AbramovがRSCに関するブログシリーズを続け、今回はReactのトップダウンなデータフローとどう整合するかなどを詳説。\n* 📜 [React Router v7.5+でのより高速な遅延読み込み](https://remix.run/blog/faster-lazy-loading): 数週間前にリリース。Mark Dalgleishが、特にミドルウェア使用時に、ルート全体ではなくルートプロパティによる遅延読み込みという新しいアプローチが必要だった理由を説明。\n* 📜 [Next.jsでのパフォーマンス向上のヒント](https://vercel.com/blog/guide-to-fast-websites-with-next-js-tips-for-maximizing-server-speeds#how-to-speed-up-the-page-render-minimize-client-burden): 利用可能な最適化の総まとめ - プリレンダリング、キャッシュ活用、バンドルサイズ監視、遅延読み込み、フォントと画像の最適化、仮想化の使用など。\n* 📜 [パターンマッチングでTanStack React Queryの状態管理を簡素化](https://gabrielpichot.fr/blog/simplify-tanstack-react-query-state-handling-with-pattern-matching/)\n* 📜 [ローダーでのクライアントキャッシュの活用](https://www.brenelz.com/posts/using-client-caches-in-loaders/)\n* 📜 [リクエストのライフサイクル: アプリケーション認識型ルーティング - Vercel](https://vercel.com/blog/life-of-a-request-application-aware-routing)\n* 📜 [Tailwind vs Linaria: パフォーマンス調査](https://www.developerway.com/posts/tailwind-vs-linaria-performance)\n* 📦 [c15t](https://github.com/c15t/c15t): ドロップインReactコンポーネントを備えた新しい同意管理フレームワーク。\n* 📦 [Redux Toolkit 2.7](https://github.com/reduxjs/redux-toolkit/releases/tag/v2.7.0): RTKクエリの標準スキーマ、無限クエリの改善。\n* 📦 [Headless Tree 1.0](https://headless-tree.lukasbach.com/): React Complex Treeの後継。[変更についてのブログ記事](https://medium.com/@lukasbach/headless-tree-and-the-future-of-react-complex-tree-fc920700e82a)も公開。\n* 📦 [Module Federation Core 0.13](https://github.com/module-federation/core/releases/tag/v0.13.0): React 19のサポート強化とバグ修正。\n* 📦 [Base UI 1.0 alpha-8](https://github.com/mui/base-ui/releases/tag/v1.0.0-alpha.8): 新しいRadix UIの代替として、ToastやMeterコンポーネントなど多くの新機能が追加され進化中。\n* 🎙️ [Syntax.fm - React Server Components: 現状はどうなっている？](https://syntax.fm/show/895/react-server-components-where-are-we-at)"
      }
    },
    {
      "segment_id": "db2c1b40",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_db2c1b40"
      }
    },
    {
      "segment_id": "f7a7cb1b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "e06c002e",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "25212439",
      "source_content": "[![Self-service analytics and dashboards in your product](/emails/issues/231/semaphor.jpg)](https://semaphor.cloud)",
      "source_content_hash": "97cee3a3d70a7ccede9ebd1e0aecf0728d4492fa1f2124cd02c291622eadbcb7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Self-service analytics and dashboards in your product](/emails/issues/231/semaphor.jpg)](https://semaphor.cloud)"
      }
    },
    {
      "segment_id": "d79a4831",
      "source_content": "**[Self-service analytics and dashboards in your product](https://semaphor.cloud)**",
      "source_content_hash": "2e70f5c0d8903855253f212c67947315376a035794057d751c4fe7c1c00921e1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[プロダクト内セルフサービス型分析とダッシュボード](https://semaphor.cloud)**"
      }
    },
    {
      "segment_id": "2838eb68",
      "source_content": "**Your engineers didn’t sign up to build dashboards.**\nLet them focus on features.",
      "source_content_hash": "718bffee3200eff379d1e71b9675a7bf66df2e2f5d9a92781c27c023b9c422c7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**エンジニアはダッシュボード構築のためにコードを書いたわけではありません。**\n機能開発に集中させましょう。"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "With Semaphor, your data team can ship insights independently. No code changes, no front-end redeploys. Decouple analytics from your product code and move faster.",
      "source_content_hash": "5738cb534fce54bc9a7feac3523856cf933cc89bb813de326dccddd15eb45a31",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Semaphorを使えば、データチームが独立してインサイトを提供可能。コード変更やフロントエンドの再デプロイ不要。分析機能をプロダクトコードから分離し、迅速に移動できます。"
      }
    },
    {
      "segment_id": "bc8bc928",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "722e4930",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "3c19e221",
      "source_content": "[![Legend List 1.0](/emails/issues/231/legend-list.png)](https://bsky.app/profile/jayz.us/post/3lni5ofbuvs2s)",
      "source_content_hash": "0f70eee1e38a4d1de0c3ce2e663800bcf93af826c28f0f3adee2ad8b100c3ee6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Legend List 1.0](/emails/issues/231/legend-list.png)](https://bsky.app/profile/jayz.us/post/3lni5ofbuvs2s)"
      }
    },
    {
      "segment_id": "d21af28f",
      "source_content": "**[Legend List 1.0](https://bsky.app/profile/jayz.us/post/3lni5ofbuvs2s)**",
      "source_content_hash": "ad71475ea09909c33212aca1ab043144864eaac434633cc2ca6a156556018ccc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Legend List 1.0](https://bsky.app/profile/jayz.us/post/3lni5ofbuvs2s)**"
      }
    },
    {
      "segment_id": "44aaa880",
      "source_content": "Making long lists performant is a hard problem, and React Native’s old architecture wasn’t making it any easier with it’s asynchronous layout computation. We remember Margelo abandoning their `WishList` project.\nLegend List is now in version 1.0, and promises to be even faster than `FlashList`, all the while handling the \"hard cases\": bidirectional infinite lists, varying item sizes… And it's compatible with the old arch (though less performant and with possible glitches).",
      "source_content_hash": "e6455b133af1a2efcbe64e5bb49aeb66e0c9d019596bc9287c6a679a241f1811",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "長いリストのパフォーマンス最適化は難題であり、React Nativeの旧アーキテクチャは非同期レイアウト計算によってさらに困難を招いていました。Margeloが`WishList`プロジェクトを放棄したことを覚えている方もいるでしょう。\nLegend Listはバージョン1.0となり、`FlashList`よりも高速であることを約束すると同時に、双方向無限リストや可変アイテムサイズといった「難しいケース」も処理可能です。旧アーキテクチャとも互換性があります（ただしパフォーマンスは低く、不具合が発生する可能性あり）。"
      }
    },
    {
      "segment_id": "a8610918",
      "source_content": "As Seb mentioned last week, there’s also a [v2 of `FlashList`](https://github.com/Shopify/flash-list/tree/new-rlv-prototype) in the works, which should be easier to use (no need to specify estimatedItemSize for instance).",
      "source_content_hash": "e4ee8bbd53035e62ee2de0112545f282d6aa484b2d64360ca182cf08ebaa8a67",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "先週Sebが言及したように、[`FlashList`のv2](https://github.com/Shopify/flash-list/tree/new-rlv-prototype)も開発中で、estimatedItemSizeの指定が不要になるなど、より使いやすくなる予定です。"
      }
    },
    {
      "segment_id": "a6c928a1",
      "source_content": "Thankfully, all those copy the API of `FlatList` so it’s easy to switch back and forth 🙂.",
      "source_content_hash": "072ed1459700b112e9e21e3986653ae549dac325cd57fa12b00a6240da05b8a6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "幸いなことに、これらはすべて`FlatList`のAPIを踏襲しているため、簡単に切り替え可能です🙂。"
      }
    },
    {
      "segment_id": "43fd0c1b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "40a587f3",
      "source_content": "* 💸 [PostHog - How to set up React Native session replay](https://go.posthog.com/twir-apr23)\n* 🐦 [Prototype of Module Federation working with Metro Bundler](https://x.com/_jbroma/status/1912903068464594993)\n* 🐦 [An experiment of CSS support in React Native, including grid layout](https://x.com/mani3xis/status/1912947427864441144)\n* 📖 [React Native Versioning Policy](https://reactnative.dev/contributing/versioning-policy): This new page details the versioning scheme based on the `0.x.y` pattern. Even more importantly, this also explains the release process and what is considered a breaking change. This is part of an ongoing effort to clarify the public API surface and even reduce it (see the [Removing deep imports RFC](https://github.com/react-native-community/discussions-and-proposals/pull/894)). React Native is getting more stable, and maybe we’ll get a v1.0 one day?\n* 📜 [Best Practices for reducing lag in Expo apps](https://expo.dev/blog/best-practices-for-reducing-lag-in-expo-apps): Highlight React renders directly from the devtools, React Compiler, React 19, and multi-threading.\n* 📜 [Offline Text Recognition on Mobile: How We Brought EasyOCR to React Native ExecuTorch](https://blog.swmansion.com/bringing-easyocr-to-react-native-executorch-2401c09c2d0c)\n* 📜 [How to build universal app voice agents with Expo & ElevenLabs](https://expo.dev/blog/how-to-build-universal-app-voice-agents-with-expo-and-elevenlabs)\n* 📜 [Out with the old, in with the New Architecture (by default)](https://expo.dev/blog/out-with-the-old-in-with-the-new-architecture)\n* 📦 [React Native Brownfield 1.0](https://github.com/callstack/react-native-brownfield/releases/tag/v1.0.0): Adds support for SwiftUI, Jetpack Compose, and packaging as a framework.\n* 📦 [typegpu-confetti](https://github.com/software-mansion-labs/typegpu-confetti): Confetti animations for React Native, computed and rendered exclusively on the GPU with `react-native-webgpu` and TypeGPU.\n* 🎥 [Expo Router Tutorial](https://www.youtube.com/playlist?list=PLsXDmrmFV_AT17JDf-otXSNE_eH7s0uDD): The first 5 videos are available. It covers layout files, Stack & Tab navigators, modals, and Auth Flow.\n* 🎙️ [RNR 328 - Flashlight with Alexandre Moureaux](https://infinite.red/react-native-radio/rnr-328-flashlight-with-alexandre-moureaux)\n* 🎙️ [Rocket Ship 65 - Expo SDK 53 Preview, RevenueCat Paywalls, AI Images & Gemini](https://www.youtube.com/watch?v=evGUO_CN1Fc)",
      "source_content_hash": "1a0cd828e1e4dc1da52515bf4c034bf0772d770398b07ab0d149db3f5b292ef1",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [PostHog - React Nativeセッションリプレイの設定方法](https://go.posthog.com/twir-apr23)\n* 🐦 [Metro Bundlerで動作するModule Federationのプロトタイプ](https://x.com/_jbroma/status/1912903068464594993)\n* 🐦 [React NativeでのCSSサポート実験（グリッドレイアウト含む）](https://x.com/mani3xis/status/1912947427864441144)\n* 📖 [React Nativeのバージョニングポリシー](https://reactnative.dev/contributing/versioning-policy): この新しいページでは、`0.x.y`パターンに基づくバージョニングスキームが詳しく説明されています。さらに重要なのは、リリースプロセスと破壊的変更と見なされる内容についても解説されている点です。これは、公開APIサーフェスの明確化（さらには縮小）を目的とした継続的な取り組みの一環です（[深いインポートの削除RFC](https://github.com/react-native-community/discussions-and-proposals/pull/894)参照）。React Nativeはより安定しつつあり、いつの日かv1.0がリリースされるかもしれません。\n* 📜 [Expoアプリのラグを減らすベストプラクティス](https://expo.dev/blog/best-practices-for-reducing-lag-in-expo-apps): デベロッパーツールからの直接レンダリング、React Compiler、React 19、マルチスレッドについて解説。\n* 📜 [モバイルでのオフラインテキスト認識: EasyOCRをReact Native ExecuTorchに導入した方法](https://blog.swmansion.com/bringing-easyocr-to-react-native-executorch-2401c09c2d0c)\n* 📜 [ExpoとElevenLabsでユニバーサルアプリ音声エージェントを構築する方法](https://expo.dev/blog/how-to-build-universal-app-voice-agents-with-expo-and-elevenlabs)\n* 📜 [旧アーキテクチャから新アーキテクチャへ（デフォルトで）](https://expo.dev/blog/out-with-the-old-in-with-the-new-architecture)\n* 📦 [React Native Brownfield 1.0](https://github.com/callstack/react-native-brownfield/releases/tag/v1.0.0): SwiftUI、Jetpack Composeのサポート追加、フレームワークとしてのパッケージングに対応。\n* 📦 [typegpu-confetti](https://github.com/software-mansion-labs/typegpu-confetti): `react-native-webgpu`とTypeGPUを使用してGPU上で排他的に計算・レンダリングされるReact Native用の紙吹雪アニメーション。\n* 🎥 [Expo Routerチュートリアル](https://www.youtube.com/playlist?list=PLsXDmrmFV_AT17JDf-otXSNE_eH7s0uDD): 最初の5本の動画が公開中。レイアウトファイル、Stack & Tabナビゲーター、モーダル、Auth Flowをカバー。\n* 🎙️ [RNR 328 - Alexandre Moureaux氏によるFlashlight](https://infinite.red/react-native-radio/rnr-328-flashlight-with-alexandre-moureaux)\n* 🎙️ [Rocket Ship 65 - Expo SDK 53プレビュー、RevenueCat Paywalls、AI画像 & Gemini](https://www.youtube.com/watch?v=evGUO_CN1Fc)"
      }
    },
    {
      "segment_id": "51e8baf4",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "734d40d8",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "6892c8d2",
      "source_content": "* 📣 [TC39 meeting 107th - ECMA Proposal Updates](https://ecmascript-daily.github.io/ecmascript/2025/04/19/ecmascript-proposal-update): Summarizes the proposals that progressed last week. Sad to see Records & Tuples withdraw, but we also have new interesting proposals to watch, such as Enums and Composites.\n* 📊 [State of AI 2025 - Survey results](https://2025.stateofai.dev)\n* 📜 [Optimizing Node.js Performance: V8 Memory Management & GC Tuning](https://blog.platformatic.dev/optimizing-nodejs-performance-v8-memory-management-and-gc-tuning)\n* 📜 [Launching the first ever State of Devs survey](https://dev.to/sachagreif/launching-the-first-ever-state-of-devs-survey-23il)\n* 📜 [Securing Your GitHub Actions](https://blog.rafaelgss.dev/securing-github-actions)\n* 📜 [An Introduction to JavaScript Bundler Rspack](https://blog.appsignal.com/2025/04/16/an-introduction-to-javascript-bundler-rspack.html)\n* 📦 [tsdown - The Elegant Library Bundler - Powered by Rolldown](https://tsdown.dev/)\n* 📦 [Node 22.15](https://nodejs.org/en/blog/release/v22.15.0)",
      "source_content_hash": "71587208e588d675ae403935d67df380fa6ef0ffc0d590953f5e3a2df654311e",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📣 [TC39会議第107回 - ECMA提案更新](https://ecmascript-daily.github.io/ecmascript/2025/04/19/ecmascript-proposal-update): 先週進展した提案をまとめています。Records & Tuplesの撤回は残念ですが、EnumsやCompositesなど注目すべき新提案もあります。\n* 📊 [AIの現状2025 - 調査結果](https://2025.stateofai.dev)\n* 📜 [Node.jsパフォーマンス最適化: V8メモリ管理とGCチューニング](https://blog.platformatic.dev/optimizing-nodejs-performance-v8-memory-management-and-gc-tuning)\n* 📜 [初めての「開発者の現状」調査を開始](https://dev.to/sachagreif/launching-the-first-ever-state-of-devs-survey-23il)\n* 📜 [GitHub Actionsのセキュリティ対策](https://blog.rafaelgss.dev/securing-github-actions)\n* 📜 [JavaScriptバンドラーRspack入門](https://blog.appsignal.com/2025/04/16/an-introduction-to-javascript-bundler-rspack.html)\n* 📦 [tsdown - エレガントなライブラリバンドラー - Rolldown搭載](https://tsdown.dev/)\n* 📦 [Node 22.15リリース](https://nodejs.org/en/blog/release/v22.15.0)"
      }
    },
    {
      "segment_id": "7057b5fb",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "2f2d5f01",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "44285072",
      "source_content": "[![React Compiler RC meme - shows a cat in a React Compiler RollerCoaster](/emails/issues/231/meme0.jpg)](https://x.com/potetotes/status/1914855126348480850)",
      "source_content_hash": "e42c113f7b01cf99a8de233954a15b2f237086497e3773545818355f94a85b2e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Compiler RCのミーム - React Compilerのローラーコースターに乗る猫](/emails/issues/231/meme0.jpg)](https://x.com/potetotes/status/1914855126348480850)"
      }
    },
    {
      "segment_id": "a8f09c71",
      "source_content": "[![Evan Bacon - Coming back to Expo after spending an hour in Android Studio - Photo of Katy Perry kissing the ground after returning from her space flight](/emails/issues/231/meme1.jpg)](https://x.com/Baconbrix/status/1913353166483058931)",
      "source_content_hash": "a59894ad339bfa815c97e25483407108c769f02182a48ca82e4c7c53d8003de0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Evan Bacon - Android Studioで1時間過ごした後Expoに戻ってくる - 宇宙飛行から帰還後地面にキスするKaty Perryの写真](/emails/issues/231/meme1.jpg)](https://x.com/Baconbrix/status/1913353166483058931)"
      }
    },
    {
      "segment_id": "d2a3d4c7",
      "source_content": "[![A huge vertical screen with \"package.json\" deps and huge horizontall screen with \"tailwind class names\"](/emails/issues/231/meme2.jpg)](https://x.com/trashh_dev/status/1893339204710539265)",
      "source_content_hash": "8e9f29b083c208673e855e0afd8857b3e09d6e11f7038bd184bd2a7fe0265eb1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![巨大な縦画面に「package.json」の依存関係、巨大な横画面に「tailwindのクラス名」](/emails/issues/231/meme2.jpg)](https://x.com/trashh_dev/status/1893339204710539265)"
      }
    },
    {
      "segment_id": "008183b0",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "またね！👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/231/index.mdx",
  "last_updated_timestamp": "2025-06-12T01:22:19.410499+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "7c46803c61c65dd2e239daf78aabae1847cd0573c44cdf3f367c84594292c93e"
  }
}