{
  "source_file_path_relative_to_docusaurus_root": "newsletter/147/index.mdx",
  "source_file_content_hash": "c3200e68c91b6069ee0c6642cde1cf7210a5471ef28ac90fa1cdfe2d67e60df7",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /147\ntitle: \"This Week In React #147: RSCs, Next.js, Remix, Redwood, Error Boundary, JSX, Raycast, Spotify, Triplex, useHooks, ReMDX, Astro, Pastel, TypeScript...\"\nauthors: [slorber]\ndate: 06-06-2023\n---",
      "source_content_hash": "e9ad262a8c5616b37c3044f5125846f2c4902bf751258e0c5d6b11c7417d4604",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "This week, we're celebrating [10 years of React](https://twitter.com/sebastienlorber/status/1662957673573130244)! 🥳️",
      "source_content_hash": "a55d04b5e476d874f6cc0955c74b4cb7d14592e550f81701eb4fb0d62b6f8116",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週は、[Reactの10周年](https://twitter.com/sebastienlorber/status/1662957673573130244)をお祝いしています！ 🥳️"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "There have been quite a few interesting articles these last 2 weeks, particularly related to the complexity of introduced with Server Components. Dan Abramov has published some interesting resources on the subject. Remix and Redwood have announced their intention to support RSCs.",
      "source_content_hash": "ff6faca8b15c7f5f0b87d18b3caca3fee6e843ec32fb014d93ea0403ce301c1e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ここ2週間で、特にServer Componentsの導入に伴う複雑さに関連する興味深い記事がいくつかありました。Dan Abramovはこのテーマについて興味深いリソースを公開しています。RemixとRedwoodはRSCのサポートを表明しました。"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "On the React-Native side, 3 conferences have been held recently and playlists are becoming available on YouTube. I [had a great time at the React-Native-Connection](https://twitter.com/sebastienlorber/status/1664584407775051779), a new React-Native conference in Paris. Thanks to everyone who came and made this first edition a success.",
      "source_content_hash": "f23c50f6f510c1b85b0ebdead420108d106a9a67767c9f0a7b235eafaee18513",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React-Nativeに関しては、最近3つのカンファレンスが開催され、プレイリストがYouTubeで公開されつつあります。私は[React-Native-Connectionで素晴らしい時間を過ごしました](https://twitter.com/sebastienlorber/status/1664584407775051779)。これはパリで開催された新しいReact-Nativeカンファレンスです。参加してくれた皆さん、そしてこの初回の成功を支えてくれた皆さんに感謝します。"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "So cool, the newsletter [won a React Open Source Award](https://twitter.com/sebastienlorber/status/1664667086860308481) at the React Summit conference! Thanks to everyone who voted for me, I wasn't expecting to win given the other nominees 😆",
      "source_content_hash": "b73cf00707759be161888010a0cf4064617ff263e826bf4a4619b36e8bd128ea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "素晴らしいことに、このニュースレターは[React SummitカンファレンスでReact Open Source Awardを受賞しました](https://twitter.com/sebastienlorber/status/1664667086860308481)！投票してくれた皆さんに感謝します。他の候補者を考えると受賞するとは思っていませんでした😆"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "[![award](/emails/issues/147/award.jpg)](https://twitter.com/sebastienlorber/status/1664667086860308481)",
      "source_content_hash": "4fc564239847e58b4aa1ad10eae1f6c127dc2ce02294036d2aa5fd51ca9b1042",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![award](/emails/issues/147/award.jpg)](https://twitter.com/sebastienlorber/status/1664667086860308481)"
      }
    },
    {
      "segment_id": "c6da205d",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_c6da205d"
      }
    },
    {
      "segment_id": "2df4f75f",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [このニュースレターをTwitterでチェック](https://slo.im/thread) - ビジュアル形式 🎨**"
      }
    },
    {
      "segment_id": "1856ef44",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "cf4363fc",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_cf4363fc"
      }
    },
    {
      "segment_id": "2a3434e4",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_2a3434e4"
      }
    },
    {
      "segment_id": "2b28cb1b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "b25f21be",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "[![Start UI](/emails/issues/144/start_ui.jpg)](https://web.start-ui.com?utm_source=newsletter\\&utm_term=this-week-in-react)",
      "source_content_hash": "6fe60a5f13a4035e97944265403f980efc2602f03541510457502722c991f8e3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Start UI](/emails/issues/144/start_ui.jpg)](https://web.start-ui.com?utm_source=newsletter\\&utm_term=this-week-in-react)"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "**[Start UI \\[web\\] - Opinionated web app UI starter](https://web.start-ui.com?utm_source=newsletter\\&utm_term=this-week-in-react)**",
      "source_content_hash": "e3cf380f8b6cd3e037220e65a6c93a48121c74a35be615cce4775db57e26e2dc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Start UI \\[web\\] - オピニオンが詰まったWebアプリUIスターター](https://web.start-ui.com?utm_source=newsletter\\&utm_term=this-week-in-react)**"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "Our **free and open source UI web app starter** offers a quick and easy way to bootstrap your next project. It includes **best practices & production ready tools** to help you get started right away, saving you time and effort in the initial setup phase.",
      "source_content_hash": "12475d9e4e0189dc5bafe70e459eaab752e1ffa2795e01082463a64faf1b5a17",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "私たちの**無料でオープンソースのUI Webアプリスターター**は、次のプロジェクトを迅速かつ簡単に開始する方法を提供します。これには、初期セットアップ段階で時間と労力を節約する**ベストプラクティスと本番環境対応のツール**が含まれています。"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "Comes with built-in **features** like 🔐 Authentication, 📱Responsive Layout, 🧑‍💻 User Management, 🇫🇷 Internationalization & Right-to-Left support, 🌚 Dark Mode, 🎛 Advanced components for easy development. You can try out the [example app](https://demo.start-ui.com).",
      "source_content_hash": "da59c07b7b4e664504a325bca2f3972011a1a415328023f61ae6fae0191d4251",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🔐 認証、📱レスポンシブレイアウト、🧑‍💻 ユーザー管理、🇫🇷 国際化と右から左へのサポート、🌚 ダークモード、🎛 開発を容易にする高度なコンポーネントなどの**機能**が組み込まれています。[デモアプリ](https://demo.start-ui.com)を試すことができます。"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "Ready to use with **TypeScript**, **NextJS**, Chakra UI, TanStack Query, Storybook and more.",
      "source_content_hash": "ff75df91e132769a926c4bffc17cdc4af96ea826855cfcf3b090a32ea26794e0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**TypeScript**、**NextJS**、Chakra UI、TanStack Query、Storybookなどで使用可能です。"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "[🚀 Start UI \\[web\\] on GitHub](https://web.start-ui.com)",
      "source_content_hash": "b6e29969b8136266fd24c1ad6ed815b09424d0da97b74eaaaa19d1e7054930a0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[🚀 Start UI \\[web\\] on GitHub](https://web.start-ui.com)"
      }
    },
    {
      "segment_id": "06784e79",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c674e260",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "[![Why do Client Components get SSR'd to HTML?](/emails/issues/147/client-component.jpg)](https://github.com/reactwg/server-components/discussions/4)",
      "source_content_hash": "5ecc40d3e6f3235379130ae7683dcd7fea482524628527e23f2915c787db2b73",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![クライアントコンポーネントはなぜHTMLにSSRされるのか？](/emails/issues/147/client-component.jpg)](https://github.com/reactwg/server-components/discussions/4)"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "**[Why do Client Components get SSR'd to HTML?](https://github.com/reactwg/server-components/discussions/4)**",
      "source_content_hash": "5691762de9c3accaae351dfca6f8747125279c000e289778d89770f86449b3fb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[クライアントコンポーネントはなぜHTMLにSSRされるのか？](https://github.com/reactwg/server-components/discussions/4)**"
      }
    },
    {
      "segment_id": "b36c6338",
      "source_content": "Dan Abramov's short visual explanation of the difference between the Client Tree (what we already knew) and the Server Tree (new). I found this diagram interesting, because it demystifies an easy confusion: Client Components are in fact what we used to call simple React components. During SSR, **Client Components are executed on the server**, exactly as before.",
      "source_content_hash": "76a7dfebf052707a4e258b92cd1448be4d0d0bd08f7e37caf5940715e1d895c9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Dan Abramovによる、既知のクライアントツリーと新しいサーバーツリーの違いについての短いビジュアル解説です。この図は興味深いもので、簡単に混乱しがちな点を解消してくれます。クライアントコンポーネントは、実際にはこれまで単純なReactコンポーネントと呼んでいたものです。SSR中、**クライアントコンポーネントは以前と同様にサーバー上で実行されます**。"
      }
    },
    {
      "segment_id": "716da8e8",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "e536ea0d",
      "source_content": "[![How the Raycast API and extensions work](/emails/issues/147/raycast.jpg)](https://www.raycast.com/blog/how-raycast-api-extensions-work)",
      "source_content_hash": "5e914fedb5bc2d6ea7f10c771f8d1bc5294c6a4abc28f50ce7fe6ec41a4f9ab6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Raycast APIと拡張機能の仕組み](/emails/issues/147/raycast.jpg)](https://www.raycast.com/blog/how-raycast-api-extensions-work)"
      }
    },
    {
      "segment_id": "40158b4b",
      "source_content": "**[How the Raycast API and extensions work](https://www.raycast.com/blog/how-raycast-api-extensions-work)**",
      "source_content_hash": "2d9c0409309a0e79e1d2c118699b4bd122759838898130f4ddf954b155e4c314",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Raycast APIと拡張機能の仕組み](https://www.raycast.com/blog/how-raycast-api-extensions-work)**"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "Raycast is an extensible launcher for MacOS, an app renowned for its quality. This article explains the steps they went through to implement their plugin system. They didn't want to compromise on UX and DX: no WebView nor Electron, good security, and the possibility of using npm packages. They finally opted to create a custom React renderer that runs in a separate Node process, and drives native views with Swift through a JSON bridge. It looks a lot like React-Native.",
      "source_content_hash": "1a37551eb1c2828fbb10175fdab6fc6a75aff84d0c689cb4500c58c4299fd5bd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "RaycastはMacOS向けの拡張可能なランチャーで、その品質の高さで知られるアプリです。この記事では、彼らがプラグインシステムを実装するために辿ったステップを説明しています。UXとDXを妥協したくないという考えから、WebViewやElectronは採用せず、セキュリティを確保しつつnpmパッケージを使用可能にする方法を模索しました。最終的には、別のNodeプロセスで動作するカスタムReactレンダラーを開発し、Swiftを通じてネイティブビューをJSONブリッジで操作する方式を採用しました。これはReact-Nativeと非常に似たアーキテクチャです。"
      }
    },
    {
      "segment_id": "bcda0ab1",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "2eb5ba30",
      "source_content": "* 🥳️ [Celebrating 10 Years of React](https://vercel.com/blog/10-years-of-react): Vercel is celebrating a decade of React by publishing a [round table video](https://www.youtube.com/watch?v=g5BGoLyGjY0) about all the latest React innovations, with Andrew, Sebastian and Delba.\n* 👀 [React `<Catch>` API?](https://twitter.com/wongmjane/status/1661786321176911872): upcoming support for Error Boundaries without class component?\n* 👀 [Remix + RSC POC](https://twitter.com/ryanflorence/status/1663587026384584704): Remix is finally planning to implement Server Components, and gives one of the reasons why [here](https://twitter.com/remix_run/status/1661017634480201734).\n* 💬 [React WG - RSC from Scratch. Part 1: Server Components](https://github.com/reactwg/server-components/discussions/5): Dan Abramov offers a complete deep dive into implementing Server Components from scratch. Part 1 (of 3) is available and describes how to implement the Server Components side.\n* 📖 [Next.js Docs Update - Project Organization page](https://twitter.com/delba_oliveira/status/1662211824211877889)\n* 📜 [Is React Having An Angular.js Moment?](https://marmelab.com/blog/2023/06/05/react-angularjs-moment.html): does the arrival of Server Components represent a paradigm shift similar to Angular.js vs Angular 2? No, because Server Components are an optional new feature and the rest of React continues to work as before. This article does warn, however, that it may be a little early to recommend and adopt RSCs, and the ecosystem isn't fully ready.\n* 📜 [Opinionated notes on React Server components](https://github.com/nilshartmann/react-server-component-material/blob/notes-on-rsc/notes-on-rsc.md): set of notes and reflections on RSCs. Comprehensive and well-documented resource, with many relevant external references.\n* 📜 [Isomorphic Development](https://meijer.ws/articles/isomorphic-development): interesting thoughts on the complexity Server Components bring. It's not the Server Components themselves that are complex, but the new hybrid nature of our codebase, and its less well-defined boundaries.\n* 📜 [The evolution of React APIs and code reuse](https://frontendmastery.com/posts/the-evolution-of-react-patterns/): reviews the different patterns used over time, and their trade-offs (mixins, HOCs, render props, hooks, RSCs).\n* 📜 [Why We Are Dropping Support For Next Js](https://www.stormkit.io/blog/why-we-are-dropping-support-for-next-js): the Stormkit deployment platform is abandoning support for Next.js, which was too complex for their small team to handle. Instead, they propose to use a React + Vite template that supports SSR.\n* 📜 [A better learning path for React with server components](https://scastiel.dev/better-learning-path-react): what if RSCs actually made React easier to learn? I think it makes sense if you adopt a fresh perspective.\n* 📜 [RedwoodJS’ Next Epoch: All In on React Server Components](https://tom.preston-werner.com/2023/05/30/redwoods-next-epoch-all-in-on-rsc.html): Tom Preston-Werner (creator of GitHub) announcing that the Redwood framework plans to implement React Server Components. Until now, Redwood generated an SPA without SSR (limited for SEO), and the forced use of GraphQL was not always the best choice.\n* 📜 [Solving hydration errors in Remix](https://www.jacobparis.com/content/remix-hydration-errors): good advice on debugging React hydration errors. This can also be applied to other frameworks.\n* 📜 [What is JSX.IntrinsicElements?](https://www.totaltypescript.com/what-is-jsx-intrinsicelements): TypeScript uses IntrinsicElements to find out which JSX elements are natively supported. It is possible to declare your own native elements, which is what frameworks like React do.\n* 📜 [Deploying Next.js on the edge with SST](https://engineering.udacity.com/deploying-next-js-on-the-edge-with-sst-is-sst-the-game-changer-its-claimed-to-be-1f05a0abc27c): positive feedback on using OpenNext and SST to deploy a Next.js app on AWS.\n* 📜 [Spotify - Multiple Layers of Abstraction in Design Systems](https://engineering.atspotify.com/2023/05/multiple-layers-of-abstraction-in-design-systems/): Spotify explains how their React design system exposes 3 levels of abstraction (config, slots, custom).\n* 📦 [TypeScript 5.1](https://devblogs.microsoft.com/typescript/announcing-typescript-5-1): this new TypeScript version is important for React as it allows better typing of JSX for React, and allows a component to return a Promise (async Server Component), a string, array, boolean... new React typedefs have already been [published](https://twitter.com/sebsilbermann/status/1664356039876124672)!\n* 📦 [Triplex - React Three Fiber visual editor](https://twitter.com/itsdouges/status/1664874971481382913)\n* 📦 [useHooks.com v2.0 - SSR-safe hooks collection](https://usehooks.com/)\n* 📦 [ReMDX - Beautiful Minimalist React & MDX Presentations](https://github.com/cpojer/remdx)\n* 📦 [Next-Typesafe-Url - Fully typesafe and zod validated routing for Next.JS](https://github.com/ethanniser/next-typesafe-url)\n* 📦 [Redux Toolkit v2.0.0-beta.0](https://twitter.com/acemarke/status/1663707088478953474)\n* 📦 [Pastel v2.0 - A Next.js-like framework for CLIs made with Ink](https://twitter.com/vadimdemedes/status/1661343197535129601)\n* 📦 [React Aria + React Spectrum - May 24 2023 releases](https://twitter.com/devongovett/status/1661765315825643521)\n* 📦 [Astro v2.6 - Middleware, hybrid SSR, custom client directives...](https://astro.build/blog/astro-260/)\n* 🔗 [React Handbook](https://reacthandbook.dev/)\n* 🎥 [Are React Server Components Really Slower?](https://www.youtube.com/watch?v=3Q2q2gs0nAI): benchmark showing that Pages Router from Next.js is faster than App Router, but the user experience can be better with the latter thanks to streaming.\n* 🎥 [How to NOT Poison Your React Server Components](https://www.youtube.com/watch?v=BZlwtR9pDp4): use of the `server-only` package to avoid importing server code into your Client Components.\n* 🎥 [Remix Conf - React Core Panel Q\\&A](https://www.youtube.com/watch?v=WiEtFPYGgbM)",
      "source_content_hash": "55a8f7e2ff5101682fd447d167c8a189dd25263a9d0db1b7c81248020bdd59b9",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 🥳️ [Reactの10周年を祝う](https://vercel.com/blog/10-years-of-react): VercelはReactの10周年を記念して、Andrew、Sebastian、Delbaを交えた最新のReactイノベーションについての[ラウンドテーブル動画](https://www.youtube.com/watch?v=g5BGoLyGjY0)を公開しています。\n* 👀 [React `<Catch>` API?](https://twitter.com/wongmjane/status/1661786321176911872): クラスコンポーネントなしでエラーバウンダリをサポートする予定？\n* 👀 [Remix + RSC POC](https://twitter.com/ryanflorence/status/1663587026384584704): RemixがついにServer Componentsの実装を計画しており、その理由の一つを[こちら](https://twitter.com/remix_run/status/1661017634480201734)で説明しています。\n* 💬 [React WG - RSC from Scratch. Part 1: Server Components](https://github.com/reactwg/server-components/discussions/5): Dan AbramovがServer Componentsをゼロから実装する方法を詳しく解説。Part 1（全3回）ではServer Components側の実装方法を説明しています。\n* 📖 [Next.jsドキュメント更新 - プロジェクト組織ページ](https://twitter.com/delba_oliveira/status/1662211824211877889)\n* 📜 [ReactはAngular.jsのような瞬間を迎えているのか？](https://marmelab.com/blog/2023/06/05/react-angularjs-moment.html): Server Componentsの登場はAngular.jsとAngular 2のようなパラダイムシフトを意味するのか？いいえ、Server Componentsはオプションの新機能であり、Reactの他の部分は従来通り動作します。ただし、この記事ではRSCを推奨・採用するにはまだ早く、エコシステムが完全に準備されていないと警告しています。\n* 📜 [React Server Componentsに関する意見付きノート](https://github.com/nilshartmann/react-server-component-material/blob/notes-on-rsc/notes-on-rsc.md): RSCに関する考察とメモ。多くの関連外部リファレンスを含む包括的でよくまとめられた資料です。\n* 📜 [Isomorphic Development](https://meijer.ws/articles/isomorphic-development): Server Componentsがもたらす複雑さについての興味深い考察。複雑なのはServer Components自体ではなく、コードベースの新しいハイブリッドな性質と、その境界が曖昧になったことです。\n* 📜 [React APIとコード再利用の進化](https://frontendmastery.com/posts/the-evolution-of-react-patterns/): 時代ごとに使用されたパターン（ミックスイン、HOC、レンダープロップ、フック、RSC）とそのトレードオフをレビュー。\n* 📜 [なぜ私たちはNext.jsのサポートを終了するのか](https://www.stormkit.io/blog/why-we-are-dropping-support-for-next-js): Stormkitデプロイメントプラットフォームは、小規模チームでは扱いが複雑すぎるとしてNext.jsのサポートを終了。代わりにSSRをサポートするReact + Viteテンプレートの使用を提案しています。\n* 📜 [Server Componentsを使ったReactのより良い学習パス](https://scastiel.dev/better-learning-path-react): RSCが実際にReactの学習を容易にする可能性について。新鮮な視点で考えれば理にかなっています。\n* 📜 [RedwoodJSの次なる時代：React Server Componentsに全力投球](https://tom.preston-werner.com/2023/05/30/redwoods-next-epoch-all-in-on-rsc.html): GitHubの創設者Tom Preston-Wernerが、RedwoodフレームワークがReact Server Componentsの実装を計画していることを発表。これまでRedwoodはSSRなしのSPAを生成しており（SEOに制限あり）、GraphQLの強制使用が常に最適とは限りませんでした。\n* 📜 [Remixでのハイドレーションエラーの解決](https://www.jacobparis.com/content/remix-hydration-errors): Reactハイドレーションエラーのデバッグに関する良いアドバイス。他のフレームワークにも適用可能です。\n* 📜 [JSX.IntrinsicElementsとは何か？](https://www.totaltypescript.com/what-is-jsx-intrinsicelements): TypeScriptはIntrinsicElementsを使用して、ネイティブでサポートされているJSX要素を判別します。Reactのようなフレームワークは、独自のネイティブ要素を宣言することが可能です。\n* 📜 [SSTを使用してNext.jsをエッジにデプロイ](https://engineering.udacity.com/deploying-next-js-on-the-edge-with-sst-is-sst-the-game-changer-its-claimed-to-be-1f05a0abc27c): OpenNextとSSTを使用してNext.jsアプリをAWSにデプロイする際の肯定的なフィードバック。\n* 📜 [Spotify - デザインシステムにおける複数の抽象化レイヤー](https://engineering.atspotify.com/2023/05/multiple-layers-of-abstraction-in-design-systems/): SpotifyのReactデザインシステムが3つの抽象化レベル（config、slots、custom）を公開する方法を説明。\n* 📦 [TypeScript 5.1](https://devblogs.microsoft.com/typescript/announcing-typescript-5-1): この新しいTypeScriptバージョンはReactにとって重要で、React向けのJSXの型付けが改善され、コンポーネントがPromise（非同期Server Component）、文字列、配列、booleanなどを返せるようになります。新しいReactの型定義は既に[公開されています](https://twitter.com/sebsilbermann/status/1664356039876124672)！\n* 📦 [Triplex - React Three Fiberビジュアルエディタ](https://twitter.com/itsdouges/status/1664874971481382913)\n* 📦 [useHooks.com v2.0 - SSRセーフなフックコレクション](https://usehooks.com/)\n* 📦 [ReMDX - 美しくミニマルなReact & MDXプレゼンテーション](https://github.com/cpojer/remdx)\n* 📦 [Next-Typesafe-Url - Next.JS向け完全型安全かつzod検証済みルーティング](https://github.com/ethanniser/next-typesafe-url)\n* 📦 [Redux Toolkit v2.0.0-beta.0](https://twitter.com/acemarke/status/1663707088478953474)\n* 📦 [Pastel v2.0 - Ink製のNext.js風CLIフレームワーク](https://twitter.com/vadimdemedes/status/1661343197535129601)\n* 📦 [React Aria + React Spectrum - 2023年5月24日リリース](https://twitter.com/devongovett/status/1661765315825643521)\n* 📦 [Astro v2.6 - ミドルウェア、ハイブリッドSSR、カスタムクライアントディレクティブ...](https://astro.build/blog/astro-260/)\n* 🔗 [Reactハンドブック](https://reacthandbook.dev/)\n* 🎥 [React Server Componentsは本当に遅いのか？](https://www.youtube.com/watch?v=3Q2q2gs0nAI): Next.jsのPages RouterがApp Routerよりも高速であることを示すベンチマークですが、ストリーミングにより後者の方がユーザーエクスペリエンスが向上する可能性があります。\n* 🎥 [React Server Componentsを汚染しない方法](https://www.youtube.com/watch?v=BZlwtR9pDp4): `server-only`パッケージを使用してサーバーコードをClient Componentsにインポートしない方法。\n* 🎥 [Remix Conf - ReactコアパネルQ&A](https://www.youtube.com/watch?v=WiEtFPYGgbM)"
      }
    },
    {
      "segment_id": "2fb90ce3",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_2fb90ce3"
      }
    },
    {
      "segment_id": "ab3df6e6",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "c19de48a",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "6ca4479f",
      "source_content": "[![Nylas](/emails/issues/147/Nylas.png)](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay)",
      "source_content_hash": "76254c371017843d76eb160e3d8ab35594839b8f9c058239b1f57ee6848b914d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Nylas](/emails/issues/147/Nylas.png)](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay)"
      }
    },
    {
      "segment_id": "a2c0166e",
      "source_content": "**[OpenAI + Nylas chat on generative AI : Watch now!](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay)**",
      "source_content_hash": "c74d121f785a8940567e19153e6434448c9daa8fb0c43b3f9cc5771c3f6b1ada",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[OpenAI + Nylasによる生成AIに関する対談: 今すぐ視聴！](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay)**"
      }
    },
    {
      "segment_id": "c1eaf30b",
      "source_content": "Want an inside look at the future of generative AI? Evan Morikawa, Applied Engineering Manager at OpenAI, and Christine Spang, CTO and Co-Founder at Nylas, dive into what’s next for generative AI.",
      "source_content_hash": "1543b7ed9ec92d2a648bdd645f277830ac210d2adc0ab4f88789f36b3d754bbb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "生成AIの未来を内側から覗いてみませんか？OpenAIのApplied Engineering ManagerであるEvan Morikawaと、NylasのCTO兼共同創業者であるChristine Spangが、生成AIの次のステップについて深掘りします。"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "They’ll discuss what it takes to deliver and maintain AI solutions at scale, what AI's next stage of maturity looks like, and much more. [Get the replay now](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay).",
      "source_content_hash": "53b001375a21996747107b554704a2c47ea6de4367144c9e61212a148a8e33ea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "彼らは、スケールするAIソリューションの提供と維持に必要なこと、AIの次の成熟段階の姿などについて議論します。[今すぐリプレイを視聴](https://info.nylas.com/firesidechat-openai-registrationpage.html?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-openaireplay)。"
      }
    },
    {
      "segment_id": "a81544fd",
      "source_content": "Want to start building with ChatGPT + Email API calls in React? [Here’s a guide to get you started.](https://www.nylas.com/blog/how-to-build-with-nylas-using-chatgpt/?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-chatgptblog)",
      "source_content_hash": "ce6a350373249b6cae1ea7f33d9e6a04d08a2231314e5aedcef3ccdd6dcd1ed5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ReactでChatGPT + Email APIコールを使った開発を始めたいですか？[こちらが始めるためのガイドです。](https://www.nylas.com/blog/how-to-build-with-nylas-using-chatgpt/?utm_source=twir\\&utm_medium=sponsoredemail\\&utm_campaign=FY23Q2-TWIR-2P\\&utm_content=2023-06-07-Issue-chatgptblog)"
      }
    },
    {
      "segment_id": "0c6c4220",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "ab39e8a7",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "8d56fc0d",
      "source_content": "* 👀 [Nearly ¼ of the top Shopping Apps on the Apple App Store use React Native](https://twitter.com/Baconbrix/status/1664285684583002112): React-Native apps get the best ratings! See also other categories [Foot & Drinks](https://twitter.com/Baconbrix/status/1661775514074247169) and [Finance](https://twitter.com/Baconbrix/status/1662866951784235008).\n* 👀 [Help us Kotlin-ify React Native tests](https://twitter.com/cortinico/status/1666001895360454660): the start of a migration of React-Native from Java to Kotlin, starting with testing.\n* 👀 [React-Skia-Experiment](https://github.com/wcandillon/react-skia-experiment): William Candillon is experimenting with making the React-Native-Skia library universal ([tweet](https://twitter.com/wcandillon/status/1662037035102683136)).\n* 👀 [Portal - Apple Vision Pro app using React-Native](https://twitter.com/Baconbrix/status/1665816002712436736)\n* 📜 [How BlueSky Structure Their App and Manage State](https://alexkondov.com/reading-code-bluesky/): guided exploration of the BlueSky open-source codebase,using Expo, React-Native-Web, Mobx...\n* 🔗 [React Native Performance Issues Catalogue](https://spangled-split-858.notion.site/React-Native-Performance-Issues-Catalogue-9338979a2a5648e883331ef2050e963c): a Notion DB that lists the causes and symptoms of React-Native perf problems to help you fix them.\n* 📦 [React-Native 0.72.0-RC.5](https://github.com/facebook/react-native/releases/tag/v0.72.0-rc.5): new Golden Release Candidate.\n* 📦 [vscode-expo-tools](https://twitter.com/cedric_dev/status/1666113468078997507)\n* 📦 [style-variants - solution for creating dynamic and reusable styles](https://github.com/oktaysenkan/style-variants)\n* 🎥 [App.js 2023 - Youtube Playlist](https://www.youtube.com/playlist?list=PLSk21zn8fFZCfYEMpSqQOHMgyNKc8B7_s)\n* 🎥 [Chain React 2023 - Youtube Playlist](https://www.youtube.com/playlist?list=PLFHvL21g9bk30F2UaJfn6TqJn15MAoBOc)\n* 🎙️[React-Native-Radio 266 - Chain React Roundup](https://reactnativeradio.com/episodes/rnr-266-chain-react-roundup) + [React-Native-Radio 267 - React Native Windows With Chiara Mooney](https://reactnativeradio.com/episodes/rnr-267-react-native-windows-with-chiara-mooney)\n* 🎙️ [React Native Show Coffee Talk #10 - Vercel news, React Canaries & RN macOS 0.71](https://www.youtube.com/watch?v=qvPOkvdG0ZI)",
      "source_content_hash": "2de1f3c6e7309e737d0df6da82bb0096a0b8bea7b7d19c39f5c048fa7b939722",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 👀 [Apple App Storeのトップショッピングアプリの約4分の1がReact Nativeを採用](https://twitter.com/Baconbrix/status/1664285684583002112): React-Nativeアプリは最高の評価を得ています！その他のカテゴリもご覧ください [飲食](https://twitter.com/Baconbrix/status/1661775514074247169) と [金融](https://twitter.com/Baconbrix/status/1662866951784235008)。\n* 👀 [React NativeのテストをKotlin化する手伝いを](https://twitter.com/cortinico/status/1666001895360454660): React-NativeのJavaからKotlinへの移行の始まりで、テストからスタートしています。\n* 👀 [React-Skia-Experiment](https://github.com/wcandillon/react-skia-experiment): William CandillonがReact-Native-Skiaライブラリをユニバーサル化する実験を行っています（[ツイート](https://twitter.com/wcandillon/status/1662037035102683136)）。\n* 👀 [Portal - Apple Vision ProアプリでReact-Nativeを使用](https://twitter.com/Baconbrix/status/1665816002712436736)\n* 📜 [BlueSkyのアプリ構造と状態管理の方法](https://alexkondov.com/reading-code-bluesky/): BlueSkyのオープンソースコードベースをExpo、React-Native-Web、Mobxを使用して解説。\n* 🔗 [React Nativeパフォーマンス問題カタログ](https://spangled-split-858.notion.site/React-Native-Performance-Issues-Catalogue-9338979a2a5648e883331ef2050e963c): React-Nativeのパフォーマンス問題の原因と症状をリスト化したNotionデータベース。\n* 📦 [React-Native 0.72.0-RC.5](https://github.com/facebook/react-native/releases/tag/v0.72.0-rc.5): 新しいGolden Release Candidate。\n* 📦 [vscode-expo-tools](https://twitter.com/cedric_dev/status/1666113468078997507)\n* 📦 [style-variants - 動的で再利用可能なスタイルを作成するソリューション](https://github.com/oktaysenkan/style-variants)\n* 🎥 [App.js 2023 - Youtubeプレイリスト](https://www.youtube.com/playlist?list=PLSk21zn8fFZCfYEMpSqQOHMgyNKc8B7_s)\n* 🎥 [Chain React 2023 - Youtubeプレイリスト](https://www.youtube.com/playlist?list=PLFHvL21g9bk30F2UaJfn6TqJn15MAoBOc)\n* 🎙️[React-Native-Radio 266 - Chain Reactまとめ](https://reactnativeradio.com/episodes/rnr-266-chain-react-roundup) + [React-Native-Radio 267 - React Native Windows with Chiara Mooney](https://reactnativeradio.com/episodes/rnr-267-react-native-windows-with-chiara-mooney)\n* 🎙️ [React Native Show Coffee Talk #10 - Vercelニュース、React Canaries & RN macOS 0.71](https://www.youtube.com/watch?v=qvPOkvdG0ZI)"
      }
    },
    {
      "segment_id": "714b728f",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "47cd8dd6",
      "source_content": "## 🧑‍💻 Jobs {#jobs}",
      "source_content_hash": "64cde6166f05bd39337c21ca10f52b6613641f23e0c97e204de33d6857fa16ed",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🧑‍💻 Jobs {#jobs}"
      }
    },
    {
      "segment_id": "692c6053",
      "source_content": "🧑‍💼 [**Passionfroot - Senior Full-stack Engineer (Remix) - €160k+, Berlin/remote**](https://passionfroot.recruitee.com/o/senior-fullstack-engineer)",
      "source_content_hash": "3532cb42fea164e6dcc868f5fea6ecb0e7fcb06975740df1803d78565f5e643e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**Passionfroot - シニアフルスタックエンジニア (Remix) - €160k+, ベルリン/リモート**](https://passionfroot.recruitee.com/o/senior-fullstack-engineer)"
      }
    },
    {
      "segment_id": "383fbdd2",
      "source_content": "Passionfroot's mission is to empower the independent businesses of tomorrow via YouTube, Podcasts, Social Media, and Newsletters. Join us in building a tool that will empower creators globally to build scalable, sustainable businesses.",
      "source_content_hash": "071531677ae3763a43d70c7461fb6bad05d66e66663737b2158931a241a2c33c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Passionfrootの使命は、YouTube、ポッドキャスト、ソーシャルメディア、ニュースレターを通じて、明日の独立ビジネスを支援することです。クリエイターがスケーラブルで持続可能なビジネスを構築できるツールの開発に参加してください。"
      }
    },
    {
      "segment_id": "14bc6b75",
      "source_content": "🧑‍💼 [**Callstack - Senior React Native Developer - Fully Remote, PLN 21-32k net on B2B, monthly**](https://www.callstack.com/senior-react-native-developer)",
      "source_content_hash": "6a76e4cede7e5d7fef90376d244177e3a889ea3b88ed1a9d60d116bb33a52f5b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**Callstack - シニアReact Native開発者 - 完全リモート、月額PLN 21-32k net on B2B**](https://www.callstack.com/senior-react-native-developer)"
      }
    },
    {
      "segment_id": "e478ec2c",
      "source_content": "Do you want to work on the world's most used apps? Would you like to co-create the React Native technology? Join the Callstack team of React & React Native leaders. Check our website for more details. We are looking forward to seeing your application - show us what you've got!",
      "source_content_hash": "d26d300a25c86c54931180669d1a8cce73f71a546a8457896fc0c835fb78d2d0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "世界で最も使われているアプリで働きたいですか？React Native技術の共創に興味はありませんか？React & React NativeのリーダーであるCallstackチームに参加してください。詳細はウェブサイトをご覧ください。あなたの応募をお待ちしています - あなたの実力を見せてください！"
      }
    },
    {
      "segment_id": "534ac82e",
      "source_content": "🧑‍💼 [**G2i - 100% Remote React Native Jobs**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)",
      "source_content_hash": "5d3c54581f6c180e021405df5da2dff285c443814d1d5e6c5c09516b6002a38b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**G2i - 100%リモートのReact Native求人**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)"
      }
    },
    {
      "segment_id": "a9c2a503",
      "source_content": "We have several roles open for developers focused on React Native! Pay is \\~160k plus 10% bonus. You must have production experience with RN and be based in the US. DM [@gabe\\_g2i](https://twitter.com/gabe_g2i) to learn more and don't forget to mention This Week in React.",
      "source_content_hash": "03109db05ba0c8c528483a4218dc3b2b0314cf5c6032f5eb3c7be604094658fd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Nativeに特化した開発者向けの複数のポジションを募集しています！報酬は約160kドル＋10%のボーナスです。RNの実務経験があり、米国在住であることが条件です。詳細は[@gabe\\_g2i](https://twitter.com/gabe_g2i)までDMでお問い合わせください。その際、「This Week in React」を見たとお伝えください。"
      }
    },
    {
      "segment_id": "cfeb9eb1",
      "source_content": "💡 [How to publish an offer?](https://thisweekinreact.com/sponsor)",
      "source_content_hash": "d58176524c2d7675bf008e7b635d056628a0d092fb0152d6bbdfb97f4239d273",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "💡 [求人を掲載する方法は？](https://thisweekinreact.com/sponsor)"
      }
    },
    {
      "segment_id": "af4523c9",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "35353302",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "f4e38e16",
      "source_content": "* [An introduction to @scope in CSS](https://fullystacked.net/posts/scope-in-css/)\n* [Running Promises in Parallel: A Visual Guide](https://julesblom.com/writing/running-promises-in-parallel)\n* [One Hour Advanced TypeScript Workshop](https://type-level-typescript.com/articles/one-hour-workshop)\n* [JavaScript Macros in Bun](https://bun.sh/blog/bun-macros)\n* [New to the web platform in May](https://web.dev/web-platform-05-2023/)\n* [Introducing the popover API](https://developer.chrome.com/blog/introducing-popover-api/)\n* [Web Share API is now a W3C Recommendation](https://www.w3.org/blog/news/archives/9931)\n* [WebKit Features in Safari 17 beta](https://webkit.org/blog/14205/news-from-wwdc23-webkit-features-in-safari-17-beta/)\n* [Deno 1.34: deno compile supports npm packages](https://deno.com/blog/v1.34)\n* [Parcel 2.9](https://parceljs.org/blog/v2-9-0/)\n* [XState v5 beta](https://stately.ai/blog/announcing-xstate-v5-beta)\n* [Rspack 0.2](https://twitter.com/rspack_dev/status/1664510907379228672)",
      "source_content_hash": "85009d827c7d7c2754f5d0fa741d55fe53fc875a357aaadb2c27e88e9b4b85ba",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* [CSSの@scope入門](https://fullystacked.net/posts/scope-in-css/)\n* [Promiseの並列実行：ビジュアルガイド](https://julesblom.com/writing/running-promises-in-parallel)\n* [1時間で学ぶ上級TypeScriptワークショップ](https://type-level-typescript.com/articles/one-hour-workshop)\n* [BunにおけるJavaScriptマクロ](https://bun.sh/blog/bun-macros)\n* [5月のWebプラットフォーム新機能](https://web.dev/web-platform-05-2023/)\n* [Popover APIの紹介](https://developer.chrome.com/blog/introducing-popover-api/)\n* [Web Share APIがW3C勧告になりました](https://www.w3.org/blog/news/archives/9931)\n* [Safari 17 betaのWebKit機能](https://webkit.org/blog/14205/news-from-wwdc23-webkit-features-in-safari-17-beta/)\n* [Deno 1.34：deno compileがnpmパッケージをサポート](https://deno.com/blog/v1.34)\n* [Parcel 2.9](https://parceljs.org/blog/v2-9-0/)\n* [XState v5 beta](https://stately.ai/blog/announcing-xstate-v5-beta)\n* [Rspack 0.2](https://twitter.com/rspack_dev/status/1664510907379228672)"
      }
    },
    {
      "segment_id": "1af652fb",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "3f77c6a0",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "39f476dc",
      "source_content": "[![alt](/emails/issues/147/meme.jpg)](https://twitter.com/sophiebits/status/1663710200078151681)",
      "source_content_hash": "29f4c4220171d2d21bd6252e0eda5c5045fd2adfcd06474b02ba29ebdf3b491d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/147/meme.jpg)](https://twitter.com/sophiebits/status/1663710200078151681)"
      }
    },
    {
      "segment_id": "827eb9a3",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それでは！👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/147/index.mdx",
  "last_updated_timestamp": "2025-06-11T16:37:41.989248+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "c3200e68c91b6069ee0c6642cde1cf7210a5471ef28ac90fa1cdfe2d67e60df7"
  }
}