{
  "source_file_path_relative_to_docusaurus_root": "newsletter/235/index.mdx",
  "source_file_content_hash": "ca2c56844b4b9b139be1f97c7328141109156ca5064fbe580883c3165bd922fc",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /235\ntitle: \"This Week In React #235: React Router, createStore, SuspenseList, Transition Indicator, Compiler, RenderHooks, Waku, React-Scan | Expo, Lava, Fortnite, Skia, AI, Lynx | TC39, using, Zod, Node, Deno\"\nauthors: [slorber]\ndate: 05-21-2025\n---",
      "source_content_hash": "2787a5b4a1495087da4b151343e19f7cbda58d831ad3163940d795f4f03d24cc",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "This week, we're delighted to finally have a preview of React Server Components support in React Router. I've also found some very interesting PRs on the React repo, and give you a glimpse of what could be coming soon!",
      "source_content_hash": "0a3bd73039895e98cb38dfa03d1d970ff865e43f726c26387c4fce43178e6476",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週はついにReact RouterでのReact Server Componentsサポートのプレビューが公開されました。また、Reactリポジトリで非常に興味深いPRをいくつか見つけ、近い将来に実装されるかもしれない機能を垣間見ることができました！"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "The React Native ecosystem is surprisingly calm, but no doubt they keep everything secret for [App.js Conf](https://appjs.co/) next week!",
      "source_content_hash": "e100adf706b5f63de4a964885d9479e67cb28765b09e550f204efaf9e0dbc2d0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Nativeのエコシステムは意外にも静かですが、来週開催される[App.js Conf](https://appjs.co/)に向けてすべてを秘密にしているのでしょう！"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "By the way, I would really appreciate your support. Now that I'm automatically removing cold subscribers, the newsletter is decreasing over time 😅. Any retweet, like, engagement, or testimonial really helps me! Please convince your friends to subscribe ❤️",
      "source_content_hash": "ec4e5f826488c0212c7fc3dc6e8789a692ad714632612d7bdac7a35b445a877c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ところで、皆さんのサポートが本当にありがたいです。非アクティブな購読者を自動的に削除しているため、ニュースレターの購読者数が徐々に減少しています😅。リツイート、いいね、エンゲージメント、または推薦文など、どんな形でも助かります！ぜひお友達にも購読を勧めてください❤️"
      }
    },
    {
      "segment_id": "6429a3aa",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6429a3aa"
      }
    },
    {
      "segment_id": "6c991806",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_6c991806"
      }
    },
    {
      "segment_id": "8f488ab5",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_8f488ab5"
      }
    },
    {
      "segment_id": "fb3d50cd",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "95b38f97",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "ccc88b4c",
      "source_content": "[![Cut React Code Review Time & Bugs in Half](/emails/issues/233/coderabbit.jpg)](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)",
      "source_content_hash": "65760560c7873f1c30b4316972ae04df6d9c0274accabaa2b817c39027c43b92",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Reactのコードレビュー時間とバグを半減](/emails/issues/233/coderabbit.jpg)](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "**[Cut React Code Review Time & Bugs in Half](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)**",
      "source_content_hash": "fc328e1cc1edb755f884ac580ddce968765764931fcc7e02383bcfaf4cc64425",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Reactのコードレビュー時間とバグを半減](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)**"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "Code reviews are critical but time-consuming. CodeRabbit acts as your AI co-pilot, providing instant Code review comments and potential impacts of every pull request.",
      "source_content_hash": "d4dc5c87a27dd428494b18f89be3724778a83dbe9473b5d56ddd68f24b02e365",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "コードレビューは重要ですが、時間がかかります。CodeRabbitはAIコパイロットとして機能し、すべてのプルリクエストに対して即座にコードレビューコメントと潜在的な影響を提供します。"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "Beyond just flagging issues, CodeRabbit provides one-click fix suggestions and lets you define custom code quality rules using AST Grep patterns, catching subtle issues that traditional static analysis tools might miss.",
      "source_content_hash": "52c2493f49ddd9a07ffdd56b9b8d9489dd7702c05c5fe106c8c1ac89c80cb6d7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "問題を指摘するだけでなく、CodeRabbitはワンクリックで修正提案を行い、AST Grepパターンを使用してカスタムコード品質ルールを定義できるため、従来の静的解析ツールでは見逃しがちな微妙な問題もキャッチできます。"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "CodeRabbit has so far reviewed more than 5 million PRs, installed on 1 million repositories, and used by 50 thousand Open-source projects. CodeRabbit is free for all open-source repo's. [Get started today!](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)",
      "source_content_hash": "4fe29cbcabeb0adf1d6c189a1dfc0b67bdfbc979e02b9f239f175aac5cd83035",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "CodeRabbitはこれまでに500万以上のPRをレビューし、100万のリポジトリにインストールされ、5万のオープンソースプロジェクトで使用されています。オープンソースリポジトリでは無料で利用できます。[今すぐ始めましょう！](https://www.coderabbit.ai?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_mar25)"
      }
    },
    {
      "segment_id": "b0e5a8f2",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "80d9e13c",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "[![React Router RSC Preview](/emails/issues/235/rr.jpg)](https://remix.run/blog/rsc-preview)",
      "source_content_hash": "4a11f6267da47a0ebd0e038ef0e1fe26e5ababe7ada769b19eef317455565084",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![React Router RSCプレビュー](/emails/issues/235/rr.jpg)](https://remix.run/blog/rsc-preview)"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "**[React Router RSC Preview](https://remix.run/blog/rsc-preview)**",
      "source_content_hash": "5c74ef5ea6cd29f372c92e4f04120b9d466f19c79579955e73ec60bc1127851d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[React Router RSCプレビュー](https://remix.run/blog/rsc-preview)**"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "The React Router team unveiled a preview of React Server Components support using the Parcel bundler. Stable support is blocked until Vite officially supports RSCs, but the good news is that React Router is becoming more framework-agnostic, and they expect to support other bundlers in the future with minimal effort.",
      "source_content_hash": "bcf258b9dbfe1298fd32d8ffa2746c99c607fc524a1bcca9d13b23c2a6ae4d08",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Routerチームは、Parcelバンドラーを使用したReact Server Componentsサポートのプレビューを公開しました。安定版のサポートはViteが正式にRSCをサポートするまで保留されていますが、良いニュースはReact Routerがよりフレームワークに依存しない形になり、将来的に他のバンドラーも最小限の労力でサポートできる見込みです。"
      }
    },
    {
      "segment_id": "8af76f3d",
      "source_content": "The feature is designed to be both incrementally adoptable by returning JSX in loaders/actions, but also to feel good on new greenfield projects looking to go all-in with Server Component Routes, `’use client’` and `’use server’` directives. They also explain how to solve the N+1 query problem in RSCs, inspired by GraphQL/DataLoader.",
      "source_content_hash": "557177325291d06e37091c02d0a754083eb213cdb82e4ffc6ec1d0b4ea233fa2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "この機能は、ローダー/アクションでJSXを返すことで段階的に導入可能な設計であり、また、Server Component Routes、`’use client’`、`’use server’`ディレクティブを全面的に活用する新しいプロジェクトにも適しています。また、GraphQL/DataLoaderにインスパイアされたRSCでのN+1クエリ問題の解決方法も説明されています。"
      }
    },
    {
      "segment_id": "406f2538",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "[![Render Hooks](/emails/issues/235/renderhook.jpg)](https://github.com/brandonmcconnell/render-hooks)",
      "source_content_hash": "e8bf5743dd91ce535003244532fad6b57adce9c483c634472ead0f003efd34cf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Render Hooks](/emails/issues/235/renderhook.jpg)](https://github.com/brandonmcconnell/render-hooks)"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "**[Render Hooks](https://github.com/brandonmcconnell/render-hooks) and [With React](https://github.com/jacobparis/with-react)**",
      "source_content_hash": "86c9ef535a49201ffd17d1c57b0da93905cee1930ad4f9af261e6d049d367ae3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Render Hooks](https://github.com/brandonmcconnell/render-hooks) と [With React](https://github.com/jacobparis/with-react)**"
      }
    },
    {
      "segment_id": "b36c6338",
      "source_content": "Looks like the Render Props pattern is making a comeback, with 2 new projects proposing to expose React core hooks in a render callback. This is a convenient trick in some situations, allowing you to \"inline\" a component while still respecting the rules of hooks, but it does not really solve any problem that can’t be solved by extracting a custom component. An interesting pattern to use sparingly.",
      "source_content_hash": "b97a02b21e3e0dd2dbe7778facf955737f92b3063fd0b37e698ff5527a0faf33",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Render Propsパターンが復活しつつあるようです。2つの新しいプロジェクトがReactコアフックをレンダーコールバックで公開することを提案しています。これは状況によっては便利なトリックで、コンポーネントを「インライン」化しながらもフックのルールを遵守できますが、カスタムコンポーネントを抽出することで解決できる問題を本当に解決するわけではありません。控えめに使用するべき興味深いパターンです。"
      }
    },
    {
      "segment_id": "716da8e8",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "e3321a43",
      "source_content": "* 💸 [Product for Engineers - What engineers get wrong about communication](https://go.posthog.com/twir-may21)\n* 👀 [React Core PR - `createStore()` skeleton API](https://github.com/facebook/react/pull/33215): Initial scaffolding work to implement the Concurrent Stores feature mentioned in the latest React Labs update. There’s no implementation yet, but I still find it interesting to check the signature/types of this upcoming API that should support both ad-hoc state updates and the reducer/actions pattern. What strikes me the most is that you can’t access the store value directly, apart from using the `use(store)` API, and this totally makes sense in a concurrent world. Remember, this is a work in progress, and things may change.\n* 👀 [React Core PRs - `<SuspenseList>` being actively worked on](https://github.com/search?q=repo%3Afacebook%2Freact+SuspenseList\\&type=pullrequests\\&s=created\\&o=desc): It’s been a while since we last heard of this upcoming component that we thought would be in React 18. It allows to coordinate Suspense boundaries and control their “reveal order” (forwards/backwards/together).\n* 👀 [React Core PR - Transition indicator + `onDefaultTransitionIndicator` API](https://github.com/facebook/react/pull/33162): A feature being worked on should allow giving user feedback while React transitions are in progress. The default React-DOM implementation should show a native browser spinner, but it’s possible to opt out or provide a custom feedback.\n* 👀 [SWC PR - Initialize `@swc/react-compiler`](https://github.com/swc-project/swc/pull/10475): A new package to integrate the React Compiler for all SWC-based projects is coming. It will still use Babel under the hood ([details](https://github.com/oxc-project/oxc/issues/10048#issuecomment-2837628965)), but it’s possible to optimize by only running it on relevant files (see what [Next.js is doing](https://nextjs.org/docs/app/api-reference/config/next-config-js/reactCompiler)), potentially using parallelization.\n* 👀 [Next.js PR - Initial Segment Explorer devtool](https://github.com/vercel/next.js/pull/78858): The Next.js team started working on a tool to help you visualize parallel and interception route segments.\n* 🔐 [Next.js Race Condition to Cache Poisoning - CVE-2025-32421](https://github.com/advisories/GHSA-qpjv-v59x-3qc4): Low-severity Pages Router vulnerability, already patched.\n* 📣 [Appwrite Sites: The open-source Vercel alternative](https://appwrite.io/blog/post/announcing-appwrite-sites): The AppWrite cloud platform can now deploy full-stack React meta-frameworks. It positions itself as a direct Vercel competitor, although there are differences (containers vs serverless). It’s a paid cloud product, but you can also self-host it for free.\n* 📜 [Concurrent Rendering](https://ui.dev/c/react/concurrent-rendering): Free interactive lesson on React transitions from the ui.dev course.\n* 📜 [Correctly infers from initial props](https://rena.to/blog/13): You don’t need to explicitly type your context value and can leverage type inference instead.\n* 📜 [Making Next.js Navigation Fast af](https://upstash.com/blog/fast-nextjs): Using React Router within your Next.js app works, but I doubt it’s a good idea, doesn’t permit you to use RSCs, and is likely to cause trouble if you use different routers on different pages.\n* 📜 [Mastering Focus Management in React with `flushSync`](https://www.epicreact.dev/mastering-focus-management-in-react-with-flush-sync-f5b38): By default, React uses batching and doesn’t flush state updates immediately to the DOM, and you can opt out of this behavior when needed.\n* 📜 [Preserving and Resetting State in React](https://www.epicreact.dev/preserving-and-resetting-state-in-react-l2dxl): Explains why conditionally wrapping a component may make it reset its state.\n* 📜 [Just F\\*\\*\\*ing Use React](https://justfuckingusereact.com/): Entertaining read, also exists in a less profane [Just Use React](https://www.epicreact.dev/just-use-react-dk4e0) variant.\n* 📜 [The Past and Future of Render Optimization with React Context](https://newsletter.daishikato.com/p/the-past-and-future-of-render-optimization-with-react-context)\n* 💸 [Full-Stack Upgrade – Build real apps with auth, orgs & file uploads: The Road to Next is your next step as a full-stack React developer.](https://www.road-to-next.com/?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_1)\n* 📦 [Waku 0.23 - Fine-grained component render modes](https://waku.gg/blog/fine-grained-router-components): Makes it possible to statically pre-render parts of a dynamic page. I find the API a bit confusing, but the idea looks cool and simpler than Next.js Partial Pre-Rendering.\n* 📦 [React-Scan 0.3.4 - Scan for React performance issues](https://github.com/aidenybai/react-scan/releases/tag/v0.3.4): A release that takes the opportunity to announce upcoming features and the availability of the [extension on the Chrome store](https://chromewebstore.google.com/detail/react-scan/anmmhkomejbdklkhoiloeaehppaffmdf).\n* 📦 [React Aria - May 19 Release](https://react-spectrum.adobe.com/releases/2025-05-19.html)\n* 📦 [React-Admin - May 2025 Update - 5.7 & 5.8](https://marmelab.com/blog/2025/05/21/react-admin-may-2025-update.html)\n* 📦 [StyleX 0.13 - New `defineConsts` and `positionTry` APIs](https://stylexjs.com/blog/v0.13.0)\n* 📦 [Shopify Hydrogen 2025.05 - Upgrades to React Router 7](https://hydrogen.shopify.dev/update/may-2025)\n* 🎥 [Theo - React Is the last framework](https://www.youtube.com/watch?v=P1FLEnKZTAE): Probably a quite controversial point of view that React runtime/syntax is less likely to change now (mainly due to AI). Innovation is moving an abstraction layer above with the React Compiler.\n* 🎥 [Alem Tuzlak - Server Componets (RSC) in react-router are... actually good?](http://epicweb.dev/tips/server-componets-rsc-in-react-router-are-actually-good~n3u4j)\n* 🎙️ [Syntax 902 - Fullstack Cloudflare with React and Vite - RedwoodSDK with Peter Pistorius](https://syntax.fm/show/902/fullstack-cloudflare-with-react-and-vite-redwood-sdk)\n* 🎙️ [Front-end Fire 95 -TanStack DB & The Rise of the Tannerverse](https://front-end-fire.com/episodes/95/)",
      "source_content_hash": "2f7beeac0d45405c53d10f1b71519d8d37bc3176575035b023e320e3525f8f43",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [Product for Engineers - エンジニアがコミュニケーションについて誤解していること](https://go.posthog.com/twir-may21)\n* 👀 [React Core PR - `createStore()` スケルトンAPI](https://github.com/facebook/react/pull/33215): 最新のReact Labsアップデートで言及されたConcurrent Stores機能を実装するための初期作業。まだ実装はないが、この将来のAPIのシグネチャ/型を確認するのは興味深い。このAPIはアドホックな状態更新とreducer/actionsパターンの両方をサポートする予定。最も注目すべきは、`use(store)` APIを使用する以外にストア値に直接アクセスできない点で、これは並行処理の世界では完全に理にかなっている。これは進行中の作業であり、変更される可能性があることに注意。\n* 👀 [React Core PRs - `<SuspenseList>` が積極的に作業中](https://github.com/search?q=repo%3Afacebook%2Freact+SuspenseList\\&type=pullrequests\\&s=created\\&o=desc): この将来のコンポーネントについて最後に聞いてからしばらく経つ。React 18に含まれると思われていたこのコンポーネントは、Suspense境界を調整し、その「表示順序」（順方向/逆方向/同時）を制御できる。\n* 👀 [React Core PR - トランジションインジケーター + `onDefaultTransitionIndicator` API](https://github.com/facebook/react/pull/33162): 作業中の機能で、Reactのトランジション進行中にユーザーフィードバックを提供できるようにする。デフォルトのReact-DOM実装ではネイティブブラウザスピナーが表示されるが、オプトアウトしたりカスタムフィードバックを提供したりできる。\n* 👀 [SWC PR - `@swc/react-compiler` の初期化](https://github.com/swc-project/swc/pull/10475): SWCベースのプロジェクト向けにReact Compilerを統合する新しいパッケージが登場予定。内部的には依然としてBabelを使用するが（[詳細](https://github.com/oxc-project/oxc/issues/10048#issuecomment-2837628965)）、関連ファイルのみで実行するように最適化可能（[Next.jsの取り組み](https://nextjs.org/docs/app/api-reference/config/next-config-js/reactCompiler)参照）。並列化を活用できる可能性もある。\n* 👀 [Next.js PR - 初期Segment Explorer開発ツール](https://github.com/vercel/next.js/pull/78858): Next.jsチームは、並列ルートとインターセプトルートセグメントを可視化するツールの開発を開始した。\n* 🔐 [Next.js キャッシュポイズニングへの競合状態 - CVE-2025-32421](https://github.com/advisories/GHSA-qpjv-v59x-3qc4): 低深刻度のPages Router脆弱性で、既に修正済み。\n* 📣 [Appwrite Sites: オープンソースのVercel代替](https://appwrite.io/blog/post/announcing-appwrite-sites): AppWriteクラウドプラットフォームがフルスタックReactメタフレームワークのデプロイを可能に。Vercelの直接競合として位置付けられているが、違いもある（コンテナ vs サーバーレス）。有料クラウド製品だが、無料でセルフホストも可能。\n* 📜 [並行レンダリング](https://ui.dev/c/react/concurrent-rendering): ui.devコースのReactトランジションに関する無料インタラクティブレッスン。\n* 📜 [初期propsからの正しい型推論](https://rena.to/blog/13): コンテキスト値を明示的に型付けする必要はなく、型推論を活用できる。\n* 📜 [Next.jsナビゲーションを超高速化](https://upstash.com/blog/fast-nextjs): Next.jsアプリ内でReact Routerを使用することは可能だが、RSCが使えなくなり、異なるページで異なるルーターを使用すると問題を引き起こす可能性があるため、良いアイデアとは思えない。\n* 📜 [`flushSync`を使ったReactのフォーカス管理のマスター](https://www.epicreact.dev/mastering-focus-management-in-react-with-flush-sync-f5b38): デフォルトではReactはバッチ処理を使用し、状態更新を即座にDOMに反映しないが、必要に応じてこの動作をオプトアウトできる。\n* 📜 [Reactでの状態の保持とリセット](https://www.epicreact.dev/preserving-and-resetting-state-in-react-l2dxl): コンポーネントを条件付きでラップすると状態がリセットされる理由を説明。\n* 📜 [Just F\\*\\*\\*ing Use React](https://justfuckingusereact.com/): 面白い読み物で、[Just Use React](https://www.epicreact.dev/just-use-react-dk4e0)という穏やかなバージョンも存在。\n* 📜 [React Contextを使ったレンダー最適化の過去と未来](https://newsletter.daishikato.com/p/the-past-and-future-of-render-optimization-with-react-context)\n* 💸 [フルスタックアップグレード - 認証、組織、ファイルアップロード付きのリアルアプリ構築: The Road to NextはフルスタックReact開発者としての次のステップ](https://www.road-to-next.com/?utm_source=newsletter\\&utm_medium=email\\&utm_campaign=this_week_in_react_1)\n* 📦 [Waku 0.23 - きめ細かいコンポーネントレンダーモード](https://waku.gg/blog/fine-grained-router-components): 動的ページの一部を静的にプリレンダリング可能に。APIは少し混乱しやすいが、アイデアはクールでNext.jsのPartial Pre-Renderingよりシンプル。\n* 📦 [React-Scan 0.3.4 - Reactパフォーマンス問題のスキャン](https://github.com/aidenybai/react-scan/releases/tag/v0.3.4): このリリースでは、今後の機能と[Chromeストアでの拡張機能の利用可能](https://chromewebstore.google.com/detail/react-scan/anmmhkomejbdklkhoiloeaehppaffmdf)を発表。\n* 📦 [React Aria - 2025年5月19日リリース](https://react-spectrum.adobe.com/releases/2025-05-19.html)\n* 📦 [React-Admin - 2025年5月アップデート - 5.7 & 5.8](https://marmelab.com/blog/2025/05/21/react-admin-may-2025-update.html)\n* 📦 [StyleX 0.13 - 新しい`defineConsts`と`positionTry` API](https://stylexjs.com/blog/v0.13.0)\n* 📦 [Shopify Hydrogen 2025.05 - React Router 7へのアップグレード](https://hydrogen.shopify.dev/update/may-2025)\n* 🎥 [Theo - Reactは最後のフレームワーク](https://www.youtube.com/watch?v=P1FLEnKZTAE): おそらく非常に議論を呼ぶ見解で、Reactのランタイム/構文は（主にAIのため）今や変化しにくくなっているという。イノベーションはReact Compilerによって抽象化レイヤー上に移動している。\n* 🎥 [Alem Tuzlak - react-routerのServer Components（RSC）は...実際良い？](http://epicweb.dev/tips/server-componets-rsc-in-react-router-are-actually-good~n3u4j)\n* 🎙️ [Syntax 902 - ReactとViteを使ったフルスタックCloudflare - Peter PistoriusによるRedwoodSDK](https://syntax.fm/show/902/fullstack-cloudflare-with-react-and-vite-redwood-sdk)\n* 🎙️ [Front-end Fire 95 - TanStack DB & Tannerverseの台頭](https://front-end-fire.com/episodes/95/)"
      }
    },
    {
      "segment_id": "057a9dd8",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_057a9dd8"
      }
    },
    {
      "segment_id": "be625c00",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "3a8d2b95",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "5803caac",
      "source_content": "[![Add loyalty logic to your product — with just one API.](/emails/issues/235/ReactNewsletterAd3.jpg)](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)",
      "source_content_hash": "c9b004d359c9126de6ead994dded85cd1e618e93690fd48459bbbe59b97ed008",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![ロイヤルティロジックを1つのAPIで製品に追加](/emails/issues/235/ReactNewsletterAd3.jpg)](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)"
      }
    },
    {
      "segment_id": "51867d16",
      "source_content": "**[Add loyalty logic to your product — with just one API.](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)**",
      "source_content_hash": "901d32dbe217be85b5d05420012d3aa0b4d37e2207853de54bd82a3bfc113dd9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[ロイヤルティロジックを1つのAPIで製品に追加](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)**"
      }
    },
    {
      "segment_id": "785750ac",
      "source_content": "**Why build loyalty from scratch when you can plug it in with Dynamo?**",
      "source_content_hash": "24edc8ba02d30e31cfd65b076b784c800643afab51059ae189e7a8fc354db9bc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**ゼロから構築する代わりに、Dynamoで簡単に統合できるロイヤルティ機能**"
      }
    },
    {
      "segment_id": "82e90254",
      "source_content": "Dynamo is the API-first headless loyalty engine used by product teams at leading fintech and consumer apps to embed rewards, tiers, and behavior-based engagement — without writing it all from zero.",
      "source_content_hash": "b0852187e559b05e84a75fda5e38bcb8bb860ad02fc75e249bbea6bf328f8dba",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "DynamoはAPIファーストのヘッドレスロイヤルティエンジンで、主要なフィンテックやコンシューマーアプリのプロダクトチームが、報酬、ティア、行動ベースのエンゲージメントを組み込むために利用しています。すべてをゼロから構築する必要はありません。"
      }
    },
    {
      "segment_id": "2822251a",
      "source_content": "With 250+ cloud data integrations, a **React and React Native SDK**, **plus a clean sandbox trial**, you can improve your retention now in days not months.",
      "source_content_hash": "8a8b8ca1018606cac8db547ca939e9fe0482c322af6179442a156096955c8180",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "250以上のクラウドデータ連携、**ReactおよびReact Native SDK**、**クリーンなサンドボックストライアル**を備えており、数ヶ月ではなく数日でリテンションを向上させることが可能です。"
      }
    },
    {
      "segment_id": "25212439",
      "source_content": "→ [Launch demo and get free sandbox access now.](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)",
      "source_content_hash": "ce0503be99d416f2724321820831bd9b94044b8afbf78d2dde99f6b50b3079ce",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "→ [デモを起動して無料サンドボックスアクセスを今すぐ取得](https://whitelabel-loyalty.com/products/dynamo/?utm_source=email\\&utm_medium=newsletter\\&utm_campaign=react)"
      }
    },
    {
      "segment_id": "4c30a6aa",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "54bafb10",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "f6db2c30",
      "source_content": "* 💸 [Radon IDE – All-in-one tool for React Native & Expo development. Meet the Radon IDE team next week at App.js Conf!](https://ide.swmansion.com/?utm_source=thisweekinreact.com)\n* 🐦 [Fortnite is back on the App Store in the U.S. on iPhones and iPads... and on the Epic Games Store and AltStore in the E.U!](https://x.com/Fortnite/status/1924949632628523199): Major news for the whole mobile industry, Apple is finally complying with the court ruling, and allows mobile apps to use alternative web-based payment methods to bypass the 30% fee on in-app purchases.\n* 🐦 [Airbnb Lava preview](https://x.com/ramon_fritsch/status/1922358206862397478): Not open source yet, but Airbnb invented a new lightweight media format to embed animations and micro-interaction icons across platforms. A possible successor of Lottie?\n* 📜 [Real-time audio processing with Expo and native code](https://expo.dev/blog/real-time-audio-processing-with-expo-and-native-code)\n* 📜 [Expo + IoT: Device provisioning with HTTPS via WiFi](https://expo.dev/blog/expo-iot-device-provisioning-with-https-via-wifi)\n* 📜 [How to Run LLMs on-device in React Native with Vercel AI SDK](https://www.callstack.com/blog/meet-react-native-ai-llms-running-on-mobile-for-real)\n* 📦 [Lynx 3.2 - Testing Library, new CSS features, improve microtasks and console support](https://lynxjs.org/blog/lynx-3-2.html)\n* 📦 [React Native Skia 2.0.1 - Wide gamut colors on iOS](https://github.com/Shopify/react-native-skia/releases/tag/v2.0.1)\n* 🎥 [Beto - How to upgrade from Expo SDK 52 to 53](https://www.youtube.com/watch?v=HBPyP4OxVgs)\n* 🎥 [Simon Grimm - React Native Drawer Navigation with Expo Router](https://www.youtube.com/watch?v=65xmaJNpZVY)\n* 🎙️ [Rocket Ship 69 - Expo Router v5, Skia WebGPU, App Updates & Galaxies Lifetime](https://share.transistor.fm/s/51ee3a99)\n* 🎙️ [React Native Radio 332 - Codemagic + React Native with Martin Remmelgas](https://infinite.red/react-native-radio/rnr-332-codemagic-react-native-with-martin-remmelgas)",
      "source_content_hash": "f6ad4611b294792aa353c16b6292f9f35ac4f26d099c8c3af5454e96e8d96ff2",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [Radon IDE – React Native & Expo開発のためのオールインワンツール。App.js ConfでRadon IDEチームに会いましょう！](https://ide.swmansion.com/?utm_source=thisweekinreact.com)\n* 🐦 [Fortniteが米国のApp StoreでiPhoneとiPad向けに復帰... そしてEpic Games StoreとAltStoreでEUでも！](https://x.com/Fortnite/status/1924949632628523199): モバイル業界全体にとっての大きなニュース。Appleはついに裁判所の決定に従い、アプリ内課金の30%手数料を回避するための代替Webベースの支払い方法をモバイルアプリに許可しました。\n* 🐦 [Airbnb Lavaプレビュー](https://x.com/ramon_fritsch/status/1922358206862397478): まだオープンソースではありませんが、Airbnbはプラットフォーム間でアニメーションやマイクロインタラクションアイコンを埋め込むための新しい軽量メディアフォーマットを開発しました。Lottieの後継となる可能性があります。\n* 📜 [Expoとネイティブコードを使ったリアルタイムオーディオ処理](https://expo.dev/blog/real-time-audio-processing-with-expo-and-native-code)\n* 📜 [Expo + IoT: WiFi経由のHTTPSを使ったデバイスプロビジョニング](https://expo.dev/blog/expo-iot-device-provisioning-with-https-via-wifi)\n* 📜 [Vercel AI SDKを使ってReact NativeでオンデバイスLLMを実行する方法](https://www.callstack.com/blog/meet-react-native-ai-llms-running-on-mobile-for-real)\n* 📦 [Lynx 3.2 - テストライブラリ、新しいCSS機能、マイクロタスクとコンソールサポートの改善](https://lynxjs.org/blog/lynx-3-2.html)\n* 📦 [React Native Skia 2.0.1 - iOSでのワイドカラーマット対応](https://github.com/Shopify/react-native-skia/releases/tag/v2.0.1)\n* 🎥 [Beto - Expo SDK 52から53へのアップグレード方法](https://www.youtube.com/watch?v=HBPyP4OxVgs)\n* 🎥 [Simon Grimm - Expo Routerを使ったReact Nativeドロワーナビゲーション](https://www.youtube.com/watch?v=65xmaJNpZVY)\n* 🎙️ [Rocket Ship 69 - Expo Router v5、Skia WebGPU、アプリアップデート＆Galaxies Lifetime](https://share.transistor.fm/s/51ee3a99)\n* 🎙️ [React Native Radio 332 - Codemagic + React Native with Martin Remmelgas](https://infinite.red/react-native-radio/rnr-332-codemagic-react-native-with-martin-remmelgas)"
      }
    },
    {
      "segment_id": "513f3dff",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "cbd60296",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "f93a1bb7",
      "source_content": "* 👀 [TC39 - Agenda for the 108th meeting](https://github.com/tc39/agendas/blob/main/2025/05.md): Next week, another set of interesting proposals for JS could progress, some of them could become part of the standard: `using` keyword, `Error.isError()`.\n* 📜 [JavaScript's New Superpower: Explicit Resource Management](https://v8.dev/features/explicit-resource-management): Describes the `using` keyword mentioned above, already available in Chrome, and more importantly, in Node 24.\n* 📜 [The Future of MCP is GraphQL](https://www.apollographql.com/blog/the-future-of-mcp-is-graphql): Apollo announcing their MCP server, explaining the alignment between GraphQL and AI needs.\n* 📜 [I think the ergonomics of generators is growing on me](https://macarthur.me/posts/generators/)\n* 📜 [Reports of Deno's Demise Have Been Greatly Exaggerated](https://deno.com/blog/greatly-exaggerated)\n* 📦 [Node 22.16 - `node.config.json` support (experimental)](https://nodejs.org/en/blog/release/v22.16.0)\n* 📦 [Zod 4.0 - faster, slimmer, more tsc-efficient, new Zod Mini export, localization and more](https://zod.dev/v4)\n* 📦 [Remotion Media Parser - Universal lib based on WebCodecs to parse/decode/encode videos](https://www.remotion.dev/blog/media-parser)",
      "source_content_hash": "e574b945f3580531688a85bfec3a597f2aac51ce57d772d7f826026b4b8dff5c",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 👀 [TC39 - 第108回会議の議題](https://github.com/tc39/agendas/blob/main/2025/05.md): 来週、JavaScriptの新たな提案が進展する可能性があります。`using`キーワードや`Error.isError()`など、標準仕様に採用される可能性のある提案が含まれています。\n* 📜 [JavaScriptの新たな超能力: 明示的リソース管理](https://v8.dev/features/explicit-resource-management): 前述の`using`キーワードについて解説しています。ChromeやNode 24ですでに利用可能です。\n* 📜 [MCPの未来はGraphQL](https://www.apollographql.com/blog/the-future-of-mcp-is-graphql): ApolloがMCPサーバーを発表し、GraphQLとAIのニーズとの整合性について説明しています。\n* 📜 [ジェネレーターのエルゴノミクスが気に入ってきた](https://macarthur.me/posts/generators/)\n* 📜 [Denoの終焉の報告は大げさだった](https://deno.com/blog/greatly-exaggerated)\n* 📦 [Node 22.16 - `node.config.json`のサポート（実験的）](https://nodejs.org/en/blog/release/v22.16.0)\n* 📦 [Zod 4.0 - より高速、軽量、TypeScript効率化、新しいZod Miniエクスポート、ローカライゼーションなど](https://zod.dev/v4)\n* 📦 [Remotion Media Parser - WebCodecsベースのユニバーサルライブラリで動画を解析/デコード/エンコード](https://www.remotion.dev/blog/media-parser)"
      }
    },
    {
      "segment_id": "cf542fb4",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "d53c8ed4",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "1ecf0882",
      "source_content": "[![alt](/emails/issues/235/meme.jpg)](https://x.com/copyjosh/status/1924294150905614762)",
      "source_content_hash": "aac5bb346505ca88c45e6553d6054b933b53156bb926891d1e92a9df771cfbc0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/235/meme.jpg)](https://x.com/copyjosh/status/1924294150905614762)"
      }
    },
    {
      "segment_id": "e77cf7c6",
      "source_content": "[![alt](/emails/issues/235/meme2.jpg)](https://x.com/sebastienlorber/status/1922935190080372837)",
      "source_content_hash": "8a7130f60e07943218c0ef531d40bc86195168d4600d93a3df2737019406b998",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/235/meme2.jpg)](https://x.com/sebastienlorber/status/1922935190080372837)"
      }
    },
    {
      "segment_id": "bb1346b6",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それではまた！👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/235/index.mdx",
  "last_updated_timestamp": "2025-06-12T01:22:17.248633+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "ca2c56844b4b9b139be1f97c7328141109156ca5064fbe580883c3165bd922fc"
  }
}