{
  "source_file_path_relative_to_docusaurus_root": "newsletter/201/index.mdx",
  "source_file_content_hash": "cc7202a23f0a8f037369b3797b9256b165be45d76958975ec2044f90cc0c7b14",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /201\ntitle: \"This Week In React #201: TanStack, Remix, Next.js-SaaS-Starter, routing, ?search, decoupling, LLM, Astro, Redwood, Storybook, Conform, Nitro Modules, RN CSS, Re.Pack, Swift, VisionOS, Lottie, Node.js, TypeScript, Vite, date-fns...\"\nauthors: [slorber]\ndate: 09-18-2024\n---",
      "source_content_hash": "bc027e9fe021cc08e1b062f675d02fcf584b16961813af31a06c91b185829c1d",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "Another week with many interesting React community articles, notably around the TanStack.",
      "source_content_hash": "59e6f8ab57dab7dcff71b3c547d6c2b9731c6bb24b9cbb0065adfd78cbdd5b56",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週もTanStackを中心としたReactコミュニティの興味深い記事が多数公開されました。"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "We also have cool React Native announcements such as Nitro Modules.",
      "source_content_hash": "ec611c95423b88d77d331631027222576a35f3892061f0bc6a5c57a311aa5d68",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Nitro Modulesなど、React Nativeに関するクールな発表もあります。"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "✍ Don't forget to sign this important petition: [Oracle, it's time to free JavaScript](https://javascript.tm/)",
      "source_content_hash": "81f12500044d349f5a6986d753e376b8c5dcb08879a5899f6676620734896772",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "✍ 重要な請願書への署名をお忘れなく: [Oracle, it's time to free JavaScript](https://javascript.tm/)"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "Also check our partner conf 🗓 [React Summit US](https://reactsummit.us/?utm_source=Newsletter\\&utm_medium=thisweekinreact) - 🇺🇸 New-York - 19 & 22 December. The great React Summit conference is back in the US for it's second edition!",
      "source_content_hash": "cde4a3a8e96d22f229020cb6747486fbcd9bd36e8bbb23ac1a79242d9ca60c4e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "パートナーカンファレンスもチェックしてください 🗓 [React Summit US](https://reactsummit.us/?utm_source=Newsletter\\&utm_medium=thisweekinreact) - 🇺🇸 ニューヨーク - 12月19日＆22日。素晴らしいReact Summitカンファレンスがアメリカで2回目の開催を迎えます！"
      }
    },
    {
      "segment_id": "45c63027",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_45c63027"
      }
    },
    {
      "segment_id": "1acb9a05",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [Twitterでこのニュースレターをチェック](https://slo.im/thread) - ビジュアルフォーマット 🎨**"
      }
    },
    {
      "segment_id": "fb3d50cd",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "0adfe0aa",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_0adfe0aa"
      }
    },
    {
      "segment_id": "1941846d",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_1941846d"
      }
    },
    {
      "segment_id": "a5403c6e",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "[![Uncover React Component Usage Across Your Dev Teams](/emails/issues/201/omletad.png)](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024)",
      "source_content_hash": "c88e59a60883be0204cca3470861c78587a631c18e118a40805ac659356bdf66",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![開発チーム全体でのReactコンポーネント使用状況を可視化](/emails/issues/201/omletad.png)](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024)"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "**[Uncover React Component Usage Across Your Dev Teams](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024)**",
      "source_content_hash": "200be453844daa1c707f7274d4444a1986b61f991aed548680371e3b41e9c40d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[開発チーム全体でのReactコンポーネント使用状況を可視化](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024)**"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "☁️ Imagine being able to see exactly how and where devs are using specific React components so you can spot ways to reduce front-end tech debt and prove design system value. You can with Omlet.",
      "source_content_hash": "db49b30bf7157ed5c3b49c15fe8a4e0aefa28f524be820d0e5acb38b0a08fc8f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "☁️ 特定のReactコンポーネントがどのように、どこで使用されているかを正確に把握し、フロントエンドの技術的負債を減らす方法を見つけ、デザインシステムの価値を証明できると想像してみてください。Omletならそれが可能です。"
      }
    },
    {
      "segment_id": "157151e9",
      "source_content": "* Gain a central catalog of all the custom and reusable components you’ve used in production\n* Search and filter components by specific attributes to uncover what needs to be updated, debugged, or utilized more\n* Easily create and share custom charts with your team to show design system adoption, legacy code reduction, least/most used components and props, and more.",
      "source_content_hash": "7eef444dfc1976b486bd01b0cc33965129a5fce6a7c8e5fbf76c273d0953402b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 本番環境で使用したカスタムおよび再利用可能なコンポーネントの中央カタログを取得\n* 特定の属性でコンポーネントを検索・フィルタリングし、更新、デバッグ、またはより活用が必要な箇所を発見\n* チームと簡単にカスタムチャートを作成・共有し、デザインシステムの採用状況、レガシーコードの削減、使用頻度の最低/最高のコンポーネントとプロパティなどを表示"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "Get set up and run your first scan in \\<5 minutes. [Try for free](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024).",
      "source_content_hash": "3b7ccc6e54a49e9916cf0c24f92668060abd976499119d43a087be798247993c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "5分未満でセットアップして最初のスキャンを実行できます。[無料で試す](https://omlet.dev/?utm_campaign=partner_this-week-in-react_first-sponsor-sep-2024)。"
      }
    },
    {
      "segment_id": "d4e0d4e1",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "8bddee80",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "[![Introducing TanStack Router](/emails/issues/201/tanstack.jpg)](https://frontendmasters.com/blog/introducing-tanstack-router/)",
      "source_content_hash": "24bed50a84aafc7fa5ad4af6fcde2e65a0ae16da78fe797536a745b8abf02e1b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![TanStack Routerの紹介](/emails/issues/201/tanstack.jpg)](https://frontendmasters.com/blog/introducing-tanstack-router/)"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "**TanStack news**",
      "source_content_hash": "72df9de5ef682f41b1814e78aa180ee10bb104f2740e467be7f68dcaa218fc9c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**TanStack関連ニュース**"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "I wasn't sure which headline to pick this week, so let's gather all TanStack-related news under one roof:",
      "source_content_hash": "faf0caeb5dabc677939ae607b0b782fe8c8a8551a8e37ea14149eaaec4a8591a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週はどの見出しを選ぶか迷ったので、TanStack関連のニュースをまとめてご紹介します:"
      }
    },
    {
      "segment_id": "157c9741",
      "source_content": "* 📜 [Introducing TanStack Router](https://frontendmasters.com/blog/introducing-tanstack-router/): Great routing/navigation overview of this full-featured client-side framework that powers the upcoming TanStack Start framework (in alpha). It notably shines for its great typesafety for links, path segments and search parameters. I particularly like the idea of linking with `to=”/users/$id”` instead of `to=”/users/123”`.\n* 📜 [A milestone for TypeScript Performance in TanStack Router](https://tanstack.com/blog/tanstack-router-typescript-performance): Still related to TanStack Router, I also liked this post that dives deep into troubleshooting TypeScript performance problems in the language service, leading to slow IDE autocompletion.\n* 📜 [How Infinite Queries work](https://tkdodo.eu/blog/how-infinite-queries-work): Dominik from React Query explains how Infinite Queries work under the hood, using an elegant code architecture with a pluggable behavior logic. He also explains how he fixed an historical bug that was only reported recently, caused by the retry logic.\n* 👀 [Clerk TanStack start SDK (beta)](https://clerk.com/docs/quickstarts/tanstack-start): A third-party auth provider adding first-class auth support to the upcoming framework is a great sign of traction.",
      "source_content_hash": "d86eab4a182cbdac594fb74bf8dc6897c67b8e29d7ccb7f3c57c7733e6bb078e",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📜 [TanStack Routerの紹介](https://frontendmasters.com/blog/introducing-tanstack-router/): 近日公開予定のTanStack Startフレームワーク（現在アルファ版）を支えるこの機能豊富なクライアントサイドフレームワークのルーティング/ナビゲーションの概要。リンク、パスセグメント、検索パラメータに対する優れた型安全性が特徴です。特に、`to=\"/users/123\"`ではなく`to=\"/users/$id\"`でリンクするというアイデアが気に入りました。\n* 📜 [TanStack RouterにおけるTypeScriptパフォーマンスのマイルストーン](https://tanstack.com/blog/tanstack-router-typescript-performance): TanStack Routerに関連して、言語サービスにおけるTypeScriptのパフォーマンス問題のトラブルシューティングに深く掘り下げ、IDEのオートコンプリートが遅くなる原因を解明したこの記事も気に入りました。\n* 📜 [Infinite Queriesの仕組み](https://tkdodo.eu/blog/how-infinite-queries-work): React QueryのDominikが、プラグ可能な動作ロジックを使用したエレガントなコードアーキテクチャで、Infinite Queriesが内部でどのように動作するかを説明しています。また、リトライロジックによって引き起こされ、最近報告されただけの歴史的なバグをどのように修正したかも説明しています。\n* 👀 [Clerk TanStack start SDK（ベータ版）](https://clerk.com/docs/quickstarts/tanstack-start): サードパーティの認証プロバイダーが、今後のフレームワークにファーストクラスの認証サポートを追加していることは、注目度の高さを示す良いサインです。"
      }
    },
    {
      "segment_id": "069f729e",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "3df4f066",
      "source_content": "* 💸 [React Bricks - Transform React components into dynamic, visually editable bricks of content with the pioneering React Visual Headless CMS.](https://www.reactbricks.com/?utm_source=twir\\&utm_campaign=ql24)\n* 🧑‍🎓 [XState: Complete Getting Started Guide](https://www.typeonce.dev/course/xstate-complete-getting-started-guide): Free comprehensive course on XState in a React context.\n* 🖨 [React 19 Cheat Sheet](https://www.epicreact.dev/react-19-cheatsheet)\n* 🗓️ [React-Africa](https://react-africa.com/?utm_source=thisweekinreact) - 🇲🇦 Casablanca - 29 November - Get a 10% discount with code “TWIR”. The full line up is now available, take a tour on the conference website !\n* 🗓️ [React Advanced London](https://reactadvanced.com/?utm_source=Newsletter\\&utm_medium=thisweekinreact) - 🇬🇧 London - 25 & 28 October - 10% discount with code TWIR. Full line-up revealed !\n* 📜 [Remix's concurrent submissions are fundamentally flawed (without causal ordering)](https://dashbit.co/blog/remix-concurrent-submissions-flawed): Following the migration of ChatGPT from Next.js to Remix, the creator of Elixir argues that Remix submission and validation model is subject to race conditions. Ryan Florence plans to respond later. Note this is a more general problem affecting most client-side frameworks, although React 19 actions run sequentially and are not affected by it.\n* 📜 [How Remix's Flat File-Based Routing Works](https://www.udohjeremiah.com/blog/how-remix-flat-file-based-routing-works): Remix routing convention can be customized, but it comes with a default one that this post explains in details.\n* 📜 [Using callbacks to achieve better component decoupling in React](https://darios.blog/posts/using-callbacks-in-react): Short but important lesson on how to decouple a parent component from its children, by narrowing callback types instead of injecting a parent `setState`.\n* 📜 [SPA Lazy Loading Pitfalls](https://reacttraining.com/blog/spa-lazy-loading-pitfalls): When using React Router with lazy routes and loader functions, you’d rather avoid co-locating your loader function with the component that receives its data because it creates a waterfall.\n* 📜 [LLM and RSC: A match made in Heaven](https://nikhilsnayak.dev/blogs/llm-and-rsc): Uses OpenAI function/tool calls to implement an MVP of generative UI. The interactive demo can render an interactive React component during the chat session.\n* 📜 [Clean React with TypeScript](https://weser.io/blog/clean-react-with-typescript): Long-time ReasonML user adopts TypeScript and shares a great overview on how to best type React components, state, refs and events. You might be familiar with most types, but it also covers more advanced patterns such as forwarding props with `ComponentProps`.\n* 📜 [Implementing Feature Flagging with the Next.js App Router](https://aurorascharff.no/posts/implementing-feature-flagging-with-nextjs-app-router/): Implements a custom feature flag system based on env variables. It works for both client and server components.\n* 📜 [Search Params in Next.js for URL State](https://www.robinwieruch.de/next-search-params/): A good introduction to the `nuqs` library to implement typed search params to filter/sort a list of items.\n* 📜 [Redwood background Jobs](https://redwoodjs.com/blog/background-jobs): Details the new feature introduced in the recent 8.0 release. It’s notably useful to perform slower actions such as sending emails, without delaying user responses. Jobs are stored in a database and executed by a scheduler.\n* 📜 [Tailwind UI Radiant - A beautiful new marketing site template](https://tailwindcss.com/blog/2024-09-12-radiant-a-beautiful-new-marketing-site-template): New paid Next.js template from the Tailwind CSS team, but the launch blog post also explains interesting details, such as FramerMotion variant propagation.\n* 📜 [Don't Sleep on AbortController](https://kettanaito.com/blog/dont-sleep-on-abort-controller): Great vanilla JS article overall, including a cool React `useEffect` example\n* 📦 [Vite 6 beta](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md): This comes with the new [Environment API](https://main.vitejs.dev/guide/api-environment) useful to support multiple module graphs for SSR and RSCs.\n* 📦 [Valtio 2.0](https://github.com/pmndrs/valtio/releases/tag/v2.0.0): Valtio won’t handle promises anymore, you need to use `React.use()` now. This inspired me to create a [demo](https://x.com/sebastienlorber/status/1836060870733955127) showing how this pattern of storing promises could greatly simplify vanilla data fetching with less complexity than `useEffect()`.\n* 📦 [Next.js SaaS Starter - Using Next.js 15, React 19 Postgres, Drizzle, Stripe, and shadcn/ui](https://github.com/leerob/next-saas-starter): I’m not that much into boilerplates (there are too many), but this one is created by Lee Robinson from Vercel, free, using cutting edge React 19 features with best practices in application.\n* 📦 [Astro 5.0 beta - stable Content Layer, Server Islands, astro:env](https://astro.build/blog/astro-5-beta/)\n* 📦 [Hono-Remix-Adapter](https://github.com/yusukebe/hono-remix-adapter)\n* 📦 [Storybook 8.3 - Vitest integration, experimental Story globals](https://github.com/storybookjs/storybook/releases/tag/v8.3.0)\n* 📦 [Conform 1.2 - Input key prop no longer required](https://github.com/edmundhung/conform/releases/tag/v1.2.0)\n* 📦 [Isograph 0.2 - Modern GraphQL client](https://isograph.dev/blog/2024/09/11/isograph-0.2.0/)\n* 📦 [Relay 18.0 - `@alias`, `@catch`, editor integration improvements and more](https://github.com/facebook/relay/releases/tag/v18.0.0)\n* 📦 [Shopify Hydrogen - September 2024 release - Improved sitemaps, search enhancements, localization, CSP fixes](https://hydrogen.shopify.dev/update/september-2024)\n* 🎥 [Theo - We need to talk about Chrome's new API](https://www.youtube.com/watch?v=ucMNiYFB4CA): Greatly introduces the new `scheduler.yield()` that landed in Chrome 129. It is useful for Concurrent React to split work into smaller chunks and give priority to the user inputs.\n* 🎥 [UI Engineering - Making setState() instant](https://www.youtube.com/watch?v=H9IIwbUhEJA)",
      "source_content_hash": "334b639befcdccc83d9ec2b784ae77393f140280525de0521d271dd6ad4f7340",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [React Bricks - パイオニア的なReact Visual Headless CMSで、Reactコンポーネントを動的で視覚的に編集可能なコンテンツブロックに変換](https://www.reactbricks.com/?utm_source=twir\\&utm_campaign=ql24)\n* 🧑‍🎓 [XState: 完全初心者向けガイド](https://www.typeonce.dev/course/xstate-complete-getting-started-guide): ReactコンテキストでのXStateの無料包括コース\n* 🖨 [React 19 チートシート](https://www.epicreact.dev/react-19-cheatsheet)\n* 🗓️ [React-Africa](https://react-africa.com/?utm_source=thisweekinreact) - 🇲🇦 カサブランカ - 11月29日 - コード「TWIR」で10%割引。全ラインナップ公開中！\n* 🗓️ [React Advanced London](https://reactadvanced.com/?utm_source=Newsletter\\&utm_medium=thisweekinreact) - 🇬🇧 ロンドン - 10月25日＆28日 - TWIRコードで10%割引。全ラインナップ公開！\n* 📜 [Remixの並行送信は根本的に欠陥がある（因果的順序なし）](https://dashbit.co/blog/remix-concurrent-submissions-flawed): ChatGPTがNext.jsからRemixに移行した後、Elixirの作成者がRemixの送信・検証モデルが競合状態の影響を受けると主張。Ryan Florenceが後日返答予定。これはクライアントサイドフレームワーク全般の問題だが、React 19のアクションは順次実行されるため影響なし。\n* 📜 [Remixのフラットファイルベースルーティングの仕組み](https://www.udohjeremiah.com/blog/how-remix-flat-file-based-routing-works): Remixのルーティング規則はカスタマイズ可能だが、この記事ではデフォルトの仕組みを詳細に解説\n* 📜 [Reactでコールバックを使用してコンポーネントの結合度を下げる](https://darios.blog/posts/using-callbacks-in-react): 親コンポーネントと子コンポーネントの結合を緩和するための重要な手法\n* 📜 [SPA遅延読み込みの落とし穴](https://reacttraining.com/blog/spa-lazy-loading-pitfalls): React Routerで遅延ルートとローダー関数を使用する際、データを受け取るコンポーネントと同じ場所にローダー関数を配置するとウォーターフォールが発生する\n* 📜 [LLMとRSC：天の配](https://nikhilsnayak.dev/blogs/llm-and-rsc): OpenAIの関数/ツール呼び出しを使用して生成UIのMVPを実装。チャットセッション中にインタラクティブなReactコンポーネントをレンダリング可能\n* 📜 [TypeScriptでクリーンなReactを書く](https://weser.io/blog/clean-react-with-typescript): ReasonMLユーザーがTypeScriptに移行し、Reactコンポーネント、状態、ref、イベントの型付けを解説。`ComponentProps`を使った高度なパターンも網羅\n* 📜 [Next.js App Routerでの機能フラグ実装](https://aurorascharff.no/posts/implementing-feature-flagging-with-nextjs-app-router/): 環境変数ベースのカスタム機能フラグシステムを実装。クライアントとサーバーコンポーネント両方で動作\n* 📜 [Next.jsでURL状態のための検索パラメータ](https://www.robinwieruch.de/next-search-params/): 型付き検索パラメータを実装する`nuqs`ライブラリの入門\n* 📜 [Redwoodのバックグラウンドジョブ](https://redwoodjs.com/blog/background-jobs): 8.0リリースで導入された新機能。メール送信などの遅い処理をユーザー応答を遅らせずに実行可能\n* 📜 [Tailwind UI Radiant - 美しい新しいマーケティングサイトテンプレート](https://tailwindcss.com/blog/2024-09-12-radiant-a-beautiful-new-marketing-site-template): Tailwind CSSチームの有料Next.jsテンプレート。FramerMotionバリアント伝搬などの技術詳細も解説\n* 📜 [AbortControllerを見逃すな](https://kettanaito.com/blog/dont-sleep-on-abort-controller): `useEffect`の例を含む優れたVanilla JS記事\n* 📦 [Vite 6 beta](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md): SSRとRSCのための複数モジュールグラフをサポートする[Environment API](https://main.vitejs.dev/guide/api-environment)を導入\n* 📦 [Valtio 2.0](https://github.com/pmndrs/valtio/releases/tag/v2.0.0): Promiseの処理を廃止し、`React.use()`を使用する必要に。[デモ](https://x.com/sebastienlorber/status/1836060870733955127)では`useEffect()`よりシンプルなデータ取得パターンを紹介\n* 📦 [Next.js SaaSスターター - Next.js 15, React 19, Postgres, Drizzle, Stripe, shadcn/uiを使用](https://github.com/leerob/next-saas-starter): VercelのLee Robinson作成の無料ボイラープレート。React 19の最新機能とベストプラクティスを採用\n* 📦 [Astro 5.0 beta - 安定版Content Layer, Server Islands, astro:env](https://astro.build/blog/astro-5-beta/)\n* 📦 [Hono-Remix-Adapter](https://github.com/yusukebe/hono-remix-adapter)\n* 📦 [Storybook 8.3 - Vitest統合、実験的Story globals](https://github.com/storybookjs/storybook/releases/tag/v8.3.0)\n* 📦 [Conform 1.2 - Input key propが不要に](https://github.com/edmundhung/conform/releases/tag/v1.2.0)\n* 📦 [Isograph 0.2 - モダンなGraphQLクライアント](https://isograph.dev/blog/2024/09/11/isograph-0.2.0/)\n* 📦 [Relay 18.0 - `@alias`, `@catch`, エディタ統合の改善など](https://github.com/facebook/relay/releases/tag/v18.0.0)\n* 📦 [Shopify Hydrogen - 2024年9月リリース - サイトマップ改善、検索機能強化、ローカライゼーション、CSP修正](https://hydrogen.shopify.dev/update/september-2024)\n* 🎥 [Theo - Chromeの新しいAPIについて話す必要がある](https://www.youtube.com/watch?v=ucMNiYFB4CA): Chrome 129で導入された`scheduler.yield()`を紹介。Concurrent Reactで作業を小さなチャンクに分割し、ユーザー入力に優先度を与えるのに有用\n* 🎥 [UIエンジニアリング - setState()を即時化する](https://www.youtube.com/watch?v=H9IIwbUhEJA)"
      }
    },
    {
      "segment_id": "c625a102",
      "source_content": "<SubscribeFormEmbed placement=\"middle\" />",
      "source_content_hash": "eaa981a2bbab3e5ce47079c224ec6b180243b0ff962626e0303a55bdc1980160",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_c625a102"
      }
    },
    {
      "segment_id": "9006437d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "f6b04a59",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "a311e967",
      "source_content": "[![Amplify the benefits of JWTs and Session Tokens](/emails/issues/201/clerk.jpg)](https://go.clerk.com/4kxhIiA)",
      "source_content_hash": "4aefd70bda11e850955d8e11b57fd9143a879e9f3b52d4dd387dd96c9f5e1689",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![JWTとセッショントークンの利点を増幅](/emails/issues/201/clerk.jpg)](https://go.clerk.com/4kxhIiA)"
      }
    },
    {
      "segment_id": "eb51d107",
      "source_content": "**[Amplify the benefits of JWTs and Session Tokens](https://go.clerk.com/4kxhIiA)**",
      "source_content_hash": "7713a6926889395c20931bae2c8abbfe42049401433c0b5f3124cba105fd3ea2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[JWTとセッショントークンの利点を増幅](https://go.clerk.com/4kxhIiA)**"
      }
    },
    {
      "segment_id": "1862c5fe",
      "source_content": "Learn how leveraging the benefits of both session token authentication and JWTs results in the best of both approaches.",
      "source_content_hash": "8d1311d8ba60cb3b6d8d0f87f8c8bfd8f9496bfefc26b9295c3f0d315cbcc2b0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "セッショントークン認証とJWTの両方の利点を活用することで、両アプローチのベストを実現する方法を学びましょう。"
      }
    },
    {
      "segment_id": "647304fd",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "71169a2d",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "c1eaf30b",
      "source_content": "[![Nitro Modules](/emails/issues/201/nitro.jpg)](https://mrousavy.github.io/nitro/)",
      "source_content_hash": "a5374f4d06463c46301606c95b3ad3916214d1ee3843ee67b1b29d7c59c84b89",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Nitro Modules](/emails/issues/201/nitro.jpg)](https://mrousavy.github.io/nitro/)"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "**[Nitro Modules](https://mrousavy.github.io/nitro/)**",
      "source_content_hash": "ab5c9cb7a25d59c47e9f3e7d7fd5253bff333978f08753a6b511f83655bb50d6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Nitro Modules](https://mrousavy.github.io/nitro/)**"
      }
    },
    {
      "segment_id": "a81544fd",
      "source_content": "Marc Rousavy finally released his long-awaited framework for creating very fast native modules with a great DX. It is based on Nitrogen, a code generator that generates type-safe C++/Swift/Kotlin bindings from a TypeScript interface. Many TypeScript types are supported. Unlike other module solutions, it is able to bridge directly to Swift and Kotlin (from C++). A simple benchmark shows that Nitro Modules outperform ExpoModules and TurboModules on a simple operation. So far the community feedback from early adopters has been very positive, notably William Candillion using it on react-native-wgpu. Also worth reading [Brent Vatne’s comment](https://x.com/notbrent/status/1834647244089307279) for why they didn’t adopt direct Swift C++ Interop in Expo modules (at least for now).",
      "source_content_hash": "84e6e74698d177910e32520758ffdd928d209497ab1053625c8f122c61472ab4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Marc Rousavyが待望の高速ネイティブモジュール作成フレームワークを遂にリリースしました。TypeScriptインターフェースから型安全なC++/Swift/Kotlinバインディングを生成するコードジェネレーター「Nitrogen」を基盤としており、多くのTypeScript型がサポートされています。他のモジュールソリューションと異なり、SwiftとKotlinに直接ブリッジ可能です（C++経由）。シンプルなベンチマークでは、Nitro ModulesがExpoModulesやTurboModulesを性能で上回る結果を示しています。これまでのところ、react-native-wgpuで使用するWilliam Candillionなど早期採用者からのコミュニティフィードバックは非常に良好です。[Brent Vatneのコメント](https://x.com/notbrent/status/1834647244089307279)も一読の価値あり（現時点でExpo modulesがSwift C++相互運用を採用しなかった理由について）。"
      }
    },
    {
      "segment_id": "0c6c4220",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "1b8037f4",
      "source_content": "* 💸 [React Native Mastery - The only course you need to Master React Native & Expo](https://notjust.dev/react-native-mastery?utm_source=twir\\&utm_medium=email)\n* 🐦 [React Native Skia running on WebGPU Canvas](https://x.com/wcandillon/status/1834245607906496888): Great demo but more importantly explains the intention to implement a generic Canvas API for React Native, similar to the one available on the web.\n* 🐦 [React Native WebGPU + React Three Fiber demo](https://x.com/wcandillon/status/1834901444320801032)\n* 📜 [Shaping the Future of Super Apps in React Native](https://www.callstack.com/blog/shaping-the-future-of-super-apps-in-react-native): Callstack explains why they bet on Rspack, Re.Pack and Module Federation v2 to implement Super Apps. They also announced a new partnership with Zephyr Cloud to integrate this platform into the React Native ecosystem, a SaaS making it easier to manage federated apps. Note that [Re.Pack 5.0 alpha](https://github.com/callstack/repack/releases/tag/%40callstack%2Frepack%405.0.0-alpha.0) is out with Rspack support, building 5x faster than Webpack.\n* 📜 [React Native Layout components](https://kyleshevlin.com/snippets/react-native-layout-components/): I also like this pattern of exposing layout style as props, and would probably use it to create a React Native design system.\n* 📜 [5 Ways to Manage Focus in React Native TV Apps](https://www.reactnativetv.com/blog/five-ways-of-managing-focus)\n* 📜 [Expo Go vs Development Builds: Which should you use?](https://expo.dev/blog/expo-go-vs-development-builds)\n* 📦 [React Native 0.76 RC1](https://github.com/facebook/react-native/releases/tag/v0.76.0-rc.1): This one has stable support for CSS boxShadow and filter! Note it seems even more CSS features are in the pipeline (mix-blend-mode, isolate, outline…).\n* 📦 [Swift 6 - Concurrency memory safety, Typed throws, C++ interop, Foundation, testing](https://www.swift.org/blog/announcing-swift-6/)\n* 📦 [React Native VisionOS 0.76 RC.0 - React Native debugger support](https://github.com/callstack/react-native-visionos/releases/tag/v0.76.0-rc.0-visionos)\n* 📦 [Lottie React Native 7.0 - VisionOS, XCode 16, require 0.73+, no major breaking change](https://github.com/lottie-react-native/lottie-react-native/releases/tag/v7.0.0)\n* 📦 [Sonner-Native - An opinionated toast component for React Native (port of Sonner)](https://github.com/gunnartorfis/sonner-native)\n* 📦 [React Native Testing Library 12.7 - Simulate native state for TextInputs/ScrollView, Switch toBeChecked(), match Image with `alt` prop](https://github.com/callstack/react-native-testing-library/releases/tag/v12.7.2)\n* 📦 [React Native Iconify 2.0 - dynamci imports, Next.js + Vite support, variables](https://github.com/oktaysenkan/react-native-iconify/releases/tag/v2.0.0)\n* 🎥 [Reactiive - Animated Bar Chart with React Native (Reanimated)](https://www.youtube.com/watch?v=RO3qutJhU_Y)\n* 🎥 [Simon Grimm - Can Cursor AI build my React Native App?](https://www.youtube.com/watch?v=5Y_t6NRl_xI)\n* 🎙️ [RNR 307 - React Universe Recap](https://www.reactnativeradio.com/episodes/rnr-307-react-universe-recap)",
      "source_content_hash": "87278a9a46794af7e62e321a6dae788c99b18572b45d17d17fd33338b4675fc4",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 💸 [React Native Mastery - React NativeとExpoをマスターする唯一のコース](https://notjust.dev/react-native-mastery?utm_source=twir\\&utm_medium=email)\n* 🐦 [React Native SkiaがWebGPU Canvas上で動作](https://x.com/wcandillon/status/1834245607906496888): 素晴らしいデモですが、より重要なのは、ウェブで利用可能なものと同様の汎用Canvas APIをReact Nativeに実装する意図が説明されている点です。\n* 🐦 [React Native WebGPU + React Three Fiberデモ](https://x.com/wcandillon/status/1834901444320801032)\n* 📜 [React Nativeにおけるスーパーアプリの未来を形作る](https://www.callstack.com/blog/shaping-the-future-of-super-apps-in-react-native): Callstackは、スーパーアプリを実装するためにRspack、Re.Pack、Module Federation v2に賭けた理由を説明しています。また、React Nativeエコシステムにこのプラットフォームを統合するための新しいパートナーシップをZephyr Cloudと発表しました。これは、フェデレーテッドアプリを管理しやすくするSaaSです。[Re.Pack 5.0 alpha](https://github.com/callstack/repack/releases/tag/%40callstack%2Frepack%405.0.0-alpha.0)がリリースされ、Rspackをサポートし、Webpackよりも5倍高速にビルドできるようになりました。\n* 📜 [React Nativeのレイアウトコンポーネント](https://kyleshevlin.com/snippets/react-native-layout-components/): レイアウトスタイルをプロップとして公開するこのパターンも気に入っており、React Nativeデザインシステムを作成する際に使用するでしょう。\n* 📜 [React Native TVアプリでフォーカスを管理する5つの方法](https://www.reactnativetv.com/blog/five-ways-of-managing-focus)\n* 📜 [Expo Go vs 開発ビルド: どちらを使うべきか？](https://expo.dev/blog/expo-go-vs-development-builds)\n* 📦 [React Native 0.76 RC1](https://github.com/facebook/react-native/releases/tag/v0.76.0-rc.1): このバージョンではCSSのboxShadowとfilterが安定サポートされました！さらに多くのCSS機能（mix-blend-mode、isolate、outlineなど）が進行中であるようです。\n* 📦 [Swift 6 - 並行処理のメモリ安全性、型付きスロー、C++相互運用、Foundation、テスト](https://www.swift.org/blog/announcing-swift-6/)\n* 📦 [React Native VisionOS 0.76 RC.0 - React Nativeデバッガーサポート](https://github.com/callstack/react-native-visionos/releases/tag/v0.76.0-rc.0-visionos)\n* 📦 [Lottie React Native 7.0 - VisionOS、XCode 16、0.73以上必須、大きな破壊的変更なし](https://github.com/lottie-react-native/lottie-react-native/releases/tag/v7.0.0)\n* 📦 [Sonner-Native - React Native向けの意見のあるトーストコンポーネント（Sonnerの移植）](https://github.com/gunnartorfis/sonner-native)\n* 📦 [React Native Testing Library 12.7 - TextInput/ScrollViewのネイティブ状態をシミュレート、Switch toBeChecked()、`alt`プロップでImageをマッチ](https://github.com/callstack/react-native-testing-library/releases/tag/v12.7.2)\n* 📦 [React Native Iconify 2.0 - 動的インポート、Next.js + Viteサポート、変数](https://github.com/oktaysenkan/react-native-iconify/releases/tag/v2.0.0)\n* 🎥 [Reactiive - React Nativeでアニメーション付き棒グラフ（Reanimated）](https://www.youtube.com/watch?v=RO3qutJhU_Y)\n* 🎥 [Simon Grimm - Cursor AIは私のReact Nativeアプリを構築できるか？](https://www.youtube.com/watch?v=5Y_t6NRl_xI)\n* 🎙️ [RNR 307 - React Universe Recap](https://www.reactnativeradio.com/episodes/rnr-307-react-universe-recap)"
      }
    },
    {
      "segment_id": "44f53186",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "8f1c1cd6",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "c7ff42af",
      "source_content": "* 👀 [TypeScript 5.7 Iteration Plan](https://github.com/microsoft/TypeScript/issues/59905)\n* 👀 [Web Features Explorer - A release note for the web platform](https://patrickbrosset.com/articles/2024-09-04-a-release-note-for-the-web-platform/)\n* 📜 [Understanding Concurrency, Parallelism and JS](https://www.rugu.dev/en/blog/concurrency-and-parallelism/)\n* 📦 [date-fns 4.0 - First-class time zones support](https://blog.date-fns.org/v40-with-time-zone-support/)\n* 📦 [Chokidar 4.0 - Shrink 13 deps to 1 dep, native TS, CJS+ESM, require Node.js 14](https://github.com/paulmillr/chokidar/releases/tag/4.0.0)\n* 📦 [Node 22.9 - getCallSite API](https://nodejs.org/en/blog/release/v22.9.0)\n* 📦 [Safari 18.0 - View Transitions, Style Queries, Animate display, URL.parse()...](https://webkit.org/blog/15865/webkit-features-in-safari-18-0/)\n* 📦 [Hono 4.6 - Context Storage Middleware (AsyncLocalStorage)](https://github.com/honojs/hono/releases/tag/v4.6.0)\n* 📦 [Biome 1.9 - Stable CSS and GraphQL formatter/linter, `.editorconfig`](https://biomejs.dev/blog/biome-v1-9/)",
      "source_content_hash": "2e05c218194c5f03c310afceff35f27b02fd03a726cdfdce9c1810f65103705e",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 👀 [TypeScript 5.7 イテレーションプラン](https://github.com/microsoft/TypeScript/issues/59905)\n* 👀 [Web Features Explorer - Webプラットフォームのリリースノート](https://patrickbrosset.com/articles/2024-09-04-a-release-note-for-the-web-platform/)\n* 📜 [並行性、並列性とJavaScriptの理解](https://www.rugu.dev/en/blog/concurrency-and-parallelism/)\n* 📦 [date-fns 4.0 - タイムゾーンを第一級サポート](https://blog.date-fns.org/v40-with-time-zone-support/)\n* 📦 [Chokidar 4.0 - 依存関係を13から1に削減、ネイティブTSサポート、CJS+ESM、Node.js 14以上必須](https://github.com/paulmillr/chokidar/releases/tag/4.0.0)\n* 📦 [Node 22.9 - getCallSite API追加](https://nodejs.org/en/blog/release/v22.9.0)\n* 📦 [Safari 18.0 - View Transitions、Style Queries、Animate display、URL.parse()...](https://webkit.org/blog/15865/webkit-features-in-safari-18-0/)\n* 📦 [Hono 4.6 - Context Storage Middleware (AsyncLocalStorage)追加](https://github.com/honojs/hono/releases/tag/v4.6.0)\n* 📦 [Biome 1.9 - CSSとGraphQLのフォーマッター/リンターが安定版に、`.editorconfig`サポート](https://biomejs.dev/blog/biome-v1-9/)"
      }
    },
    {
      "segment_id": "8bc5aad7",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "dd4905a4",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "17b50e81",
      "source_content": "[![alt](/emails/issues/201/meme.jpg)](https://x.com/sophiebits/status/1836272297801585041)",
      "source_content_hash": "e0a0d0a3e17e4c09ea1f74a4e7e861a909abeae9c6034564b4609db5f5dfa023",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/201/meme.jpg)](https://x.com/sophiebits/status/1836272297801585041)"
      }
    },
    {
      "segment_id": "719d3997",
      "source_content": "[![alt](/emails/issues/201/meme2.jpg)](https://x.com/thymikee/status/1831602712577733035)",
      "source_content_hash": "246ef45c53cb0bc54efc8167f27230c26000d45c68250d6fbce26da394e075b5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/201/meme2.jpg)](https://x.com/thymikee/status/1831602712577733035)"
      }
    },
    {
      "segment_id": "42d9ca67",
      "source_content": "[![alt](/emails/issues/201/meme3.jpg)](https://x.com/sebastienlorber/status/1833145461328244774)",
      "source_content_hash": "3ef875f18191b367d11523384d6ebc690fb467b02871f2cdfc21d4e0300c78fa",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![alt](/emails/issues/201/meme3.jpg)](https://x.com/sebastienlorber/status/1833145461328244774)"
      }
    },
    {
      "segment_id": "619c3209",
      "source_content": "See ya! 👋",
      "source_content_hash": "517b37004b38f06801a35a9ca72a37d8c5ee185d507f65ca8d864ece0d0170ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "それではまた！ 👋"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/201/index.mdx",
  "last_updated_timestamp": "2025-06-12T01:22:19.685250+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "cc7202a23f0a8f037369b3797b9256b165be45d76958975ec2044f90cc0c7b14"
  }
}