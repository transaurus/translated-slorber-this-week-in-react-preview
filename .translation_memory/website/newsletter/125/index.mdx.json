{
  "source_file_path_relative_to_docusaurus_root": "newsletter/125/index.mdx",
  "source_file_content_hash": "d5ed9687af714b45cee4878ec6c59df8c7be188976ffd55c20efd0a47b4c61de",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /125\ntitle: \"This Week In React #125: tRPC, T3, Remix, Zustand, Server Components, Drag & Drop, Forms, Gatsby, Remotion, React-Native, Skia...\"\nauthors: [slorber]\ndate: 11-22-2022\n---",
      "source_content_hash": "24d7397a6bb6899b7402707ab11d8dd8e8e6638bbe00b0faea892394a087e860",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Hi everyone!",
      "source_content_hash": "74f0ad91d86b741b73b5f7286d6fbc16b75d9684d1474eb706eb0bed617ae030",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "みなさん、こんにちは！"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "This week is **[Black Friday](/black-friday)**. I created a page with the best deals for a React dev. I already found some of them, but some are not announced yet, so come back on Friday ;)",
      "source_content_hash": "6c42a11e44cbd7a48ad940e431b853ddc28cecb9f8d5f6e7fdae15865e7a9497",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "今週は**[ブラックフライデー](/black-friday)**です。React開発者向けのお得な情報をまとめたページを作成しました。すでにいくつか見つけていますが、まだ発表されていないものもあるので、金曜日にまたチェックしてください ;)"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "[![Black Friday 2022 Banner](/img/BLACK_FRIDAY_2022_v2.png)](/black-friday)",
      "source_content_hash": "5660d28161ab1ad15ba79b65a0c716e90c9730c11cfa47b8dd7777e22eaa7fe2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Black Friday 2022 Banner](/img/BLACK_FRIDAY_2022_v2.png)](/black-friday)"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "I finally have the opportunity to put tRPC in the spotlight, with official releases and a great article comparing it to GraphQL!",
      "source_content_hash": "5dc3b926dce89d7a4105dfb8ea9a911c23f8a1019b015eb130b2980fadd1663b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ついにtRPCをスポットライトで紹介する機会が訪れました。公式リリースとGraphQLとの比較記事が素晴らしいです！"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "We also have some great Remix-related content in general.",
      "source_content_hash": "8d8278b79316122720c9b5529abe93237348db3701098abd9799143706345228",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "また、Remix関連の素晴らしいコンテンツもいくつかあります。"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "I like the direction React-Native takes!",
      "source_content_hash": "4036a575000429e2357413cb5625eb15025dbdc71c247778d3b44f41d502c8de",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React-Nativeの方向性も気に入っています！"
      }
    },
    {
      "segment_id": "1acb9a05",
      "source_content": "Don't forget to fill out the [State Of JS](https://survey.devographics.com/survey/state-of-js/2022) survey! Glad Docusaurus made it this year. Feel free to suggest the newsletter for the resources 😏 with some luck it will be featured next year 🙌",
      "source_content_hash": "dbe55afb8b537873f278919010f0502e771e25283cafabe56c637f497f7b021d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[State Of JS](https://survey.devographics.com/survey/state-of-js/2022)の調査にぜひご参加ください！今年はDocusaurusが選ばれました。ニュースレターをリソースとして提案していただければ、来年は掲載されるかもしれません🙌"
      }
    },
    {
      "segment_id": "ea978e4d",
      "source_content": "<!-- truncate -->",
      "source_content_hash": "2f8566552e3b92233817e9029faa608a0a7bde771612eb57367d8dad692fdcb4",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_ea978e4d"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "source_content_hash": "3beb2df9a1d25a34c6f82cb169843b859a52d0f47e9d2561f86f5ceb1ced8fac",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**💡 [このニュースレターをTwitterでチェック](https://slo.im/thread) - ビジュアルフォーマット🎨**"
      }
    },
    {
      "segment_id": "caf67047",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "cd6b8019",
      "source_content": "import Support from \"@site/newsletter/_support.mdx\";",
      "source_content_hash": "975eab953a89007801994cce815a49a9eaf91e0d762f605383f3f9df95d14355",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_cd6b8019"
      }
    },
    {
      "segment_id": "599822a5",
      "source_content": "<Support />",
      "source_content_hash": "ccf388701b7274f8813ca04572ee33d7fea8a1765c79b588913ef27778ce9f8e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_599822a5"
      }
    },
    {
      "segment_id": "2b88bb9d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "a1b3d8cb",
      "source_content": "## 💸 Sponsor {#sponsor1}",
      "source_content_hash": "b0c7ddd1935ba7d1cc26f8b0a8c6a2e57ae0f17fca3daf2287090cc4f69266af",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor1}"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "[![FlyCode Makes React Apps Editable without coding, Git based](/emails/issues/124/flycode.jpg)](https://bit.ly/3UPwAoJ)",
      "source_content_hash": "b1c253f9a00e87fb27290d2b708379ae2c003b9fb3c37dbf215926813efd1bc8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![FlyCode Makes React Apps Editable without coding, Git based](/emails/issues/124/flycode.jpg)](https://bit.ly/3UPwAoJ)"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "**[FlyCode Makes React Apps Editable without coding, Git based](https://bit.ly/3UPwAoJ)**",
      "source_content_hash": "be0008c644c3577cba86de728a53d8c02539af2b4374d8c985b4b4d7109cc468",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[FlyCode Makes React Apps Editable without coding, Git based](https://bit.ly/3UPwAoJ)**"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "[FlyCode](https://bit.ly/3wWSi00) (YC S22) makes React web apps editable in minutes so Product and UX teams can iterate and release products faster, so they don't have to wait on (or consume) developer time.",
      "source_content_hash": "bbc101671f92785b8d72decafab66d491ddfe3120e508b897b8aef31b9c6c08a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[FlyCode](https://bit.ly/3wWSi00) (YC S22)は、Reactウェブアプリを数分で編集可能にし、プロダクトチームとUXチームが迅速に反復・リリースできるようにします。これにより、開発者の時間を待つ（または消費する）必要がなくなります。"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "FlyCode reads your regular React code and finds Texts, Images, Design tokens and Analytics event, then it let's non-coders collaborate and edit them and send back a pull request (they don't need access to GitHub!)",
      "source_content_hash": "b0ca824c79705290430c561efbfcf98429b8f4bc63a90163188455e0ba905119",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "FlyCodeは通常のReactコードを読み取り、テキスト、画像、デザイントークン、分析イベントを見つけます。その後、非エンジニアが協力して編集し、プルリクエストを送信できるようにします（GitHubへのアクセスは不要です！）"
      }
    },
    {
      "segment_id": "aa83231c",
      "source_content": "* Saves development time\n* No code integration, it just reads your code!\n* GitHub based, a bot is scanning the code and creates pull requests\n* Use your own stack and components\n* Retain codebase ownership",
      "source_content_hash": "89eeeec285221e82fbb0cbcc28ac9fbc90be22ecaf0c14208cc29eb955fa4b2d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 開発時間の節約\n* コード不要の統合、コードを読み取るだけ！\n* GitHubベース、ボットがコードをスキャンしてプルリクエストを作成\n* 独自のスタックとコンポーネントを使用可能\n* コードベースの所有権を保持"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "You can get started here: [flycode.com/developers](https://www.flycode.com/developers)",
      "source_content_hash": "170cfd801b0555f2b7855462fb99c62035d2b35b7721da4451de25d7460726a7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "こちらから始められます: [flycode.com/developers](https://www.flycode.com/developers)"
      }
    },
    {
      "segment_id": "e0a17c0d",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "60410af6",
      "source_content": "## ⚛️ React {#react}",
      "source_content_hash": "2145fe1efd741f148630db06a428a5b42620bb96ca154c435c71eebb891d0699",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## ⚛️ React {#react}"
      }
    },
    {
      "segment_id": "b9aaa519",
      "source_content": "[![tRPC 10](/emails/issues/125/trpc10.jpg)](https://trpc.io/blog/announcing-trpc-10)",
      "source_content_hash": "8e13ff304b9d487426561260d1b87361c20499ae6e8bb72cd93a41922793cad9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![tRPC 10](/emails/issues/125/trpc10.jpg)](https://trpc.io/blog/announcing-trpc-10)"
      }
    },
    {
      "segment_id": "e536ea0d",
      "source_content": "**[tRPC 10](https://trpc.io/blog/announcing-trpc-10)**",
      "source_content_hash": "d74985cfd5f8252c5f0094095cddc2f9eb2a23f65b84add9c0cf794e37816a43",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[tRPC 10](https://trpc.io/blog/announcing-trpc-10)**"
      }
    },
    {
      "segment_id": "40158b4b",
      "source_content": "Nice refactor of tRPC which greatly improves DX and IDE support. This library that facilitates typesafe backend calls is gaining more and more followers. It can be easily used in the React ecosystem thanks to the integration packages (Next.js, React-Query...). I love the tagline \"Move Fast and Break Nothing\" 😄",
      "source_content_hash": "b151d2825a103dc254ff441a0089bad5fc420f5a3e1c18f5bd036c8283540c29",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "tRPCの素晴らしいリファクタリングで、DXとIDEサポートが大幅に改善されました。型安全なバックエンド呼び出しを容易にするこのライブラリは、ますます多くの支持者を獲得しています。統合パッケージ（Next.js、React-Queryなど）のおかげで、Reactエコシステムで簡単に使用できます。「Move Fast and Break Nothing」というキャッチフレーズが気に入っています😄"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "To understand the idea, I recommend reading [Why we ditched GraphQL for tRPC](https://echobind.com/post/why-we-ditched-graphql-for-trpc). Alex explains why they replaced GraphQL with tRPC in their [Bison](https://github.com/echobind/bisonapp) starter, in a React context. tRPC requires much less boilerplate, TypeScript codegen and JS bundle, while improving DX, IDE support and simplifying cache management. The way to handle over-fetching is different: you should not hesitate to create a new procedure. tRPC is ideal for a full-stack Node.js app in TypeScript with co-located backend/frontend code (Next.js for example). GraphQL remains a good solution to create a public API exposed to partners who do not necessarily use JavaScript and yet want to benefit from codegen (OpenAPI is also a good solution for this).",
      "source_content_hash": "3c82af21fcaf0cd1cda462efafdbe9808eeaa644cf80060144e6e7b50bb6a274",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "アイデアを理解するために、[Why we ditched GraphQL for tRPC](https://echobind.com/post/why-we-ditched-graphql-for-trpc)を読むことをお勧めします。Alexは、Reactコンテキストで[Bison](https://github.com/echobind/bisonapp)スターターのGraphQLをtRPCに置き換えた理由を説明しています。tRPCは、ボイラープレート、TypeScriptコード生成、JSバンドルを大幅に削減し、DXとIDEサポートを改善し、キャッシュ管理を簡素化します。過剰なフェッチングの処理方法は異なります：新しい手順を作成することを躊躇しないでください。tRPCは、バックエンド/フロントエンドコードが同じ場所にある（例えばNext.js）TypeScriptのフルスタックNode.jsアプリに最適です。GraphQLは、JavaScriptを使用しないパートナーに公開する公開APIを作成するための良いソリューションであり、コード生成の恩恵を受けたい場合に適しています（OpenAPIもこのための良いソリューションです）。"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "I take this opportunity to also mention [T3-App](https://create.t3.gg/), an end-to-end typesafe stack for Next.js based on tRPC, Prisma, Tailwind... It greatly helped tRPC grow in popularity this year, and now has an official docs site. Its [tRPC tdocs](https://create.t3.gg/en/usage/trpc) explain well the advantages compared to a classic Next.js Route API. See also [create-t3-turbo](https://github.com/t3-oss/create-t3-turbo): a Turborepo monorepo with Next.js + Expo, both using tRPC.",
      "source_content_hash": "3d6d7763a999ae83e13735a0df53e8dcdf92aac4e2c5c2f7d736e712feca02e4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "この機会に[T3-App](https://create.t3.gg/)も紹介します。これはtRPC、Prisma、Tailwindなどを基にしたNext.js向けのエンドツーエンド型安全スタックです。今年tRPCの人気を大きく押し上げ、公式ドキュメントサイトも立ち上げました。[tRPCのドキュメント](https://create.t3.gg/en/usage/trpc)では、従来のNext.js Route APIとの比較による利点がよく説明されています。[create-t3-turbo](https://github.com/t3-oss/create-t3-turbo)も参照してください：Next.jsとExpoの両方でtRPCを使用したTurborepoモノレポです。"
      }
    },
    {
      "segment_id": "e874d9e7",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "06e24cc0",
      "source_content": "[![Working with Zustand](/emails/issues/125/zustand.jpg)](https://tkdodo.eu/blog/working-with-zustand)",
      "source_content_hash": "7e92f46f8483ac6646557131a0305b737e3317b5a0c64e07c5d02f30f0af480f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Zustandでの作業](/emails/issues/125/zustand.jpg)](https://tkdodo.eu/blog/working-with-zustand)"
      }
    },
    {
      "segment_id": "7f71ff2a",
      "source_content": "**[Working with Zustand](https://tkdodo.eu/blog/working-with-zustand)**",
      "source_content_hash": "0d47d6a96472d3020e1837bec159b2d3a7c10d2020ea49cec7863a81ad1ae3fc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[Zustandでの作業](https://tkdodo.eu/blog/working-with-zustand)**"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "Dominik reminds us where we come from in terms of state management. He explains why he likes Zustand, a minimalist and magic-free solution in the React philosophy. He gives some tips on how to best use it, like exposing custom hooks, using atomic selectors, or grouping actions in an immutable object. Good pragmatic tips I can definitively agree with!",
      "source_content_hash": "54bf3e8b3b37a2c002a02043d20577fe2dd1b3504d37d169a329e37326f7a436",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Dominikは、状態管理において私たちがどこから来たのかを思い出させてくれます。彼は、Reactの哲学に則ったミニマリストで魔法のないソリューションであるZustandを好む理由を説明しています。カスタムフックを公開する、アトミックセレクターを使用する、アクションを不変オブジェクトにグループ化するなど、最適な使用方法についてのヒントを提供しています。私も完全に同意できる実用的なアドバイスです！"
      }
    },
    {
      "segment_id": "7afb38f4",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "6cc549f2",
      "source_content": "[![Remix dual reponses](/emails/issues/125/remix-dual.png)](https://blog.jim-nielsen.com/2022/remix-alternate-timeline-of-web-dev/)",
      "source_content_hash": "cc6940af4ac85e438d4cc904c0daee1fb8b58a16f7a25dd87f14e2c42544fae2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![Remixのデュアルレスポンス](/emails/issues/125/remix-dual.png)](https://blog.jim-nielsen.com/2022/remix-alternate-timeline-of-web-dev/)"
      }
    },
    {
      "segment_id": "d0dd855b",
      "source_content": "**[Remix and the Alternate Timeline of Web Development](https://blog.jim-nielsen.com/2022/remix-alternate-timeline-of-web-dev/)**",
      "source_content_hash": "c66026ce2fca09baac873aa2474bbd4bebbbf0fe7180e932c9c801240f77ca8d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[RemixとWeb開発の代替タイムライン](https://blog.jim-nielsen.com/2022/remix-alternate-timeline-of-web-dev/)**"
      }
    },
    {
      "segment_id": "7736989b",
      "source_content": "Jim explains that Remix has taken a few steps back to rethink our entire frontend app model. With Remix, progressive enhancement support does not require writing our app in 2 different ways (client + server) like with other frameworks, as Remix routes can return both JSON and HTML from the same code.",
      "source_content_hash": "d76db16e9dc0576b5339ea24c76468429e03399273740e1f40cc0aa8d7c064af",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Jimは、Remixがフロントエンドアプリのモデル全体を再考するために数歩後退したと説明しています。Remixでは、プログレッシブエンハンスメントのサポートのために、他のフレームワークのようにクライアントとサーバーの2つの異なる方法でアプリを書く必要がありません。Remixのルートは同じコードからJSONとHTMLの両方を返すことができるからです。"
      }
    },
    {
      "segment_id": "678c3938",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "a1fa5396",
      "source_content": "[![Taming the dragon: Accessible drag and drop](/emails/issues/125/dnd.jpg)](https://react-spectrum.adobe.com/blog/drag-and-drop.html)",
      "source_content_hash": "e091f58fb01db9fb8b32495707b711a915be7e10a0b2a795655108b5310bc6fa",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![ドラゴンの飼い慣らし：アクセシブルなドラッグ＆ドロップ](/emails/issues/125/dnd.jpg)](https://react-spectrum.adobe.com/blog/drag-and-drop.html)"
      }
    },
    {
      "segment_id": "ec619944",
      "source_content": "**[Taming the dragon: Accessible drag and drop](https://react-spectrum.adobe.com/blog/drag-and-drop.html)**",
      "source_content_hash": "fd9ab8673cb80a7cf9231b60787ed0fb0a6c956226ec3aa5ff9a116e6668dad1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[ドラゴンの飼い慣らし：アクセシブルなドラッグ＆ドロップ](https://react-spectrum.adobe.com/blog/drag-and-drop.html)**"
      }
    },
    {
      "segment_id": "2547a6bb",
      "source_content": "Devon (Adobe) just announced the release of accessible drag & drop hooks for React-Aria and React-Spectrum. He explains how the keyboard and screen reader support works to allow users to select an element, and find potential targets with Tab, or the mobile experience. All this with many demos. It feels once again that there is a lot of work behind this React-Aria API, which is the first to try to solve this complex problem.",
      "source_content_hash": "049e6b77d39a23786052745572a4b9dfc399dc2737a9c097aac8f96201a9af39",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "Devon（Adobe）は、React-AriaとReact-Spectrum向けのアクセシブルなドラッグ＆ドロップフックのリリースを発表しました。彼は、要素を選択し、Tabで潜在的なターゲットを見つける、またはモバイル体験を可能にするためのキーボードとスクリーンリーダーのサポートの仕組みを説明しています。多くのデモと共に。この複雑な問題を解決しようとする最初のAPIであるReact-Aria APIの背後には多くの作業があると感じます。"
      }
    },
    {
      "segment_id": "233bb60e",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "2fc7ec55",
      "source_content": "* 📖 [Beta docs update - createRef, PureComponents, useDebugValue](https://twitter.com/dan_abramov/status/1593007695703207936): Dan Abramov is close to the end of his documentation work, and the new doc will probably be officially released soon.\n* 📜 [Fetching and caching Supabase data in Next.js 13 Server Components](https://supabase.com/blog/fetching-and-caching-supabase-data-in-next-js-server-components): shows how easily React Server Components can be used to make requests on a cloud/serverless DB, and also gives some good Next.js caching tips to reduce response times.\n* 📜 [Conditionally Render Fields Using React Hook Form](https://echobind.com/post/conditionally-render-fields-using-react-hook-form): how to use the watch and register/unregister functions to manage a conditional field\n* 📜 [Offline dev and testing for Remix](https://github.com/pcattori/blog/blob/main/posts/offline-dev-and-testing-for-remix/index.md): Pedro explains why he likes Mock Service Worker in dev/test and explains the way to integrate it with Remix.\n* 📜 [Migrate from Webpack to Remix](https://remix.run/blog/migrate-from-webpack): the team is working on a Webpack compiler for Remix to facilitate incremental migration.\n* 📜 [Remix site with Valhalla](https://www.gatsbyjs.com/blog/what-is-gatsbys-valhalla-content-hub/): Paul introduce Valhalla, the new Gatsby Cloud data layer, and then explains how it can be used with Remix. Valhalla exposes a public GraphQL API. The demo calls this API from a Remix loader via Urql. It looks like it's still the early days of Valhalla, but really curious to see how all this unfold.\n* 📜 [Gatsby - Using the Slice API for Internationalization (i18n)](https://www.gatsbyjs.com/blog/using-the-slice-api-for-internationalization-i18n/)\n* 📜 [useReducer or XState?](https://swizec.com/blog/reader-question-usereducer-or-xstate/)\n* 🎥 [React Brussels Playlist](https://www.youtube.com/watch?v=uZnXwuhYZBc\\&list=PL53Z0yyYnpWjIoe0wNozVbuRXOnVcETPw): my Belgian friends have published the videos of the conference. I liked the [keynote](https://www.youtube.com/watch?v=uZnXwuhYZBc\\&list=PL53Z0yyYnpWjIoe0wNozVbuRXOnVcETPw\\&index=2) where Tejas explains how React meta-frameworks use the latest React 18 features like Suspense for data fetching or transitions.\n* 🎥 [RIP React Router?](https://www.youtube.com/watch?v=LVzG3nncE4M): highlights the great typesafe and DX properties of the brand new [TanStack Router](https://tanstack.com/router/v1)\n* 🎥 [Using Fonts in Next.js](https://www.youtube.com/watch?v=L8_98i_bMMA)\n* 📦 [Remotion 3.3](https://twitter.com/remotion_dev/status/1593156143249260544): no more need to install ffmpeg, various new packages (font, paths, noise, motion blur), and nice DX improvements.\n* 📦 [Openblocks - The Open Source Retool Alternative](https://github.com/openblocks-dev/openblocks)\n* 📦 [Jotai 1.10](https://twitter.com/jotaijs/status/1593647952672608257)",
      "source_content_hash": "03e117f3c81c2c397b423c52c7ae6e77896d02a9e19bb5d971d911b71bdf571b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 📖 [Betaドキュメント更新 - createRef、PureComponents、useDebugValue](https://twitter.com/dan_abramov/status/1593007695703207936): Dan Abramovのドキュメント作業が終盤に近づいており、新しいドキュメントが間もなく正式リリースされる予定です。\n* 📜 [Next.js 13サーバーコンポーネントでのSupabaseデータの取得とキャッシュ](https://supabase.com/blog/fetching-and-caching-supabase-data-in-next-js-server-components): Reactサーバーコンポーネントを使用してクラウド/サーバーレスDBにリクエストを行う方法と、Next.jsのキャッシュ活用によるレスポンス時間短縮のヒントを紹介。\n* 📜 [React Hook Formを使用した条件付きフィールドレンダリング](https://echobind.com/post/conditionally-render-fields-using-react-hook-form): watch関数とregister/unregister関数を使用して条件付きフィールドを管理する方法\n* 📜 [Remixのオフライン開発とテスト](https://github.com/pcattori/blog/blob/main/posts/offline-dev-and-testing-for-remix/index.md): Pedroが開発/テストでMock Service Workerを使用する利点とRemixとの統合方法を解説。\n* 📜 [WebpackからRemixへの移行](https://remix.run/blog/migrate-from-webpack): 段階的な移行を容易にするため、RemixチームがWebpackコンパイラを開発中。\n* 📜 [Valhallaを使用したRemixサイト](https://www.gatsbyjs.com/blog/what-is-gatsbys-valhalla-content-hub/): PaulがGatsby Cloudの新しいデータレイヤー「Valhalla」を紹介し、Remixとの連携方法を説明。Valhallaは公開GraphQL APIを提供し、デモではUrql経由でRemixローダーからAPIを呼び出しています。Valhallaはまだ初期段階ですが、今後の展開が注目されます。\n* 📜 [Gatsby - 国際化(i18n)のためのSlice API使用](https://www.gatsbyjs.com/blog/using-the-slice-api-for-internationalization-i18n/)\n* 📜 [useReducerかXStateか？](https://swizec.com/blog/reader-question-usereducer-or-xstate/)\n* 🎥 [React Brusselsプレイリスト](https://www.youtube.com/watch?v=uZnXwuhYZBc\\&list=PL53Z0yyYnpWjIoe0wNozVbuRXOnVcETPw): ベルギーのカンファレンス動画が公開されました。[基調講演](https://www.youtube.com/watch?v=uZnXwuhYZBc\\&list=PL53Z0yyYnpWjIoe0wNozVbuRXOnVcETPw\\&index=2)では、TejasがReact 18のSuspense（データ取得用）やtransitionsなどの最新機能をメタフレームワークがどのように活用しているかを解説しています。\n* 🎥 [React Routerに別れを？](https://www.youtube.com/watch?v=LVzG3nncE4M): 新登場の[TanStack Router](https://tanstack.com/router/v1)の優れた型安全性と開発者体験(DX)を紹介\n* 🎥 [Next.jsでのフォント使用](https://www.youtube.com/watch?v=L8_98i_bMMA)\n* 📦 [Remotion 3.3](https://twitter.com/remotion_dev/status/1593156143249260544): ffmpegのインストール不要化、新しいパッケージ（font、paths、noise、motion blur）の追加、開発者体験の改善など。\n* 📦 [Openblocks - Retoolのオープンソース代替](https://github.com/openblocks-dev/openblocks)\n* 📦 [Jotai 1.10](https://twitter.com/jotaijs/status/1593647952672608257)"
      }
    },
    {
      "segment_id": "488abec8",
      "source_content": "<SubscribeFormEmbed />",
      "source_content_hash": "2b5c5e42f4352c90b9647a9da7a0fb7ece8b8dc27440e42cdf85cbb6e1901b85",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_488abec8"
      }
    },
    {
      "segment_id": "04837130",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "d1f76d04",
      "source_content": "## 💸 Sponsor {#sponsor2}",
      "source_content_hash": "03846d29870cbb4676b304bf402d17aa134f1d4c27db780745c0252cf356bd40",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 💸 Sponsor {#sponsor2}"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "[![The React Native Show - a podcast series](/emails/issues/125/the-rn-show.jpg)](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)",
      "source_content_hash": "a21be61a8739e2862bd859f957b142434ceb9d673e3a4260a1383aedf9838f62",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![The React Native Show - ポッドキャストシリーズ](/emails/issues/125/the-rn-show.jpg)](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)"
      }
    },
    {
      "segment_id": "e9313fef",
      "source_content": "**[The React Native Show - a podcast series](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)**",
      "source_content_hash": "6ac5734aa19f3467e5e057665da7100c39e394c63f2a13e4f5b1370fb6f034b5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[The React Native Show - ポッドキャストシリーズ](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)**"
      }
    },
    {
      "segment_id": "1b4de6df",
      "source_content": "Since you are here, you surely like to stay up to date with the greatest React news ! 🔥 If you want to delve into React and React Native, play the latest episodes of **The React Native Show**:",
      "source_content_hash": "49bb1d1b37b57208b8f37662613f69e2719de47cd149e5d2540cac556027afcf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ここにいるということは、最新のReactニュースに興味があるはずです！🔥 ReactとReact Nativeについてさらに深く知りたい方は、**The React Native Show**の最新エピソードをチェックしてください："
      }
    },
    {
      "segment_id": "2ddd26d5",
      "source_content": "* [Module Federation](https://www.callstack.com/podcasts/module-federation?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React) in React Native, with Zack Jackson, maintainer of Webpack\n* [React Native New Architecture](https://www.callstack.com/podcasts/react-native-new-architecture-ep-17?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React), with Nicola Corti from Meta\n* [React Native at Microsoft](https://www.callstack.com/podcasts/react-native-at-microsoft-ep-16?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React), with Lorenzo Sciandra from Microsoft",
      "source_content_hash": "bf5fa36f4c379258db11c2a2bbd9456ab88e8ec8863178caa67aaaeac47c6634",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* WebpackのメンテナーであるZack Jacksonを迎えた[Module Federation](https://www.callstack.com/podcasts/module-federation?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React) in React Native\n* MetaのNicola Cortiを迎えた[React Native New Architecture](https://www.callstack.com/podcasts/react-native-new-architecture-ep-17?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)\n* MicrosoftのLorenzo Sciandraを迎えた[React Native at Microsoft](https://www.callstack.com/podcasts/react-native-at-microsoft-ep-16?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)"
      }
    },
    {
      "segment_id": "a6c928a1",
      "source_content": "**[The React Native Show](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)** is a podcast series hosted by Callstack. Each episode explores a different topic in detail. The host dives deep into every discussion with his guests - world experts in the field.",
      "source_content_hash": "8562271d16abb3418af7fb44df7833ee4acc73037358bc40679672a47aec6620",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[The React Native Show](https://www.callstack.com/podcast-react-native-show?utm_campaign=Podcast\\&utm_source=email\\&utm_content=This_Week_in_React)**は、Callstackがホストするポッドキャストシリーズです。各エピソードでは、異なるトピックを詳細に掘り下げます。ホストは、その分野の世界的な専門家であるゲストとともに、各ディスカッションを深く追求します。"
      }
    },
    {
      "segment_id": "43fd0c1b",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "23b96cc0",
      "source_content": "## 📱 React-Native {#react-native}",
      "source_content_hash": "e47537b9fd461d0e558bb123495dc21b5108001b90b1bc4843e80488afcd6c99",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 📱 React-Native {#react-native}"
      }
    },
    {
      "segment_id": "8fcdd6d4",
      "source_content": "**[\\[Reply\\] 2022: How can we improve React Native?](https://github.com/react-native-community/discussions-and-proposals/discussions/546)**",
      "source_content_hash": "d0044974561a80f63c5ce3d822fdd5cfd6e15be60bfea88110fb04d6fcbc3b57",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "**[\\[Reply\\] 2022: How can we improve React Native?](https://github.com/react-native-community/discussions-and-proposals/discussions/546)**"
      }
    },
    {
      "segment_id": "53aa2b95",
      "source_content": "The React-Native team has officially responded to the discussion on [how to improve React-Native](https://github.com/react-native-community/discussions-and-proposals/discussions/528). We learn many details about the roadmap. The investment on React-Native seems to be accelerating. The points I'm particularly interested in are:",
      "source_content_hash": "b2394d6acf5524df1be5489c8f6cb7b5257d0e4d3e82716c5a2dc14a999eea17",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React-Nativeチームは、[React Nativeの改善方法](https://github.com/react-native-community/discussions-and-proposals/discussions/528)に関するディスカッションに正式に回答しました。ロードマップに関する多くの詳細が明らかになりました。React-Nativeへの投資は加速しているようです。特に興味深いポイントは以下の通りです："
      }
    },
    {
      "segment_id": "d8460b5b",
      "source_content": "* Metro should catch up: swc, pnpm, symlinks, ESM support \"exports\"...\n* Yoga and CSS support will be improved: flex gap, boxShadow\\...\n* Cross-platform, unified APIs, React-Native-Web now under Meta ownership\n* DX improvements: debugging, stacktraces, sourcemaps, LogBox...",
      "source_content_hash": "6ac646fe9d6990f91796b26a71c528487cda0fec2de4ca4f8f7bc3cfbf8bd946",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* Metroの改善: swc、pnpm、シンボリックリンク、ESMサポート「exports」...\n* YogaとCSSサポートの向上: flex gap、boxShadow...\n* クロスプラットフォーム、統一API、Meta傘下のReact-Native-Web\n* DXの改善: デバッグ、スタックトレース、ソースマップ、LogBox..."
      }
    },
    {
      "segment_id": "b99d2cf6",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "292df6cb",
      "source_content": "* 🎨 [React-Native-Skia + VisionCamera Frame Processor demo](https://twitter.com/mrousavy/status/1592943223751999488): impressive demo that allows to use React-Native-Skia on VisionCamera frames. Allows for example to apply filters/shaders in real time without writing native code.\n* 📦 [React-Native-Skia 0.1.159](https://twitter.com/wcandillon/status/1593591452491194370): the library goes into beta, now rendering on the UI thread, greatly improving performances\n* 📦 [burnt – native toasts & alerts for react native](https://twitter.com/FernandoTheRojo/status/1593632122069291008): Fernando Rojo created his 1st native React-Native library based on Swift in less than a day, without any prior knowledge of Swift. This shows how easy [Expo Modules API](https://twitter.com/tsapeta/status/1593705970781356035) makes things!\n* 📦 [React-Native-Testing-Library v11.5](https://twitter.com/mdj_dev/status/1593250914965794817)\n* 📜 [Automatic args in React Native Storybook](https://dev.to/dannyhw/automatic-args-in-react-native-storybook-140a)\n* 🎥 [Path Gradients with Skia](https://www.youtube.com/watch?v=7SCzL-XnfUU)\n* 🎥 [Rolling Menu in React-Native Re-Animated 2](https://www.youtube.com/watch?v=sOKMytwWeKE)\n* 📖 [Expo Docs update - Universal apps tutorial](https://twitter.com/amanhimself/status/1593669242892988417)\n* 📊 [New Reanimated Shared Value implementation](https://twitter.com/kzzzf/status/1594095497123434497): improved performance through JSI call reduction\n* 📊 [React-Native Yoga Layout VS iOS alternatives](https://twitter.com/Baconbrix/status/1593561645858623488): the React-Native layout engine is quite fast!\n* 🐦 [Hirbod - \"the Layout Animation rewrite has been merged\"](https://twitter.com/nightstomp/status/1593207173496320000)\n* 🐦 [Jamon Holmgren - \"at this point there's very little reason *not* to use Expo\"](https://twitter.com/jamonholmgren/status/1593319397573394432)",
      "source_content_hash": "2758e2d1609dd954a65aba3a1398d73ba2dfbb9e317e390ed3ad9b24371244e0",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* 🎨 [React-Native-Skia + VisionCamera フレームプロセッサのデモ](https://twitter.com/mrousavy/status/1592943223751999488): VisionCameraのフレーム上でReact-Native-Skiaを使用できる印象的なデモ。ネイティブコードを書かずにリアルタイムでフィルター/シェーダーを適用する例などが可能。\n* 📦 [React-Native-Skia 0.1.159](https://twitter.com/wcandillon/status/1593591452491194370): ライブラリがベータ版に移行、UIスレッドでのレンダリングによりパフォーマンスが大幅に向上\n* 📦 [burnt – React Native向けネイティブトースト＆アラート](https://twitter.com/FernandoTheRojo/status/1593632122069291008): Fernando RojoがSwiftの知識なしで1日もかけずに初のネイティブReact Nativeライブラリを作成。[Expo Modules API](https://twitter.com/tsapeta/status/1593705970781356035)の簡便さを実証！\n* 📦 [React-Native-Testing-Library v11.5](https://twitter.com/mdj_dev/status/1593250914965794817)\n* 📜 [React Native Storybookでの自動args](https://dev.to/dannyhw/automatic-args-in-react-native-storybook-140a)\n* 🎥 [Skiaを使ったパスグラデーション](https://www.youtube.com/watch?v=7SCzL-XnfUU)\n* 🎥 [React-Native Re-Animated 2でのローリングメニュー](https://www.youtube.com/watch?v=sOKMytwWeKE)\n* 📖 [Expoドキュメント更新 - ユニバーサルアプリチュートリアル](https://twitter.com/amanhimself/status/1593669242892988417)\n* 📊 [Reanimated Shared Valueの新実装](https://twitter.com/kzzzf/status/1594095497123434497): JSI呼び出し削減によるパフォーマンス改善\n* 📊 [React-Native Yogaレイアウト vs iOS代替手段](https://twitter.com/Baconbrix/status/1593561645858623488): React Nativeのレイアウトエンジンは非常に高速！\n* 🐦 [Hirbod - 「Layout Animationの書き直しがマージされました」](https://twitter.com/nightstomp/status/1593207173496320000)\n* 🐦 [Jamon Holmgren - 「現時点でExpoを使わない理由はほとんどない」](https://twitter.com/jamonholmgren/status/1593319397573394432)"
      }
    },
    {
      "segment_id": "d4b679d6",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "55dc794c",
      "source_content": "## 🧑‍💻 Jobs {#jobs}",
      "source_content_hash": "64cde6166f05bd39337c21ca10f52b6613641f23e0c97e204de33d6857fa16ed",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🧑‍💻 Jobs {#jobs}"
      }
    },
    {
      "segment_id": "63565425",
      "source_content": "🧑‍💼 [**Product Engineer at Causal, Remote/London/NY, \\$150-250k**](https://jobs.lever.co/causal-app/4acaafbe-ef3d-45a6-bbe6-687c022d727c?lever-origin=applied\\&lever-source%5B%5D=thisweekinreact.com)",
      "source_content_hash": "619d259d5aa4a364626fc41610dcf9f3ae0955a2e964969486ddfee2f179dbdb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**Causal社 Product Engineer, リモート/ロンドン/NY, \\$150-250k**](https://jobs.lever.co/causal-app/4acaafbe-ef3d-45a6-bbe6-687c022d727c?lever-origin=applied\\&lever-source%5B%5D=thisweekinreact.com)"
      }
    },
    {
      "segment_id": "1496ef51",
      "source_content": "Causal is a Series A Startup (backed by Coatue/Accel) building an all-in-one tool for working with numbers and visualizing data. We're looking for strong React engineers who can solve difficult UX/performance challenges.",
      "source_content_hash": "20bfaa3d377f2ddf3a9abbf4f1ce455c376710731cb5f7e58785d6741fc6377f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "CausalはSeries Aスタートアップ（Coatue/Accel出資）で、数値処理とデータ可視化のオールインワンツールを開発中。困難なUX/パフォーマンス課題を解決できるReactエンジニアを募集。"
      }
    },
    {
      "segment_id": "dce16ab4",
      "source_content": "🧑‍💼 [**Callstack - Senior React Native Developer - Fully Remote, PLN 21-32k net on B2B, monthly**](https://www.callstack.com/senior-react-native-developer)",
      "source_content_hash": "6a76e4cede7e5d7fef90376d244177e3a889ea3b88ed1a9d60d116bb33a52f5b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**Callstack - シニアReact Native開発者 - 完全リモート, B2B月額PLN 21-32k net**](https://www.callstack.com/senior-react-native-developer)"
      }
    },
    {
      "segment_id": "6f08f877",
      "source_content": "Do you want to work on the world's most used apps? Would you like to co-create the React Native technology? Join the Callstack team of React & React Native leaders. Check our website for more details. We are looking forward to seeing your application - show us what you've got!",
      "source_content_hash": "d26d300a25c86c54931180669d1a8cce73f71a546a8457896fc0c835fb78d2d0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "世界で最も使われるアプリの開発に携わりたいですか？React Native技術の共創に興味は？React & React Nativeのリーダー集団であるCallstackチームに参加ください。詳細はウェブサイトをご確認の上、あなたの実力を示す応募をお待ちしています！"
      }
    },
    {
      "segment_id": "2dbfc5f7",
      "source_content": "🧑‍💼 [**G2i - 100% Remote React Native Jobs**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)",
      "source_content_hash": "5d3c54581f6c180e021405df5da2dff285c443814d1d5e6c5c09516b6002a38b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "🧑‍💼 [**G2i - 100%リモートReact Native求人**](https://twitter.com/gabe_g2i/status/1563204813881425926?s=20\\&t=ArRLC77BpRwXXCdx8fnUqw)"
      }
    },
    {
      "segment_id": "6b40e7a2",
      "source_content": "We have several roles open for developers focused on React Native! Pay is \\~160k plus 10% bonus. You must have production experience with RN and be based in the US. DM [@gabe\\_g2i](https://twitter.com/gabe_g2i) to learn more and don't forget to mention This Week in React.",
      "source_content_hash": "03109db05ba0c8c528483a4218dc3b2b0314cf5c6032f5eb3c7be604094658fd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "React Nativeにフォーカスした開発者向けに複数のポジションを開設中です！報酬は約160kドル＋10％のボーナス。RNの実務経験があり、米国在住であることが必須条件です。詳細は[@gabe_g2i](https://twitter.com/gabe_g2i)までDMでお問い合わせください。その際、This Week in Reactからの紹介であることをお忘れなく。"
      }
    },
    {
      "segment_id": "39f476dc",
      "source_content": "💡 [How to publish an offer?](https://thisweekinreact.com/sponsor)",
      "source_content_hash": "d58176524c2d7675bf008e7b635d056628a0d092fb0152d6bbdfb97f4239d273",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "💡 [スポンサー募集の方法は？](https://thisweekinreact.com/sponsor)"
      }
    },
    {
      "segment_id": "d619fa73",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "6ffd1ebe",
      "source_content": "## 🔀 Other {#other}",
      "source_content_hash": "69595cc39799880bc0d1fc8a3110e4c08af4c6092069c95b37b577cd95ab04c8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🔀 Other {#other}"
      }
    },
    {
      "segment_id": "ff048fb8",
      "source_content": "* [An Interactive Guide to Flexbox](https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/): great article by Josh Comeau, not to be read if you are hungry 😄\n* [Browsers, JSON, and FormData](https://blog.jim-nielsen.com/2022/browsers-json-formdata/): interesting ideas about progressive enhancement, which encourages creating APIS based on FormData rather than JSON. This speaks to me, and by the way my newsletter signup forms also work without JavaScript 🤗 The article is not React related but is written by Jim who works on Remix.\n* [Cloudflare Developer Week 2022 announcements](https://blog.cloudflare.com/icymi-developer-week-2022-announcements/): a lot of announcements. I especially like the possibility to make Puppeteer screenshots from a Worker edge: this can be useful for Remotion, or generate social previews in an efficient way, and compete with the new [Vercel's og image service](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation).\n* [Top-level promise handling in Node.js ES modules](https://www.stefanjudis.com/today-i-learned/top-level-promise-handling-in-node-js/): I discover this behavior of Node.js not hyper intuitive and the exit 13 code.\n* [State Of JavaScript 2022 Survey](https://survey.devographics.com/survey/state-of-js/2022): glad to see [Docusaurus making an entry](https://twitter.com/sebastienlorber/status/1594748405280116738) this year! I hope my newsletter will be in the resources next year, feel free to send it as a suggestion 😏\n* [The 2022 State of JavaScript Survey Is Now Open. Here's What's New](https://dev.to/sachagreif/take-the-2022-state-of-javascript-survey-5ap6)\n* [Prettier 2.8: improve --cache CLI option and TypeScript 4.9 satisfies operator!](https://prettier.io/blog/2022/11/23/2.8.0.html): good timing to adopt TS 4.9 (already supported in Babel)\n* [Web technology optimism hour](https://macwright.com/2022/11/18/optimism-updates.html)\n* [Movies app in 7 frameworks - which is fastest and why?](https://www.builder.io/blog/movies-app-in-7-frameworks-which-is-fastest-and-why)\n* [HTML Elements Visualized](https://julesblom.com/writing/html-elements)\n* [Complete rewrite of ESLint](https://twitter.com/slicknet/status/1594870586605391872)\n* [MPA View Transitions - First demo - Chrome canary](https://twitter.com/addyosmani/status/1592907811968626688)\n* [Mock Service Worker - Fetch API Support Beta](https://github.com/mswjs/msw/discussions/1464)\n* [What’s so great about functional programming anyway?](https://jrsinclair.com/articles/2022/whats-so-great-about-functional-programming-anyway/)\n* [Angular 15](https://blog.angular.io/angular-v15-is-now-available-df7be7f2f4c8)\n* [Nuxt 3.0](https://nuxt.com/v3)\n* [Playwright 1.28](https://github.com/microsoft/playwright/releases/tag/v1.28.0)\n* [Firefox 107](https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/107)\n* [Safari Technology Preview 158](https://webkit.org/blog/13584/release-notes-for-safari-technology-preview-158/)\n* [Assembly interpreter inside of TypeScript's type system](https://judehunter.dev/blog/assembly-interpreter-in-typescripts-type-system)\n* [On Migrating from Cypress to Playwright](https://mtlynch.io/notes/cypress-vs-playwright/)\n* [Node.js 18 available in AWS Lambda](https://aws.amazon.com/fr/blogs/compute/node-js-18-x-runtime-now-available-in-aws-lambda/)\n* [Build a More Secure Web using npm with Deno](https://deno.com/blog/a-more-secure-npm)\n* [From Bootstrapped to Venture-Backed: Nx Raises \\$8.6M](https://blog.nrwl.io/from-bootstrapped-to-venture-backed-nx-raises-8-6m-2ae2228eff76)\n* [Why you should never use px to set font-size in CSS](https://joshcollinsworth.com/blog/never-use-px-for-font-size)\n* [The Windows Subsystem for Linux is now generally available](https://devblogs.microsoft.com/commandline/the-windows-subsystem-for-linux-in-the-microsoft-store-is-now-generally-available-on-windows-10-and-11/)",
      "source_content_hash": "34299e3a404638fed03b636632baf154e6f02c31ddef8a4b9842522ab160ccc6",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "* [An Interactive Guide to Flexbox](https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/): Josh Comeauによる素晴らしい記事。お腹が空いている時は読まないようにしましょう 😄\n* [Browsers, JSON, and FormData](https://blog.jim-nielsen.com/2022/browsers-json-formdata/): プログレッシブエンハンスメントに関する興味深いアイデア。JSONではなくFormDataベースのAPI作成を推奨しています。個人的に共感できる内容で、ちなみに私のニュースレター登録フォームもJavaScriptなしで動作します 🤗 この記事はReact関連ではありませんが、Remixで働くJimによって書かれています。\n* [Cloudflare Developer Week 2022 announcements](https://blog.cloudflare.com/icymi-developer-week-2022-announcements/): 多数の発表がありました。特に気に入ったのは、Worker edgeからPuppeteerスクリーンショットを撮れる機能です。Remotionや効率的なソーシャルプレビュー生成に役立ち、新しい[VercelのOG画像サービス](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation)と競合する可能性があります。\n* [Top-level promise handling in Node.js ES modules](https://www.stefanjudis.com/today-i-learned/top-level-promise-handling-in-node-js/): Node.jsのこの挙動はあまり直感的ではなく、exitコード13について学びました。\n* [State Of JavaScript 2022 Survey](https://survey.devographics.com/survey/state-of-js/2022): [Docusaurusが今年初登場](https://twitter.com/sebastienlorber/status/1594748405280116738)したのを見て嬉しく思います！来年はこのニュースレターもリソースとして掲載されることを願っています。ぜひ提案として送ってください 😏\n* [The 2022 State of JavaScript Survey Is Now Open. Here's What's New](https://dev.to/sachagreif/take-the-2022-state-of-javascript-survey-5ap6)\n* [Prettier 2.8: improve --cache CLI option and TypeScript 4.9 satisfies operator!](https://prettier.io/blog/2022/11/23/2.8.0.html): TS 4.9を採用するのに良いタイミング（Babelですでにサポートされています）\n* [Web technology optimism hour](https://macwright.com/2022/11/18/optimism-updates.html)\n* [Movies app in 7 frameworks - which is fastest and why?](https://www.builder.io/blog/movies-app-in-7-frameworks-which-is-fastest-and-why)\n* [HTML Elements Visualized](https://julesblom.com/writing/html-elements)\n* [Complete rewrite of ESLint](https://twitter.com/slicknet/status/1594870586605391872)\n* [MPA View Transitions - First demo - Chrome canary](https://twitter.com/addyosmani/status/1592907811968626688)\n* [Mock Service Worker - Fetch API Support Beta](https://github.com/mswjs/msw/discussions/1464)\n* [What’s so great about functional programming anyway?](https://jrsinclair.com/articles/2022/whats-so-great-about-functional-programming-anyway/)\n* [Angular 15](https://blog.angular.io/angular-v15-is-now-available-df7be7f2f4c8)\n* [Nuxt 3.0](https://nuxt.com/v3)\n* [Playwright 1.28](https://github.com/microsoft/playwright/releases/tag/v1.28.0)\n* [Firefox 107](https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/107)\n* [Safari Technology Preview 158](https://webkit.org/blog/13584/release-notes-for-safari-technology-preview-158/)\n* [Assembly interpreter inside of TypeScript's type system](https://judehunter.dev/blog/assembly-interpreter-in-typescripts-type-system)\n* [On Migrating from Cypress to Playwright](https://mtlynch.io/notes/cypress-vs-playwright/)\n* [Node.js 18 available in AWS Lambda](https://aws.amazon.com/fr/blogs/compute/node-js-18-x-runtime-now-available-in-aws-lambda/)\n* [Build a More Secure Web using npm with Deno](https://deno.com/blog/a-more-secure-npm)\n* [From Bootstrapped to Venture-Backed: Nx Raises \\$8.6M](https://blog.nrwl.io/from-bootstrapped-to-venture-backed-nx-raises-8-6m-2ae2228eff76)\n* [Why you should never use px to set font-size in CSS](https://joshcollinsworth.com/blog/never-use-px-for-font-size)\n* [The Windows Subsystem for Linux is now generally available](https://devblogs.microsoft.com/commandline/the-windows-subsystem-for-linux-in-the-microsoft-store-is-now-generally-available-on-windows-10-and-11/)"
      }
    },
    {
      "segment_id": "2663a629",
      "source_content": "***",
      "source_content_hash": "596f4162a52f315b2ad0fa53fd30a2769d02a41ed7439123790966eee4ceb5cd",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "ja": "***"
      }
    },
    {
      "segment_id": "e29294bd",
      "source_content": "## 🤭 Fun {#fun}",
      "source_content_hash": "166530139247b303ad0d04e8034fd1df64222c87cf13c7acbb021f2245251698",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 🤭 Fun {#fun}"
      }
    },
    {
      "segment_id": "ebfad7e4",
      "source_content": "[![Life is short - Make sure to spend it arguing about JS frameworks with strangers on the internet](/emails/issues/125/meme.png)](https://twitter.com/fireship_dev/status/1587587531154989056)",
      "source_content_hash": "fc0e84398f10eefa1ec51138b96839d5e8ce7fce2e260e492c20deab657e0b4a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[![人生は短い - インターネットで見知らぬ人とJSフレームワークについて議論する時間を忘れずに](/emails/issues/125/meme.png)](https://twitter.com/fireship_dev/status/1587587531154989056)"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog-newsletter/125/index.mdx",
  "last_updated_timestamp": "2025-06-12T01:22:20.242208+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "d5ed9687af714b45cee4878ec6c59df8c7be188976ffd55c20efd0a47b4c61de"
  }
}